{"version":3,"file":"js/167.e705f8bd.js","mappings":"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","sources":["webpack://pipeline-manager/./node_modules/click-outside-vue3/dist/v-click-outside.umd.js","webpack://pipeline-manager/./node_modules/cytoscape-cola/cytoscape-cola.js","webpack://pipeline-manager/./node_modules/cytoscape-dagre/cytoscape-dagre.js","webpack://pipeline-manager/./node_modules/dagre/index.js","webpack://pipeline-manager/./node_modules/dagre/lib/acyclic.js","webpack://pipeline-manager/./node_modules/dagre/lib/add-border-segments.js","webpack://pipeline-manager/./node_modules/dagre/lib/coordinate-system.js","webpack://pipeline-manager/./node_modules/dagre/lib/data/list.js","webpack://pipeline-manager/./node_modules/dagre/lib/debug.js","webpack://pipeline-manager/./node_modules/dagre/lib/graphlib.js","webpack://pipeline-manager/./node_modules/dagre/lib/greedy-fas.js","webpack://pipeline-manager/./node_modules/dagre/lib/layout.js","webpack://pipeline-manager/./node_modules/dagre/lib/lodash.js","webpack://pipeline-manager/./node_modules/dagre/lib/nesting-graph.js","webpack://pipeline-manager/./node_modules/dagre/lib/normalize.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/add-subgraph-constraints.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/barycenter.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/build-layer-graph.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/cross-count.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/index.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/init-order.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/resolve-conflicts.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/sort-subgraph.js","webpack://pipeline-manager/./node_modules/dagre/lib/order/sort.js","webpack://pipeline-manager/./node_modules/dagre/lib/parent-dummy-chains.js","webpack://pipeline-manager/./node_modules/dagre/lib/position/bk.js","webpack://pipeline-manager/./node_modules/dagre/lib/position/index.js","webpack://pipeline-manager/./node_modules/dagre/lib/rank/feasible-tree.js","webpack://pipeline-manager/./node_modules/dagre/lib/rank/index.js","webpack://pipeline-manager/./node_modules/dagre/lib/rank/network-simplex.js","webpack://pipeline-manager/./node_modules/dagre/lib/rank/util.js","webpack://pipeline-manager/./node_modules/dagre/lib/util.js","webpack://pipeline-manager/./node_modules/dagre/lib/version.js"],"sourcesContent":["!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(e||self)[\"v-click-outside\"]=n()}(this,function(){var e=\"__v-click-outside\",n=\"undefined\"!=typeof window,t=\"undefined\"!=typeof navigator,r=n&&(\"ontouchstart\"in window||t&&navigator.msMaxTouchPoints>0)?[\"touchstart\"]:[\"click\"],i=function(e){var n=e.event,t=e.handler;(0,e.middleware)(n)&&t(n)},a=function(n,t){var a=function(e){var n=\"function\"==typeof e;if(!n&&\"object\"!=typeof e)throw new Error(\"v-click-outside: Binding value must be a function or an object\");return{handler:n?e:e.handler,middleware:e.middleware||function(e){return e},events:e.events||r,isActive:!(!1===e.isActive),detectIframe:!(!1===e.detectIframe),capture:Boolean(e.capture)}}(t.value),o=a.handler,d=a.middleware,c=a.detectIframe,u=a.capture;if(a.isActive){if(n[e]=a.events.map(function(e){return{event:e,srcTarget:document.documentElement,handler:function(e){return function(e){var n=e.el,t=e.event,r=e.handler,a=e.middleware,o=t.path||t.composedPath&&t.composedPath();(o?o.indexOf(n)<0:!n.contains(t.target))&&i({event:t,handler:r,middleware:a})}({el:n,event:e,handler:o,middleware:d})},capture:u}}),c){var l={event:\"blur\",srcTarget:window,handler:function(e){return function(e){var n=e.el,t=e.event,r=e.handler,a=e.middleware;setTimeout(function(){var e=document.activeElement;e&&\"IFRAME\"===e.tagName&&!n.contains(e)&&i({event:t,handler:r,middleware:a})},0)}({el:n,event:e,handler:o,middleware:d})},capture:u};n[e]=[].concat(n[e],[l])}n[e].forEach(function(t){var r=t.event,i=t.srcTarget,a=t.handler;return setTimeout(function(){n[e]&&i.addEventListener(r,a,u)},0)})}},o=function(n){(n[e]||[]).forEach(function(e){return e.srcTarget.removeEventListener(e.event,e.handler,e.capture)}),delete n[e]},d=n?{beforeMount:a,updated:function(e,n){var t=n.value,r=n.oldValue;JSON.stringify(t)!==JSON.stringify(r)&&(o(e),a(e,{value:t}))},unmounted:o}:{};return{install:function(e){e.directive(\"click-outside\",d)},directive:d}});\n//# sourceMappingURL=v-click-outside.umd.js.map\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"webcola\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"webcola\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeCola\"] = factory(require(\"webcola\"));\n\telse\n\t\troot[\"cytoscapeCola\"] = factory(root[\"webcola\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar assign = __webpack_require__(1);\nvar defaults = __webpack_require__(2);\nvar cola = __webpack_require__(5) || (typeof window !== 'undefined' ? window.cola : null);\nvar raf = __webpack_require__(4);\nvar isString = function isString(o) {\n  return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof('');\n};\nvar isNumber = function isNumber(o) {\n  return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof(0);\n};\nvar isObject = function isObject(o) {\n  return o != null && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof({});\n};\nvar isFunction = function isFunction(o) {\n  return o != null && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof(function () {});\n};\nvar nop = function nop() {};\n\nvar getOptVal = function getOptVal(val, ele) {\n  if (isFunction(val)) {\n    var fn = val;\n    return fn.apply(ele, [ele]);\n  } else {\n    return val;\n  }\n};\n\n// constructor\n// options : object containing layout options\nfunction ColaLayout(options) {\n  this.options = assign({}, defaults, options);\n}\n\n// runs the layout\nColaLayout.prototype.run = function () {\n  var layout = this;\n  var options = this.options;\n\n  layout.manuallyStopped = false;\n\n  var cy = options.cy; // cy is automatically populated for us in the constructor\n  var eles = options.eles;\n  var nodes = eles.nodes();\n  var edges = eles.edges();\n  var ready = false;\n\n  var isParent = function isParent(ele) {\n    return ele.isParent();\n  };\n\n  var parentNodes = nodes.filter(isParent);\n\n  var nonparentNodes = nodes.subtract(parentNodes);\n\n  var bb = options.boundingBox || { x1: 0, y1: 0, w: cy.width(), h: cy.height() };\n  if (bb.x2 === undefined) {\n    bb.x2 = bb.x1 + bb.w;\n  }\n  if (bb.w === undefined) {\n    bb.w = bb.x2 - bb.x1;\n  }\n  if (bb.y2 === undefined) {\n    bb.y2 = bb.y1 + bb.h;\n  }\n  if (bb.h === undefined) {\n    bb.h = bb.y2 - bb.y1;\n  }\n\n  var updateNodePositions = function updateNodePositions() {\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var dimensions = node.layoutDimensions(options);\n      var scratch = node.scratch('cola');\n\n      // update node dims\n      if (!scratch.updatedDims) {\n        var padding = getOptVal(options.nodeSpacing, node);\n\n        scratch.width = dimensions.w + 2 * padding;\n        scratch.height = dimensions.h + 2 * padding;\n      }\n    }\n\n    nodes.positions(function (node) {\n      var scratch = node.scratch().cola;\n      var retPos = void 0;\n\n      if (!node.grabbed() && nonparentNodes.contains(node)) {\n        retPos = {\n          x: bb.x1 + scratch.x,\n          y: bb.y1 + scratch.y\n        };\n\n        if (!isNumber(retPos.x) || !isNumber(retPos.y)) {\n          retPos = undefined;\n        }\n      }\n\n      return retPos;\n    });\n\n    nodes.updateCompoundBounds(); // because the way this layout sets positions is buggy for some reason; ref #878\n\n    if (!ready) {\n      onReady();\n      ready = true;\n    }\n\n    if (options.fit) {\n      cy.fit(options.padding);\n    }\n  };\n\n  var onDone = function onDone() {\n    if (options.ungrabifyWhileSimulating) {\n      grabbableNodes.grabify();\n    }\n\n    cy.off('destroy', destroyHandler);\n\n    nodes.off('grab free position', grabHandler);\n    nodes.off('lock unlock', lockHandler);\n\n    // trigger layoutstop when the layout stops (e.g. finishes)\n    layout.one('layoutstop', options.stop);\n    layout.trigger({ type: 'layoutstop', layout: layout });\n  };\n\n  var onReady = function onReady() {\n    // trigger layoutready when each node has had its position set at least once\n    layout.one('layoutready', options.ready);\n    layout.trigger({ type: 'layoutready', layout: layout });\n  };\n\n  var ticksPerFrame = options.refresh;\n\n  if (options.refresh < 0) {\n    ticksPerFrame = 1;\n  } else {\n    ticksPerFrame = Math.max(1, ticksPerFrame); // at least 1\n  }\n\n  var adaptor = layout.adaptor = cola.adaptor({\n    trigger: function trigger(e) {\n      // on sim event\n      var TICK = cola.EventType ? cola.EventType.tick : null;\n      var END = cola.EventType ? cola.EventType.end : null;\n\n      switch (e.type) {\n        case 'tick':\n        case TICK:\n          if (options.animate) {\n            updateNodePositions();\n          }\n          break;\n\n        case 'end':\n        case END:\n          updateNodePositions();\n          if (!options.infinite) {\n            onDone();\n          }\n          break;\n      }\n    },\n\n    kick: function kick() {\n      // kick off the simulation\n      //let skip = 0;\n\n      var firstTick = true;\n\n      var inftick = function inftick() {\n        if (layout.manuallyStopped) {\n          onDone();\n\n          return true;\n        }\n\n        var ret = adaptor.tick();\n\n        if (!options.infinite && !firstTick) {\n          adaptor.convergenceThreshold(options.convergenceThreshold);\n        }\n\n        firstTick = false;\n\n        if (ret && options.infinite) {\n          // resume layout if done\n          adaptor.resume(); // resume => new kick\n        }\n\n        return ret; // allow regular finish b/c of new kick\n      };\n\n      var multitick = function multitick() {\n        // multiple ticks in a row\n        var ret = void 0;\n\n        for (var i = 0; i < ticksPerFrame && !ret; i++) {\n          ret = ret || inftick(); // pick up true ret vals => sim done\n        }\n\n        return ret;\n      };\n\n      if (options.animate) {\n        var frame = function frame() {\n          if (multitick()) {\n            return;\n          }\n\n          raf(frame);\n        };\n\n        raf(frame);\n      } else {\n        while (!inftick()) {\n          // keep going...\n        }\n      }\n    },\n\n    on: nop, // dummy; not needed\n\n    drag: nop // not needed for our case\n  });\n  layout.adaptor = adaptor;\n\n  // if set no grabbing during layout\n  var grabbableNodes = nodes.filter(':grabbable');\n  if (options.ungrabifyWhileSimulating) {\n    grabbableNodes.ungrabify();\n  }\n\n  var destroyHandler = void 0;\n  cy.one('destroy', destroyHandler = function destroyHandler() {\n    layout.stop();\n  });\n\n  // handle node dragging\n  var grabHandler = void 0;\n  nodes.on('grab free position', grabHandler = function grabHandler(e) {\n    var node = this;\n    var scrCola = node.scratch().cola;\n    var pos = node.position();\n    var nodeIsTarget = e.cyTarget === node || e.target === node;\n\n    if (!nodeIsTarget) {\n      return;\n    }\n\n    switch (e.type) {\n      case 'grab':\n        adaptor.dragstart(scrCola);\n        break;\n      case 'free':\n        adaptor.dragend(scrCola);\n        break;\n      case 'position':\n        // only update when different (i.e. manual .position() call or drag) so we don't loop needlessly\n        if (scrCola.px !== pos.x - bb.x1 || scrCola.py !== pos.y - bb.y1) {\n          scrCola.px = pos.x - bb.x1;\n          scrCola.py = pos.y - bb.y1;\n        }\n        break;\n    }\n  });\n\n  var lockHandler = void 0;\n  nodes.on('lock unlock', lockHandler = function lockHandler() {\n    var node = this;\n    var scrCola = node.scratch().cola;\n\n    scrCola.fixed = node.locked();\n\n    if (node.locked()) {\n      adaptor.dragstart(scrCola);\n    } else {\n      adaptor.dragend(scrCola);\n    }\n  });\n\n  // add nodes to cola\n  adaptor.nodes(nonparentNodes.map(function (node, i) {\n    var padding = getOptVal(options.nodeSpacing, node);\n    var pos = node.position();\n    var dimensions = node.layoutDimensions(options);\n\n    var struct = node.scratch().cola = {\n      x: options.randomize && !node.locked() || pos.x === undefined ? Math.round(Math.random() * bb.w) : pos.x,\n      y: options.randomize && !node.locked() || pos.y === undefined ? Math.round(Math.random() * bb.h) : pos.y,\n      width: dimensions.w + 2 * padding,\n      height: dimensions.h + 2 * padding,\n      index: i,\n      fixed: node.locked()\n    };\n\n    return struct;\n  }));\n\n  // the constraints to be added on nodes\n  var constraints = [];\n\n  if (options.alignment) {\n    // then set alignment constraints\n\n    if (options.alignment.vertical) {\n      var verticalAlignments = options.alignment.vertical;\n      verticalAlignments.forEach(function (alignment) {\n        var offsetsX = [];\n        alignment.forEach(function (nodeData) {\n          var node = nodeData.node;\n          var scrCola = node.scratch().cola;\n          var index = scrCola.index;\n          offsetsX.push({\n            node: index,\n            offset: nodeData.offset ? nodeData.offset : 0\n          });\n        });\n        constraints.push({\n          type: 'alignment',\n          axis: 'x',\n          offsets: offsetsX\n        });\n      });\n    }\n\n    if (options.alignment.horizontal) {\n      var horizontalAlignments = options.alignment.horizontal;\n      horizontalAlignments.forEach(function (alignment) {\n        var offsetsY = [];\n        alignment.forEach(function (nodeData) {\n          var node = nodeData.node;\n          var scrCola = node.scratch().cola;\n          var index = scrCola.index;\n          offsetsY.push({\n            node: index,\n            offset: nodeData.offset ? nodeData.offset : 0\n          });\n        });\n        constraints.push({\n          type: 'alignment',\n          axis: 'y',\n          offsets: offsetsY\n        });\n      });\n    }\n  }\n\n  // if gapInequalities variable is set add each inequality constraint to list of constraints\n  if (options.gapInequalities) {\n    options.gapInequalities.forEach(function (inequality) {\n\n      // for the constraints to be passed to cola layout adaptor use indices of nodes,\n      // not the nodes themselves\n      var leftIndex = inequality.left.scratch().cola.index;\n      var rightIndex = inequality.right.scratch().cola.index;\n\n      constraints.push({\n        axis: inequality.axis,\n        left: leftIndex,\n        right: rightIndex,\n        gap: inequality.gap,\n        equality: inequality.equality\n      });\n    });\n  }\n\n  // add constraints if any\n  if (constraints.length > 0) {\n    adaptor.constraints(constraints);\n  }\n\n  // add compound nodes to cola\n  adaptor.groups(parentNodes.map(function (node, i) {\n    // add basic group incl leaf nodes\n    var optPadding = getOptVal(options.nodeSpacing, node);\n    var getPadding = function getPadding(d) {\n      return parseFloat(node.style('padding-' + d));\n    };\n\n    var pleft = getPadding('left') + optPadding;\n    var pright = getPadding('right') + optPadding;\n    var ptop = getPadding('top') + optPadding;\n    var pbottom = getPadding('bottom') + optPadding;\n\n    node.scratch().cola = {\n      index: i,\n\n      padding: Math.max(pleft, pright, ptop, pbottom),\n\n      // leaves should only contain direct descendants (children),\n      // not the leaves of nested compound nodes or any nodes that are compounds themselves\n      leaves: node.children().intersection(nonparentNodes).map(function (child) {\n        return child[0].scratch().cola.index;\n      }),\n\n      fixed: node.locked()\n    };\n\n    return node;\n  }).map(function (node) {\n    // add subgroups\n    node.scratch().cola.groups = node.children().intersection(parentNodes).map(function (child) {\n      return child.scratch().cola.index;\n    });\n\n    return node.scratch().cola;\n  }));\n\n  // get the edge length setting mechanism\n  var length = void 0;\n  var lengthFnName = void 0;\n  if (options.edgeLength != null) {\n    length = options.edgeLength;\n    lengthFnName = 'linkDistance';\n  } else if (options.edgeSymDiffLength != null) {\n    length = options.edgeSymDiffLength;\n    lengthFnName = 'symmetricDiffLinkLengths';\n  } else if (options.edgeJaccardLength != null) {\n    length = options.edgeJaccardLength;\n    lengthFnName = 'jaccardLinkLengths';\n  } else {\n    length = 100;\n    lengthFnName = 'linkDistance';\n  }\n\n  var lengthGetter = function lengthGetter(link) {\n    return link.calcLength;\n  };\n\n  // add the edges to cola\n  adaptor.links(edges.stdFilter(function (edge) {\n    return nonparentNodes.contains(edge.source()) && nonparentNodes.contains(edge.target());\n  }).map(function (edge) {\n    var c = edge.scratch().cola = {\n      source: edge.source()[0].scratch().cola.index,\n      target: edge.target()[0].scratch().cola.index\n    };\n\n    if (length != null) {\n      c.calcLength = getOptVal(length, edge);\n    }\n\n    return c;\n  }));\n\n  adaptor.size([bb.w, bb.h]);\n\n  if (length != null) {\n    adaptor[lengthFnName](lengthGetter);\n  }\n\n  // set the flow of cola\n  if (options.flow) {\n    var flow = void 0;\n    var defAxis = 'y';\n    var defMinSep = 50;\n\n    if (isString(options.flow)) {\n      flow = {\n        axis: options.flow,\n        minSeparation: defMinSep\n      };\n    } else if (isNumber(options.flow)) {\n      flow = {\n        axis: defAxis,\n        minSeparation: options.flow\n      };\n    } else if (isObject(options.flow)) {\n      flow = options.flow;\n\n      flow.axis = flow.axis || defAxis;\n      flow.minSeparation = flow.minSeparation != null ? flow.minSeparation : defMinSep;\n    } else {\n      // e.g. options.flow: true\n      flow = {\n        axis: defAxis,\n        minSeparation: defMinSep\n      };\n    }\n\n    adaptor.flowLayout(flow.axis, flow.minSeparation);\n  }\n\n  layout.trigger({ type: 'layoutstart', layout: layout });\n\n  adaptor.avoidOverlaps(options.avoidOverlap).handleDisconnected(options.handleDisconnected).start(options.unconstrIter, options.userConstIter, options.allConstIter, undefined, // gridSnapIterations = 0\n  undefined, // keepRunning = true\n  options.centerGraph);\n\n  if (!options.infinite) {\n    setTimeout(function () {\n      if (!layout.manuallyStopped) {\n        adaptor.stop();\n      }\n    }, options.maxSimulationTime);\n  }\n\n  return this; // chaining\n};\n\n// called on continuous layouts to stop them before they finish\nColaLayout.prototype.stop = function () {\n  if (this.adaptor) {\n    this.manuallyStopped = true;\n    this.adaptor.stop();\n  }\n\n  return this; // chaining\n};\n\nmodule.exports = ColaLayout;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Simple, internal Object.assign() polyfill for options objects etc.\n\nmodule.exports = Object.assign != null ? Object.assign.bind(Object) : function (tgt) {\n  for (var _len = arguments.length, srcs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    srcs[_key - 1] = arguments[_key];\n  }\n\n  srcs.filter(function (src) {\n    return src != null;\n  }).forEach(function (src) {\n    Object.keys(src).forEach(function (k) {\n      return tgt[k] = src[k];\n    });\n  });\n\n  return tgt;\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// default layout options\nvar defaults = {\n  animate: true, // whether to show the layout as it's running\n  refresh: 1, // number of ticks per frame; higher is faster but more jerky\n  maxSimulationTime: 4000, // max length in ms to run the layout\n  ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n  fit: true, // on every layout reposition of nodes, fit the viewport\n  padding: 30, // padding around the simulation\n  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n  nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n\n  // layout event callbacks\n  ready: function ready() {}, // on layoutready\n  stop: function stop() {}, // on layoutstop\n\n  // positioning options\n  randomize: false, // use random node positions at beginning of layout\n  avoidOverlap: true, // if true, prevents overlap of node bounding boxes\n  handleDisconnected: true, // if true, avoids disconnected components from overlapping\n  convergenceThreshold: 0.01, // when the alpha value (system energy) falls below this value, the layout stops\n  nodeSpacing: function nodeSpacing(node) {\n    return 10;\n  }, // extra spacing around nodes\n  flow: undefined, // use DAG/tree flow layout if specified, e.g. { axis: 'y', minSeparation: 30 }\n  alignment: undefined, // relative alignment constraints on nodes, e.g. function( node ){ return { x: 0, y: 1 } }\n  gapInequalities: undefined, // list of inequality constraints for the gap between the nodes, e.g. [{\"axis\":\"y\", \"left\":node1, \"right\":node2, \"gap\":25}]\n  centerGraph: true, // adjusts the node positions initially to center the graph (pass false if you want to start the layout from the current position)\n\n\n  // different methods of specifying edge length\n  // each can be a constant numerical value or a function like `function( edge ){ return 2; }`\n  edgeLength: undefined, // sets edge length directly in simulation\n  edgeSymDiffLength: undefined, // symmetric diff edge length in simulation\n  edgeJaccardLength: undefined, // jaccard edge length in simulation\n\n  // iterations of cola algorithm; uses default values on undefined\n  unconstrIter: undefined, // unconstrained initial layout iterations\n  userConstIter: undefined, // initial layout iterations with user-specified constraints\n  allConstIter: undefined, // initial layout iterations with all constraints including non-overlap\n\n  // infinite layout options\n  infinite: false // overrides all other options for a forces-all-the-time mode\n};\n\nmodule.exports = defaults;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar impl = __webpack_require__(0);\n\n// registers the extension on a cytoscape lib ref\nvar register = function register(cytoscape) {\n  if (!cytoscape) {\n    return;\n  } // can't register if cytoscape unspecified\n\n  cytoscape('layout', 'cola', impl); // register with cytoscape.js\n};\n\nif (typeof cytoscape !== 'undefined') {\n  // expose to global cytoscape (i.e. window.cytoscape)\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar raf = void 0;\n\nif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) !== ( true ? \"undefined\" : _typeof(undefined))) {\n  raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (fn) {\n    return setTimeout(fn, 16);\n  };\n} else {\n  // if not available, all you get is immediate calls\n  raf = function raf(cb) {\n    cb();\n  };\n}\n\nmodule.exports = raf;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ })\n/******/ ]);\n});","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dagre\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"dagre\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeDagre\"] = factory(require(\"dagre\"));\n\telse\n\t\troot[\"cytoscapeDagre\"] = factory(root[\"dagre\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar impl = __webpack_require__(1); // registers the extension on a cytoscape lib ref\n\n\nvar register = function register(cytoscape) {\n  if (!cytoscape) {\n    return;\n  } // can't register if cytoscape unspecified\n\n\n  cytoscape('layout', 'dagre', impl); // register with cytoscape.js\n};\n\nif (typeof cytoscape !== 'undefined') {\n  // expose to global cytoscape (i.e. window.cytoscape)\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar isFunction = function isFunction(o) {\n  return typeof o === 'function';\n};\n\nvar defaults = __webpack_require__(2);\n\nvar assign = __webpack_require__(3);\n\nvar dagre = __webpack_require__(4); // constructor\n// options : object containing layout options\n\n\nfunction DagreLayout(options) {\n  this.options = assign({}, defaults, options);\n} // runs the layout\n\n\nDagreLayout.prototype.run = function () {\n  var options = this.options;\n  var layout = this;\n  var cy = options.cy; // cy is automatically populated for us in the constructor\n\n  var eles = options.eles;\n\n  var getVal = function getVal(ele, val) {\n    return isFunction(val) ? val.apply(ele, [ele]) : val;\n  };\n\n  var bb = options.boundingBox || {\n    x1: 0,\n    y1: 0,\n    w: cy.width(),\n    h: cy.height()\n  };\n\n  if (bb.x2 === undefined) {\n    bb.x2 = bb.x1 + bb.w;\n  }\n\n  if (bb.w === undefined) {\n    bb.w = bb.x2 - bb.x1;\n  }\n\n  if (bb.y2 === undefined) {\n    bb.y2 = bb.y1 + bb.h;\n  }\n\n  if (bb.h === undefined) {\n    bb.h = bb.y2 - bb.y1;\n  }\n\n  var g = new dagre.graphlib.Graph({\n    multigraph: true,\n    compound: true\n  });\n  var gObj = {};\n\n  var setGObj = function setGObj(name, val) {\n    if (val != null) {\n      gObj[name] = val;\n    }\n  };\n\n  setGObj('nodesep', options.nodeSep);\n  setGObj('edgesep', options.edgeSep);\n  setGObj('ranksep', options.rankSep);\n  setGObj('rankdir', options.rankDir);\n  setGObj('align', options.align);\n  setGObj('ranker', options.ranker);\n  setGObj('acyclicer', options.acyclicer);\n  g.setGraph(gObj);\n  g.setDefaultEdgeLabel(function () {\n    return {};\n  });\n  g.setDefaultNodeLabel(function () {\n    return {};\n  }); // add nodes to dagre\n\n  var nodes = eles.nodes();\n\n  if (isFunction(options.sort)) {\n    nodes = nodes.sort(options.sort);\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    var nbb = node.layoutDimensions(options);\n    g.setNode(node.id(), {\n      width: nbb.w,\n      height: nbb.h,\n      name: node.id()\n    }); // console.log( g.node(node.id()) );\n  } // set compound parents\n\n\n  for (var _i = 0; _i < nodes.length; _i++) {\n    var _node = nodes[_i];\n\n    if (_node.isChild()) {\n      g.setParent(_node.id(), _node.parent().id());\n    }\n  } // add edges to dagre\n\n\n  var edges = eles.edges().stdFilter(function (edge) {\n    return !edge.source().isParent() && !edge.target().isParent(); // dagre can't handle edges on compound nodes\n  });\n\n  if (isFunction(options.sort)) {\n    edges = edges.sort(options.sort);\n  }\n\n  for (var _i2 = 0; _i2 < edges.length; _i2++) {\n    var edge = edges[_i2];\n    g.setEdge(edge.source().id(), edge.target().id(), {\n      minlen: getVal(edge, options.minLen),\n      weight: getVal(edge, options.edgeWeight),\n      name: edge.id()\n    }, edge.id()); // console.log( g.edge(edge.source().id(), edge.target().id(), edge.id()) );\n  }\n\n  dagre.layout(g);\n  var gNodeIds = g.nodes();\n\n  for (var _i3 = 0; _i3 < gNodeIds.length; _i3++) {\n    var id = gNodeIds[_i3];\n    var n = g.node(id);\n    cy.getElementById(id).scratch().dagre = n;\n  }\n\n  var dagreBB;\n\n  if (options.boundingBox) {\n    dagreBB = {\n      x1: Infinity,\n      x2: -Infinity,\n      y1: Infinity,\n      y2: -Infinity\n    };\n    nodes.forEach(function (node) {\n      var dModel = node.scratch().dagre;\n      dagreBB.x1 = Math.min(dagreBB.x1, dModel.x);\n      dagreBB.x2 = Math.max(dagreBB.x2, dModel.x);\n      dagreBB.y1 = Math.min(dagreBB.y1, dModel.y);\n      dagreBB.y2 = Math.max(dagreBB.y2, dModel.y);\n    });\n    dagreBB.w = dagreBB.x2 - dagreBB.x1;\n    dagreBB.h = dagreBB.y2 - dagreBB.y1;\n  } else {\n    dagreBB = bb;\n  }\n\n  var constrainPos = function constrainPos(p) {\n    if (options.boundingBox) {\n      var xPct = dagreBB.w === 0 ? 0 : (p.x - dagreBB.x1) / dagreBB.w;\n      var yPct = dagreBB.h === 0 ? 0 : (p.y - dagreBB.y1) / dagreBB.h;\n      return {\n        x: bb.x1 + xPct * bb.w,\n        y: bb.y1 + yPct * bb.h\n      };\n    } else {\n      return p;\n    }\n  };\n\n  nodes.layoutPositions(layout, options, function (ele) {\n    ele = _typeof(ele) === \"object\" ? ele : this;\n    var dModel = ele.scratch().dagre;\n    return constrainPos({\n      x: dModel.x,\n      y: dModel.y\n    });\n  });\n  return this; // chaining\n};\n\nmodule.exports = DagreLayout;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nvar defaults = {\n  // dagre algo options, uses default value on undefined\n  nodeSep: undefined,\n  // the separation between adjacent nodes in the same rank\n  edgeSep: undefined,\n  // the separation between adjacent edges in the same rank\n  rankSep: undefined,\n  // the separation between adjacent nodes in the same rank\n  rankDir: undefined,\n  // 'TB' for top to bottom flow, 'LR' for left to right,\n  align: undefined,\n  // alignment for rank nodes. Can be 'UL', 'UR', 'DL', or 'DR', where U = up, D = down, L = left, and R = right\n  acyclicer: undefined,\n  // If set to 'greedy', uses a greedy heuristic for finding a feedback arc set for a graph.\n  // A feedback arc set is a set of edges that can be removed to make a graph acyclic.\n  ranker: undefined,\n  // Type of algorithm to assigns a rank to each node in the input graph.\n  // Possible values: network-simplex, tight-tree or longest-path\n  minLen: function minLen(edge) {\n    return 1;\n  },\n  // number of ranks to keep between the source and target of the edge\n  edgeWeight: function edgeWeight(edge) {\n    return 1;\n  },\n  // higher weight edges are generally made shorter and straighter than lower weight edges\n  // general layout options\n  fit: true,\n  // whether to fit to viewport\n  padding: 30,\n  // fit padding\n  spacingFactor: undefined,\n  // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n  nodeDimensionsIncludeLabels: false,\n  // whether labels should be included in determining the space used by a node\n  animate: false,\n  // whether to transition the node positions\n  animateFilter: function animateFilter(node, i) {\n    return true;\n  },\n  // whether to animate specific nodes when animation is on; non-animated nodes immediately go to their final positions\n  animationDuration: 500,\n  // duration of animation in ms if enabled\n  animationEasing: undefined,\n  // easing of animation if enabled\n  boundingBox: undefined,\n  // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n  transform: function transform(node, pos) {\n    return pos;\n  },\n  // a function that applies a transform to the final node position\n  ready: function ready() {},\n  // on layoutready\n  sort: undefined,\n  // a sorting function to order the nodes and edges; e.g. function(a, b){ return a.data('weight') - b.data('weight') }\n  // because cytoscape dagre creates a directed graph, and directed graphs use the node order as a tie breaker when\n  // defining the topology of a graph, this sort function can help ensure the correct order of the nodes/edges.\n  // this feature is most useful when adding and removing the same nodes and edges multiple times in a graph.\n  stop: function stop() {} // on layoutstop\n\n};\nmodule.exports = defaults;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// Simple, internal Object.assign() polyfill for options objects etc.\nmodule.exports = Object.assign != null ? Object.assign.bind(Object) : function (tgt) {\n  for (var _len = arguments.length, srcs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    srcs[_key - 1] = arguments[_key];\n  }\n\n  srcs.forEach(function (src) {\n    Object.keys(src).forEach(function (k) {\n      return tgt[k] = src[k];\n    });\n  });\n  return tgt;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__4__;\n\n/***/ })\n/******/ ]);\n});","/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nmodule.exports = {\n  graphlib: require(\"./lib/graphlib\"),\n\n  layout: require(\"./lib/layout\"),\n  debug: require(\"./lib/debug\"),\n  util: {\n    time: require(\"./lib/util\").time,\n    notime: require(\"./lib/util\").notime\n  },\n  version: require(\"./lib/version\")\n};\n","\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar greedyFAS = require(\"./greedy-fas\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = (g.graph().acyclicer === \"greedy\"\n    ? greedyFAS(g, weightFn(g))\n    : dfsFAS(g));\n  _.forEach(fas, function(e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function(e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function(e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function(e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","var _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = addBorderSegments;\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, \"minRank\")) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1;\n        rank < maxRank;\n        ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = {\n  adjust: adjust,\n  undo: undo\n};\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"bt\" || rankDir === \"rl\") {\n    reverseY(g);\n  }\n\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function(v) { swapWidthHeightOne(g.node(v)); });\n  _.forEach(g.edges(), function(e) { swapWidthHeightOne(g.edge(e)); });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function(v) { reverseYOne(g.node(v)); });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (_.has(edge, \"y\")) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function(v) { swapXYOne(g.node(v)); });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (_.has(edge, \"x\")) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n","var _ = require(\"./lodash\");\nvar util = require(\"./util\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  debugOrdering: debugOrdering\n};\n\n/* istanbul ignore next */\nfunction debugOrdering(g) {\n  var layerMatrix = util.buildLayerMatrix(g);\n\n  var h = new Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _.forEach(g.nodes(), function(v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, \"layer\" + g.node(v).rank);\n  });\n\n  _.forEach(g.edges(), function(e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _.forEach(layerMatrix, function(layer, i) {\n    var layerV = \"layer\" + i;\n    h.setNode(layerV, { rank: \"same\" });\n    _.reduce(layer, function(u, v) {\n      h.setEdge(u, v, { style: \"invis\" });\n      return v;\n    });\n  });\n\n  return h;\n}\n","/* global window */\n\nvar graphlib;\n\nif (typeof require === \"function\") {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {\n    // continue regardless of error\n  }\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n","var _ = require(\"./lodash\");\nvar Graph = require(\"./graphlib\").Graph;\nvar List = require(\"./data/list\");\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nmodule.exports = greedyFAS;\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(_.map(results, function(e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }\n    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function(edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function(edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry[\"in\"] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function(v) {\n    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function(e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function(v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar acyclic = require(\"./acyclic\");\nvar normalize = require(\"./normalize\");\nvar rank = require(\"./rank\");\nvar normalizeRanks = require(\"./util\").normalizeRanks;\nvar parentDummyChains = require(\"./parent-dummy-chains\");\nvar removeEmptyRanks = require(\"./util\").removeEmptyRanks;\nvar nestingGraph = require(\"./nesting-graph\");\nvar addBorderSegments = require(\"./add-border-segments\");\nvar coordinateSystem = require(\"./coordinate-system\");\nvar order = require(\"./order\");\nvar position = require(\"./position\");\nvar util = require(\"./util\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = layout;\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time(\"layout\", function() {\n    var layoutGraph = \n      time(\"  buildLayoutGraph\", function() { return buildLayoutGraph(g); });\n    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });\n    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });\n  });\n}\n\nfunction runLayout(g, time) {\n  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });\n  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });\n  time(\"    acyclic\",                function() { acyclic.run(g); });\n  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });\n  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });\n  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });\n  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });\n  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });\n  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });\n  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });\n  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });\n  time(\"    normalize.run\",          function() { normalize.run(g); });\n  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });\n  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });\n  time(\"    order\",                  function() { order(g); });\n  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });\n  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });\n  time(\"    position\",               function() { position(g); });\n  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });\n  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });\n  time(\"    normalize.undo\",         function() { normalize.undo(g); });\n  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });\n  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });\n  time(\"    translateGraph\",         function() { translateGraph(g); });\n  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });\n  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });\n  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function(v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, \"x\")) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" };\nvar graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"];\nvar nodeNumAttrs = [\"width\", \"height\"];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"];\nvar edgeDefaults = {\n  minlen: 1, weight: 1, width: 0, height: 0,\n  labeloffset: 10, labelpos: \"r\"\n};\nvar edgeAttrs = [\"labelpos\"];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_.merge({},\n    graphDefaults,\n    selectNumberAttrs(graph, graphNumAttrs),\n    _.pick(graph, graphAttrs)));\n\n  _.forEach(inputGraph.nodes(), function(v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({},\n      edgeDefaults,\n      selectNumberAttrs(edge, edgeNumAttrs),\n      _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== \"c\") {\n      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"edge-proxy\") {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function(v) { getExtremes(g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function(p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, \"x\")) { edge.x -= minX; }\n    if (_.has(edge, \"y\")) { edge.y -= minY; }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n      case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;\n      case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function(v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function(v) {\n    if (g.node(v).dummy === \"border\") {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function(layer) {\n    var orderShift = 0;\n    _.forEach(layer, function(v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function(selfEdge) {\n        util.addDummyNode(g, \"selfedge\", {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + (++orderShift),\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, \"_se\");\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"selfedge\") {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + 2 * dx / 3, y: y - dy },\n        { x: x + 5 * dx / 6, y: y - dy },\n        { x: x +     dx    , y: y },\n        { x: x + 5 * dx / 6, y: y + dy },\n        { x: x + 2 * dx / 3, y: y + dy }\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function(v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n","/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = {\n      cloneDeep: require(\"lodash/cloneDeep\"),\n      constant: require(\"lodash/constant\"),\n      defaults: require(\"lodash/defaults\"),\n      each: require(\"lodash/each\"),\n      filter: require(\"lodash/filter\"),\n      find: require(\"lodash/find\"),\n      flatten: require(\"lodash/flatten\"),\n      forEach: require(\"lodash/forEach\"),\n      forIn: require(\"lodash/forIn\"),\n      has:  require(\"lodash/has\"),\n      isUndefined: require(\"lodash/isUndefined\"),\n      last: require(\"lodash/last\"),\n      map: require(\"lodash/map\"),\n      mapValues: require(\"lodash/mapValues\"),\n      max: require(\"lodash/max\"),\n      merge: require(\"lodash/merge\"),\n      min: require(\"lodash/min\"),\n      minBy: require(\"lodash/minBy\"),\n      now: require(\"lodash/now\"),\n      pick: require(\"lodash/pick\"),\n      range: require(\"lodash/range\"),\n      reduce: require(\"lodash/reduce\"),\n      sortBy: require(\"lodash/sortBy\"),\n      uniqueId: require(\"lodash/uniqueId\"),\n      values: require(\"lodash/values\"),\n      zipObject: require(\"lodash/zipObject\"),\n    };\n  } catch (e) {\n    // continue regardless of error\n  }\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n","var _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  cleanup: cleanup\n};\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, \"root\", {}, \"_root\");\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function(e) { g.edge(e).minlen *= nodeSep; });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, \"_bt\");\n  var bottom = util.addBorderNode(g, \"_bb\");\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function(child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function(v) { dfs(v, 1); });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(g.edges(), function(acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function(edge) { normalizeEdge(g, edge); });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0, height: 0,\n      edgeLabel: edgeLabel, edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","var _ = require(\"../lodash\");\n\nmodule.exports = addSubgraphConstraints;\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function(v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","var _ = require(\"../lodash\");\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function(v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(inV, function(acc, e) {\n        var edge = g.edge(e),\n          nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + (edge.weight * nodeU.order),\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\n","var _ = require(\"../lodash\");\nvar Graph = require(\"../graphlib\").Graph;\n\nmodule.exports = buildLayerGraph;\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true }).setGraph({ root: root })\n      .setDefaultNodeLabel(function(v) { return g.node(v); });\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function(e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, \"minRank\")) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId(\"_root\"))));\n  return v;\n}\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = crossCount;\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i-1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(southLayer,\n    _.map(southLayer, function (v, i) { return i; }));\n  var southEntries = _.flatten(_.map(northLayer, function(v) {\n    return _.sortBy(_.map(g.outEdges(v), function(e) {\n      return { pos: southPos[e.w], weight: g.edge(e).weight };\n    }), \"pos\");\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function() { return 0; });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(southEntries.forEach(function(entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = (index - 1) >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar initOrder = require(\"./init-order\");\nvar crossCount = require(\"./cross-count\");\nvar sortSubgraph = require(\"./sort-subgraph\");\nvar buildLayerGraph = require(\"./build-layer-graph\");\nvar addSubgraphConstraints = require(\"./add-subgraph-constraints\");\nvar Graph = require(\"../graphlib\").Graph;\nvar util = require(\"../util\");\n\nmodule.exports = order;\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function(rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function(lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function(v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function(layer) {\n    _.forEach(layer, function(v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = initOrder;\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function(v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; }));\n  var layers = _.map(_.range(maxRank + 1), function() { return []; });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = resolveConflicts;\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function(entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function(e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function(entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function(uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_.isUndefined(uEntry.barycenter) ||\n          _.isUndefined(vEntry.barycenter) ||\n          uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function(wEntry) {\n      wEntry[\"in\"].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry[\"in\"].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(_.filter(entries, function(entry) { return !entry.merged; }),\n    function(entry) {\n      return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n    });\n\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","var _ = require(\"../lodash\");\nvar barycenter = require(\"./barycenter\");\nvar resolveConflicts = require(\"./resolve-conflicts\");\nvar sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight: undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","var _ = require(\"../lodash\");\nvar util = require(\"../util\");\n\nmodule.exports = sort;\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function(entry) {\n    return _.has(entry, \"barycenter\");\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function(entry) { return -entry.i; }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function(entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","var _ = require(\"./lodash\");\n\nmodule.exports = parentDummyChains;\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca &&\n               g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 &&\n               g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent &&\n           (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar Graph = require(\"../graphlib\").Graph;\nvar util = require(\"../util\");\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nmodule.exports = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var\n      // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function(v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i +1), function(scanNode) {\n          _.forEach(g.predecessors(scanNode), function(u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) &&\n                !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function(i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function(u) {\n          var uNode = g.node(u);\n          if (uNode.dummy &&\n              (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function(v, southLookahead) {\n      if (g.node(v).dummy === \"border\") {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function(u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function(layer) {\n    _.forEach(layer, function(v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function(layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function(v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function(w) { return pos[w]; });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v &&\n              prevIdx < pos[w] &&\n              !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function(acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function(acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function(v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function(layer) {\n    var u;\n    _.forEach(layer, function(v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach([\"u\", \"d\"], function(vert) {\n    _.forEach([\"l\", \"r\"], function(horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === \"l\" ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function(x) { return x + delta; });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function(ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(\n    findType1Conflicts(g, layering),\n    findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach([\"u\", \"d\"], function(vert) {\n    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();\n    _.forEach([\"l\", \"r\"], function(horiz) {\n      if (horiz === \"r\") {\n        adjustedLayering = _.map(adjustedLayering, function(inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === \"u\" ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering,\n        align.root, align.align, horiz === \"r\");\n      if (horiz === \"r\") {\n        xs = _.mapValues(xs, function(x) { return -x; });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function(g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, \"labelpos\")) {\n      switch (vLabel.labelpos.toLowerCase()) {\n      case \"l\": delta = -vLabel.width / 2; break;\n      case \"r\": delta = vLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, \"labelpos\")) {\n      switch (wLabel.labelpos.toLowerCase()) {\n      case \"l\": delta = wLabel.width / 2; break;\n      case \"r\": delta = -wLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar util = require(\"../util\");\nvar positionX = require(\"./bk\").positionX;\n\nmodule.exports = position;\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forEach(positionX(g), function(x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function(layer) {\n    var maxHeight = _.max(_.map(layer, function(v) { return g.node(v).height; }));\n    _.forEach(layer, function(v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar Graph = require(\"../graphlib\").Graph;\nvar slack = require(\"./util\").slack;\n\nmodule.exports = feasibleTree;\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function(e) {\n      var edgeV = e.v,\n        w = (v === edgeV) ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function(e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function(v) {\n    g.node(v).rank += delta;\n  });\n}\n","\"use strict\";\n\nvar rankUtil = require(\"./util\");\nvar longestPath = rankUtil.longestPath;\nvar feasibleTree = require(\"./feasible-tree\");\nvar networkSimplex = require(\"./network-simplex\");\n\nmodule.exports = rank;\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch(g.graph().ranker) {\n  case \"network-simplex\": networkSimplexRanker(g); break;\n  case \"tight-tree\": tightTreeRanker(g); break;\n  case \"longest-path\": longestPathRanker(g); break;\n  default: networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar feasibleTree = require(\"./feasible-tree\");\nvar slack = require(\"./util\").slack;\nvar initRank = require(\"./util\").longestPath;\nvar preorder = require(\"../graphlib\").alg.preorder;\nvar postorder = require(\"../graphlib\").alg.postorder;\nvar simplify = require(\"../util\").simplify;\n\nmodule.exports = networkSimplex;\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  initRank(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function(v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function(e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function(w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function(e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function(edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n           flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _.minBy(candidates, function(edge) { return slack(g, edge); });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function(v) { return !g.node(v).parent; });\n  var vs = preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function(v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = {\n  longestPath: longestPath,\n  slack: slack\n};\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(_.map(g.outEdges(v), function(e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n        rank === undefined || // return value of _.map([]) for Lodash 4\n        rank === null) { // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","/* eslint \"no-console\": off */\n\n\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.forEach(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","module.exports = \"0.8.5\";\n"],"names":["e","n","t","r","i","a","o","d","module","exports","window","navigator","msMaxTouchPoints","event","handler","middleware","Error","events","isActive","detectIframe","capture","Boolean","value","c","u","map","srcTarget","document","documentElement","el","path","composedPath","indexOf","contains","target","l","setTimeout","activeElement","tagName","concat","forEach","addEventListener","removeEventListener","beforeMount","updated","oldValue","JSON","stringify","unmounted","install","directive","factory","__WEBPACK_EXTERNAL_MODULE_5__","modules","installedModules","moduleId","call","m","name","getter","Object","defineProperty","configurable","enumerable","get","__esModule","object","property","prototype","hasOwnProperty","p","s","_typeof","Symbol","iterator","obj","constructor","assign","defaults","cola","raf","isNumber","nop","getOptVal","val","ele","apply","ColaLayout","options","this","run","layout","manuallyStopped","cy","eles","nodes","edges","ready","parentNodes","filter","isParent","nonparentNodes","subtract","bb","boundingBox","x1","y1","w","width","h","height","undefined","x2","y2","updateNodePositions","length","node","dimensions","layoutDimensions","scratch","updatedDims","padding","nodeSpacing","positions","retPos","grabbed","x","y","updateCompoundBounds","onReady","fit","onDone","ungrabifyWhileSimulating","grabbableNodes","grabify","off","destroyHandler","grabHandler","lockHandler","one","stop","trigger","type","ticksPerFrame","refresh","Math","max","adaptor","TICK","EventType","tick","END","end","animate","infinite","kick","firstTick","inftick","ret","convergenceThreshold","resume","frame","multitick","on","drag","ungrabify","scrCola","pos","position","cyTarget","dragstart","dragend","px","py","fixed","locked","randomize","round","random","index","constraints","alignment","vertical","offsetsX","nodeData","push","offset","axis","offsets","horizontal","offsetsY","gapInequalities","inequality","leftIndex","left","rightIndex","right","gap","equality","groups","optPadding","getPadding","parseFloat","style","pleft","pright","ptop","pbottom","leaves","children","intersection","child","lengthFnName","edgeLength","edgeSymDiffLength","edgeJaccardLength","links","stdFilter","edge","source","calcLength","size","link","flow","minSeparation","isObject","flowLayout","avoidOverlaps","avoidOverlap","handleDisconnected","start","unconstrIter","userConstIter","allConstIter","centerGraph","maxSimulationTime","__webpack_require__","bind","tgt","_len","arguments","srcs","Array","_key","src","keys","k","nodeDimensionsIncludeLabels","impl","register","cytoscape","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","fn","cb","__WEBPACK_EXTERNAL_MODULE__4__","toStringTag","mode","ns","create","key","isFunction","dagre","DagreLayout","getVal","g","graphlib","Graph","multigraph","compound","gObj","setGObj","nodeSep","edgeSep","rankSep","rankDir","align","ranker","acyclicer","setGraph","setDefaultEdgeLabel","setDefaultNodeLabel","sort","nbb","setNode","id","_i","_node","isChild","setParent","parent","_i2","setEdge","minlen","minLen","weight","edgeWeight","dagreBB","gNodeIds","_i3","getElementById","Infinity","dModel","min","layoutPositions","xPct","yPct","constrainPos","spacingFactor","animateFilter","animationDuration","animationEasing","transform","debug","util","time","notime","version","_","greedyFAS","fas","graph","weightFn","stack","visited","dfs","v","has","outEdges","dfsFAS","label","removeEdge","forwardName","reversed","uniqueId","undo","addBorderNode","prop","prefix","sg","sgNode","rank","borderType","prev","curr","addDummyNode","borderLeft","borderRight","minRank","maxRank","swapWidthHeight","swapWidthHeightOne","attrs","reverseYOne","swapXYOne","adjust","rankdir","toLowerCase","points","reverseY","swapXY","List","sentinel","_next","_prev","_sentinel","unlink","entry","filterOutLinks","dequeue","enqueue","toString","strs","join","debugOrdering","layerMatrix","buildLayerMatrix","layer","layerV","reduce","nodeCount","state","fasGraph","maxIn","maxOut","out","prevWeight","buckets","range","zeroIdx","assignBucket","buildState","DEFAULT_WEIGHT_FN","results","sources","sinks","removeNode","doGreedyFAS","flatten","constant","collectPredecessors","inEdges","uEntry","wEntry","acyclic","normalize","normalizeRanks","parentDummyChains","removeEmptyRanks","nestingGraph","addBorderSegments","coordinateSystem","order","opts","debugTiming","layoutGraph","inputGraph","canonicalize","merge","graphDefaults","selectNumberAttrs","graphNumAttrs","pick","graphAttrs","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","buildLayoutGraph","ranksep","labelpos","labeloffset","makeSpaceForEdgeLabels","selfEdges","removeSelfEdges","asNonCompoundGraph","injectEdgeLabelProxies","cleanup","borderTop","borderBottom","assignRankMinMax","dummy","labelRank","removeEdgeLabelProxies","layers","orderShift","selfEdge","insertSelfEdges","selfNode","dx","dy","positionSelfEdges","b","last","abs","removeBorderNodes","fixupEdgeLabelCoords","minX","Number","POSITIVE_INFINITY","maxX","minY","maxY","graphLabel","marginX","marginx","marginY","marginy","getExtremes","translateGraph","p1","p2","nodeV","nodeW","unshift","intersectRect","assignNodeIntersects","reverse","reversePointsForReversedEdges","runLayout","inputLabel","layoutLabel","updateInputGraph","edgesep","nodesep","mapValues","newAttrs","lodash","cloneDeep","each","find","forIn","isUndefined","minBy","now","sortBy","values","zipObject","root","depths","top","bottom","childNode","childTop","childBottom","thisWeight","nestingEdge","depth","treeDepths","nestingRoot","acc","sumWeights","nodeRankFactor","dummyChains","vRank","wRank","edgeLabel","edgeObj","normalizeEdge","origLabel","successors","cg","vs","rootPrev","prevChild","movable","inV","result","nodeU","sum","barycenter","relationship","hasNode","createRootNode","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","firstIndex","treeSize","tree","cc","weightSum","layering","initOrder","crossCount","sortSubgraph","buildLayerGraph","addSubgraphConstraints","buildLayerGraphs","ranks","sweepLayerGraphs","layerGraphs","biasRight","lg","sorted","assignOrder","downLayerGraphs","upLayerGraphs","best","bestCC","lastBest","simpleNodes","orderedVs","entries","mappedEntries","tmp","indegree","entryV","entryW","sourceSet","handleIn","vEntry","merged","handleOut","pop","doResolveConflicts","resolveConflicts","bl","br","subgraphs","barycenters","subgraphResult","other","expandSubgraphs","predecessors","blPred","brPred","consumeUnsortable","unsortable","bias","parts","partition","sortable","lhs","rhs","vsIndex","postorderNums","lim","low","postorder","pathData","lca","vPath","wPath","findPath","pathIdx","pathV","ascending","findType1Conflicts","conflicts","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","slice","scanNode","uLabel","uPos","addConflict","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","conflictsV","hasConflict","verticalAlignment","neighborFn","prevIdx","ws","mp","floor","il","ceil","horizontalCompaction","reverseSep","xs","blockG","blockGraph","sepFn","delta","vLabel","wLabel","sep","vRoot","uRoot","prevMax","buildBlockGraph","iterate","setXsFunc","nextNodesFunc","elem","findSmallestWidthAlignment","xss","NEGATIVE_INFINITY","halfWidth","alignCoordinates","alignTo","alignToVals","alignToMin","alignToMax","vert","horiz","xsVals","balance","ul","ignore","positionX","adjustedLayering","inner","smallestWidth","prevY","maxHeight","positionY","slack","tightTree","nodeEdges","edgeV","findMinSlackEdge","shiftRanks","directed","longestPath","feasibleTree","networkSimplex","networkSimplexRanker","tightTreeRanker","longestPathRanker","initRank","preorder","simplify","initLowLimValues","initCutValues","leaveEdge","exchangeEdges","enterEdge","cutvalue","calcCutValue","assignCutValue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","hasEdge","otherCutValue","dfsAssignLowLim","nextLim","neighbors","tailLabel","flip","candidates","isDescendant","f","flipped","updateRanks","rootLabel","simplified","simpleLabel","isMultigraph","successorWeights","weightMap","sucs","predecessorWeights","preds","rect","point","sx","sy","collection","console","log"],"sourceRoot":""}