{"version":3,"file":"js/index-7574f2c7.d022c03e.js","mappings":"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","sources":["webpack://pipeline-manager/./src/custom/useDragMove.ts","webpack://pipeline-manager/./src/custom/CustomInterface.vue","webpack://pipeline-manager/./src/custom/CustomInterface.vue?418c","webpack://pipeline-manager/./src/custom/CustomSidebar.vue","webpack://pipeline-manager/./src/custom/CustomSidebar.vue?9ce8","webpack://pipeline-manager/./src/custom/Editor.vue","webpack://pipeline-manager/./src/custom/ContextMenu.vue","webpack://pipeline-manager/./src/custom/ContextMenu.vue?2c86","webpack://pipeline-manager/./src/custom/CustomNode.vue","webpack://pipeline-manager/./src/custom/useGroupDragMove.ts","webpack://pipeline-manager/./src/custom/CustomNode.vue?145c","webpack://pipeline-manager/./src/custom/connection/ConnectionView.vue","webpack://pipeline-manager/./src/custom/connection/ConnectionView.vue?a952","webpack://pipeline-manager/./src/custom/connection/domResolver.js","webpack://pipeline-manager/./src/custom/temporaryConnection.js","webpack://pipeline-manager/./src/custom/connection/PipelineManagerConnection.vue","webpack://pipeline-manager/./src/custom/connection/PipelineManagerConnection.vue?3555","webpack://pipeline-manager/./src/custom/connection/TemporaryConnection.vue","webpack://pipeline-manager/./src/custom/connection/TemporaryConnection.vue?175b","webpack://pipeline-manager/./src/custom/nodepalette/NodePalette.vue","webpack://pipeline-manager/./src/custom/nodepalette/PaletteCategory.vue","webpack://pipeline-manager/./src/custom/LinkMenu.vue","webpack://pipeline-manager/./src/custom/LinkMenu.vue?8fc7","webpack://pipeline-manager/./src/custom/nodepalette/PaletteCategory.vue?9e7c","webpack://pipeline-manager/./src/custom/nodepalette/nodeTree.ts","webpack://pipeline-manager/./src/custom/nodepalette/PaletteEntry.vue","webpack://pipeline-manager/./src/custom/nodepalette/PaletteEntry.vue?1d4f","webpack://pipeline-manager/./src/custom/nodepalette/NodePalette.vue?2aed","webpack://pipeline-manager/./src/custom/RectangleSelection.vue","webpack://pipeline-manager/./src/custom/RectangleSelection.vue?35f7","webpack://pipeline-manager/./src/custom/rectangleSelection.js","webpack://pipeline-manager/./src/custom/panZoom.js","webpack://pipeline-manager/./src/custom/Editor.vue?366e","webpack://pipeline-manager/./src/custom/ sync","webpack://pipeline-manager/./src/custom/ sync ^%21%21raw\\-loader%21.*$","webpack://pipeline-manager/./src/custom/CustomNode.js","webpack://pipeline-manager/./src/custom/Editor.js","webpack://pipeline-manager/./src/custom/CustomGraph.js","webpack://pipeline-manager/./src/custom/CustomGraphNode.js","webpack://pipeline-manager/./src/custom/directives.js"],"sourcesContent":["/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\nimport { computed, ref } from 'vue';\nimport { useGraph, useViewModel } from '@baklavajs/renderer-vue';\nimport { gridSnapper, nodeSnapper } from '../core/snappers';\n/* eslint-disable no-param-reassign, @typescript-eslint/no-explicit-any */\nexport default function useDragMove(positionRef, gridSnapperInstance = undefined, nodeId = undefined) {\n    // any definition is an ad-hoc solution as we don't have our graph definition\n    const { graph } = useGraph();\n    const { viewModel } = useViewModel();\n    const calculateSnappedPosition = gridSnapperInstance !== null && gridSnapperInstance !== void 0 ? gridSnapperInstance : gridSnapper(ref(1));\n    const gridSize = computed(() => viewModel.value.settings.background.gridSize);\n    const backgroundGridSnapper = gridSnapper(gridSize);\n    const nodeSnappers = {\n        x: nodeSnapper('x'),\n        y: nodeSnapper('y'),\n    };\n    const draggingStartPoint = ref(null);\n    const draggingStartPosition = ref(null);\n    const movementStepEnabled = ref(true);\n    const dragging = computed(() => {\n        // If we didn't move, then we are not dragging\n        if (!!draggingStartPoint.value && draggingStartPosition.value) {\n            return (draggingStartPosition.value.x !== positionRef.value.x\n                || draggingStartPosition.value.y !== positionRef.value.y);\n        }\n        return false;\n    });\n    /* eslint-disable arrow-body-style */\n    const calculatePosition = (pos, kind, align = false, gridSnap = false) => {\n        if (align && nodeId !== undefined) {\n            const alignedCoord = nodeSnappers[kind](pos, nodeId, graph.value.selectedNodes.map((node) => node.id));\n            if (alignedCoord !== undefined) {\n                return alignedCoord;\n            }\n        }\n        if (gridSnap) {\n            return backgroundGridSnapper(pos);\n        }\n        // allow either snap-to-grid or free movement\n        return movementStepEnabled.value ? calculateSnappedPosition(pos) : pos;\n    };\n    /* eslint-enable arrow-body-style */\n    if (positionRef.value) {\n        positionRef.value.x = calculatePosition(positionRef.value.x, 'x');\n        positionRef.value.y = calculatePosition(positionRef.value.y, 'y');\n    }\n    const onPointerDown = (ev) => {\n        movementStepEnabled.value = !ev.shiftKey;\n        draggingStartPoint.value = {\n            x: ev.pageX,\n            y: ev.pageY,\n        };\n        draggingStartPosition.value = {\n            x: positionRef.value.x,\n            y: positionRef.value.y,\n        };\n    };\n    const onPointerMove = (ev) => {\n        movementStepEnabled.value = !ev.shiftKey;\n        const align = ev.ctrlKey;\n        const gridSnap = ev.shiftKey;\n        if (draggingStartPoint.value && draggingStartPosition.value) {\n            const dx = ev.pageX - draggingStartPoint.value.x;\n            const dy = ev.pageY - draggingStartPoint.value.y;\n            positionRef.value.x = calculatePosition(draggingStartPosition.value.x + dx / graph.value.scaling, 'x', align, gridSnap);\n            positionRef.value.y = calculatePosition(draggingStartPosition.value.y + dy / graph.value.scaling, 'y', align, gridSnap);\n        }\n    };\n    const onPointerUp = () => {\n        draggingStartPoint.value = null;\n        draggingStartPosition.value = null;\n        movementStepEnabled.value = true;\n    };\n    return {\n        dragging,\n        onPointerDown,\n        onPointerMove,\n        onPointerUp,\n    };\n}\n","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nInterface that is used to display inputs, outputs and properties of a node.\n\nThe custom implementations introduces wrapper functions that prevent the user\nfrom creating and deleting connections or altering nodes' values if the editor is read-only.\n-->\n\n<template>\n    <div\n        :id=\"intf.id\"\n        ref=\"el\"\n        class=\"baklava-node-interface\"\n        :class=\"newClasses\"\n    >\n        <div\n            class=\"__port\"\n            v-if=\"intf.port\"\n            @mouseenter=\"startHoverWrapper\"\n            @mouseleave=\"endHoverWrapper\"\n            @pointerdown.left=\"onMouseDown\"\n            :class=\"{ greyedout_arrow: highlighted, picked: picked, '__square': isExposed }\"\n        >\n            <div\n                v-if=\"isExposed && (hovered || editExternalName)\"\n                :class=\"{\n                    '__port_name_left': intf.side === 'left',\n                    '__port_name_right': intf.side === 'right'\n                }\"\n            >\n                <input\n                    v-if=\"editExternalName\"\n                    v-model=\"inputExternalName\"\n                    ref=\"externalNameInput\"\n                    type=\"text\"\n                    spellcheck=\"false\"\n                    autocomplete=\"off\"\n                    class=\"__port_input\"\n                    :class=\"{ '__error': externalNameInputIncorrect }\"\n                    placeholder=\"External name\"\n                    @focusout=\"externalNameFocusOutCallback\"\n                    @keydown.enter.exact.stop=\"(e) => { e.target.blur(); }\"\n                    @input=\"externalNameInputCallback\"\n                    @pointerdown.left.stop=\"(e) => e.stopPropagation()\"\n                    @keydown.ctrl.stop=\"(e) => e.stopPropagation()\"\n                />\n                <span\n                    v-else\n                    @pointerdown.left.stop=\"enableExternalNameEdit\"\n                    @keydown.stop\n                >\n                    {{ intf.externalName }}\n                </span>\n            </div>\n            <Arrow\n                v-if=\"displayArrow\"\n                :noninteractable=\"true\"\n                color=\"black\"\n                scale=\"big\"\n                :rotate=\"arrowRotation\"\n            />\n        </div>\n\n        <!-- @keydown.stop is added so that events are not bubbled up to the editor -->\n        <component\n            :is=\"intf.component\"\n            v-if=\"showComponent\"\n            v-model=\"intf.value\"\n            :node=\"node\"\n            :intf=\"intf\"\n            @keydown.stop\n            :tabindex=\"tabindexValue\"\n        />\n        <span v-else>\n            {{ intf.name }}\n        </span>\n    </div>\n</template>\n\n<script>\nimport {\n    defineComponent, ref, computed, nextTick,\n} from 'vue';\nimport {\n    Components, useViewModel, useGraph, TextInterface,\n} from '@baklavajs/renderer-vue';\nimport Arrow from '../icons/Arrow.vue';\nimport doubleClick from '../core/doubleClick';\n\nexport default defineComponent({\n    extends: Components.NodeInterface,\n    props: {\n        highlighted: Boolean,\n        picked: Boolean,\n        switchSides: {},\n        toggleGroup: { default: () => {}, required: false },\n        tabindexValue: { default: -1, required: false },\n    },\n    components: {\n        Arrow,\n    },\n    setup(props) {\n        const {\n            el, isConnected, showComponent, startHover, endHover, openSidebar,\n        } =\n            Components.NodeInterface.setup(props);\n\n        const { viewModel } = useViewModel();\n        const { graph } = useGraph();\n\n        props.intf.events.beforeSetValue.unsubscribe(props.intf);\n        props.intf.events.beforeSetValue.subscribe(props.intf, (_, prevent) => {\n            if (viewModel.value.editor.readonly) {\n                prevent();\n            }\n        });\n\n        if (props.intf.group) {\n            props.toggleGroup(props.intf);\n            props.intf.events.setValue.unsubscribe(props.intf);\n            props.intf.events.setValue.subscribe(props.intf, () => props.toggleGroup(props.intf));\n        }\n\n        const hovered = ref(false);\n        const startHoverWrapper = () => {\n            hovered.value = true;\n            if (!viewModel.value.editor.readonly) {\n                startHover();\n            }\n        };\n\n        const endHoverWrapper = () => {\n            hovered.value = false;\n            if (!viewModel.value.editor.readonly) {\n                endHover();\n            }\n        };\n\n        /* eslint-disable vue/no-mutating-props,no-param-reassign */\n        const onMouseDown = doubleClick(700, () => {\n            if (!viewModel.value.editor.readonly) {\n                props.switchSides(props.intf);\n                endHover();\n            }\n        });\n\n        const displayArrow = props.intf.port && props.intf.direction !== 'inout';\n        const arrowRotation = computed(() => {\n            if (props.intf.direction === 'input') {\n                if (props.intf.side === 'left') {\n                    return 'right';\n                }\n                if (props.intf.side === 'right') {\n                    return 'down';\n                }\n            }\n            if (props.intf.direction === 'output') {\n                if (props.intf.side === 'left') {\n                    return 'down';\n                }\n                if (props.intf.side === 'right') {\n                    return 'right';\n                }\n            }\n            return 'down';\n        });\n\n        const newClasses = computed(() => ({\n            '--input': props.intf.side === 'left',\n            '--output': props.intf.side === 'right',\n            '--connected': isConnected.value,\n            __readonly: viewModel.value.editor.readonly,\n        }));\n\n        const isExposed = computed(() =>\n            props.intf.externalName !== undefined,\n        );\n\n        // External name editing\n        const externalNameComponent = new TextInterface('External name', props.intf.externalName).setPort(false);\n        externalNameComponent.componentName = 'TextInterface';\n\n        const editExternalName = ref(false);\n        const externalNameInputIncorrect = ref(false);\n        const externalNameInput = ref(null);\n        const externalNames = [];\n\n        const inputExternalName = ref(props.intf.externalName);\n\n        /**\n         * Update the list of external names of the interfaces in the current graph.\n         */\n        const updateExternalNames = () => {\n            externalNames.splice(0, externalNames.length);\n            externalNames.push(...graph.value.obtainExposedNames());\n            externalNames.splice(externalNames.indexOf(props.intf.externalName), 1);\n        };\n\n        const enableExternalNameEdit = (e) => {\n            // Get the list of external names of the interfaces in the subgraph\n            updateExternalNames();\n\n            editExternalName.value = true;\n            e.preventDefault();\n\n            // Wait for the next tick to focus the input, so that it is rendered first\n            nextTick().then(() => {\n                externalNameInput.value.focus();\n                externalNameInput.value.select();\n                externalNameInputIncorrect.value = graph.value.isIncorrectExternalName(\n                    props.intf.externalName,\n                    externalNames,\n                );\n            });\n        };\n\n        const externalNameInputCallback = (e) => {\n            externalNameInputIncorrect.value = graph.value.isIncorrectExternalName(\n                e.target.value,\n                externalNames,\n            );\n        };\n\n        const externalNameFocusOutCallback = () => {\n            editExternalName.value = false;\n            externalNameInputIncorrect.value = false;\n            const newExternalName = graph.value.resolveNewExposedName(inputExternalName.value);\n            inputExternalName.value = newExternalName;\n\n            viewModel.value.editor.exposeInterface(\n                graph.value.id,\n                props.intf,\n                newExternalName,\n            );\n        };\n\n        return {\n            arrowRotation,\n            displayArrow,\n            editExternalName,\n            el,\n            enableExternalNameEdit,\n            endHover,\n            endHoverWrapper,\n            externalNameInput,\n            externalNameInputIncorrect,\n            externalNameInputCallback,\n            externalNameFocusOutCallback,\n            hovered,\n            isConnected,\n            inputExternalName,\n            newClasses,\n            onMouseDown,\n            openSidebar,\n            showComponent,\n            isExposed,\n            startHover,\n            startHoverWrapper,\n        };\n    },\n});\n</script>\n","import { render } from \"./CustomInterface.vue?vue&type=template&id=73e77a67\"\nimport script from \"./CustomInterface.vue?vue&type=script&lang=js\"\nexport * from \"./CustomInterface.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!-- eslint-disable vue/no-multiple-template-root -->\n<template>\n    <Tooltip\n        ref=\"tooltipRef\"\n        :left=\"tooltip.left\"\n        :top=\"tooltip.top\"\n        :text=\"tooltip.text\"\n        v-show=\"tooltip.visible\"\n    />\n    <div\n        class=\"baklava-sidebar prevent-select\"\n        ref=\"sidebarRef\"\n        :class=\"{\n            '--open': graph.sidebar.visible,\n            '--hidehud': editorManager.editor.hideHud,\n            '--preview': editorManager.editor.preview,\n            'hidden-navbar': $isMobile,\n        }\"\n        :style=\"styles\"\n    >\n        <div class=\"__resizer\" @mousedown=\"startResize\" />\n        <div v-if=\"node\" class=\"__content\">\n            <div class=\"__header\">\n                <Cross tabindex=\"-1\" class=\"__close\" @click=\"close\" />\n                <img\n                    class=\"__node-icon\"\n                    v-if=\"nodeIconPath !== undefined\"\n                    :src=\"nodeIconPath\"\n                />\n                <div class=\"__node-name\">\n                    {{ displayedName }}\n                </div>\n                <a\n                    v-for=\"url in nodeURLs\"\n                    :key=\"url.name\"\n                    :href=\"url.url\"\n                    class=\"__url\"\n                    target=\"_blank\"\n                    draggable=\"false\"\n                    @pointerover=\"(ev) => onPointerOver(url.name, ev)\"\n                    @pointerleave=\"onPointerLeave\"\n                    tabindex=\"-1\"\n                >\n                    <img\n                        v-if=\"url.icon !== undefined\"\n                        :src=\"getIconPath(url.icon)\"\n                        :alt=\"url.name\"\n                        draggable=\"false\"\n                    />\n                </a>\n            </div>\n            <div class=\"__category\">\n                <div class=\"__title\">Category</div>\n                <div class=\"__category-name\">\n                    {{ prettyCategory }}\n                </div>\n            </div>\n            <div v-if=\"!editorManager.editor.readonly\" class=\"__replace\">\n                <div class=\"__replace_entry\" v-if=\"replacementParents.length\">\n                    <div class=\"__replace_title\">Generalize:</div>\n                    <div\n                        v-for=\"parent in replacementParents\"\n                        :key=\"parent\"\n                        class=\"__replace_button\"\n                    >\n                        <component :is=\"parent.component\" :intf=\"parent\" tabindex=\"-1\" />\n                    </div>\n                </div>\n                <div class=\"__replace_entry\" v-if=\"replacementChildren.length\">\n                    <div class=\"__replace_title\">Specialize:</div>\n                    <div v-for=\"child in replacementChildren\" :key=\"child\" class=\"__replace_button\">\n                        <component :is=\"child.component\" :intf=\"child\" tabindex=\"-1\" />\n                    </div>\n                </div>\n                <div class=\"__replace_entry\" v-if=\"replacementSiblings.length\">\n                    <div class=\"__replace_title\">Choose other type:</div>\n                    <div\n                        v-for=\"sibling in replacementSiblings\"\n                        :key=\"sibling\"\n                        class=\"__replace_button\"\n                    >\n                        <component :is=\"sibling.component\" :intf=\"sibling\" tabindex=\"-1\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"__properties\" v-if=\"displayedProperties.length\">\n                <div class=\"__title\">Properties</div>\n                <div v-for=\"input in displayedProperties\" :key=\"input.id\" class=\"__property\">\n                    <div class=\"__property-name\">\n                        {{ getOptionName(input.componentName) ? `${input.name}:` : '' }}\n                    </div>\n                    <CustomInterface\n                        :node=\"node\"\n                        :intf=\"input\"\n                        :toggleGroup=\"toggleGroup\"\n                        tabindex=\"-1\"\n                    />\n                </div>\n            </div>\n\n            <div v-show=\"desc\">\n                <div class=\"__title\">\n                    Description\n                </div>\n                <div class=\"__markdown-content\" >\n                    <span v-html=\"desc\" class=\"node_description\"></span>\n                </div>\n            </div>\n\n            <div\n                class=\"__interface_groups\"\n                v-if=\"interfaceGroupsCheckboxes.length > 0 && !editorManager.editor.readonly\"\n            >\n                <div class=\"__title\">Interface Groups</div>\n                <div\n                    v-for=\"intfG in interfaceGroupsCheckboxes\"\n                    :key=\"intfG.id\"\n                    class=\"__group\"\n                >\n                    <component :is=\"intfG.component\" :intf=\"intfG\"></component>\n                </div>\n                <div class=\"__group-assign\">\n                    <component\n                        :is=\"interfaceGroupsButton.component\"\n                        :intf=\"interfaceGroupsButton\"\n                        :class=\"interfaceGroupsButtonClasses\"\n                        tabindex=\"-1\"\n                    ></component>\n                </div>\n            </div>\n            <div v-show=\"interfaceGroupsOutput.length\" class=\"__error_outputs\">\n                <div class=\"__title\">Conflicts:</div>\n                <!-- eslint-disable vue/require-v-for-key -->\n                <p v-for=\"output in interfaceGroupsOutput\">\n                    {{ output }}\n                </p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { computed, defineComponent, watch, ref, nextTick } from 'vue'; // eslint-disable-line object-curly-newline\nimport { GRAPH_NODE_TYPE_PREFIX } from '@baklavajs/core';\nimport { CheckboxInterface, ButtonInterface } from '@baklavajs/renderer-vue'; // eslint-disable-line object-curly-newline\nimport showdown from 'showdown';\nimport CustomInterface from './CustomInterface.vue';\nimport Cross from '../icons/Cross.vue';\nimport Tooltip from '../components/Tooltip.vue';\nimport EditorManager from '../core/EditorManager';\n\nimport { validateInterfaceGroupsNames } from '../core/interfaceParser';\nimport { getOptionName } from './CustomNode.js';\n\nexport default defineComponent({\n    components: {\n        Cross,\n        CustomInterface,\n        CheckboxInterface,\n        Tooltip,\n    },\n    emits: ['sidebar-open'],\n    setup(_props, { emit }) {\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const viewModel = computed(() => editorManager.baklavaView);\n        const graph = computed(() => viewModel.value.displayedGraph);\n\n        const converter = new showdown.Converter({\n            smartIndentationFix: true,\n            simpleLineBreaks: true,\n        });\n\n        const width = ref(300);\n\n        const node = computed(() => {\n            const id = graph.value.sidebar.nodeId;\n            return graph.value.nodes.find((x) => x.id === id);\n        });\n\n        const category = computed(() => graph.value.editor.nodeTypes.get(node.value.type).category);\n        const prettyCategory = computed(() => `${category.value.split('/').join(' / ')}`);\n\n        const desc = computed(() => {\n            let html = converter.makeHtml(node.value?.description ?? '');\n            const aTagRe = /<a href=\"[a-zA-Z0-9-$_.+!*'()/&?=:%]+\">/gm;\n            html.match(aTagRe)?.forEach((match) => {\n                const hrefParts = match.split('\"');\n                // Forces the link to open in a new tab instead of closing the pipeline manager\n                const newEnd = ` tabindex=\"-1\" target=\"_blank\"${hrefParts[2]}`;\n                const newHref = [hrefParts[0], hrefParts[1], newEnd].join('\"');\n                html = html.replace(match, newHref);\n            });\n            return html;\n        });\n        const nodeIcon = computed(() => viewModel.value.editor.getNodeIconPath(node.value?.type));\n        const nodeURLs = computed(() => viewModel.value.editor.getNodeURLs(node.value?.type));\n\n        const getIconPath = (name) => viewModel.value.cache[`./${name}`] ?? name;\n        const nodeIconPath = computed(() => getIconPath(nodeIcon.value));\n        const sidebarVisible = computed(() => graph.value.sidebar.visible);\n\n        watch(node, () => {\n            if (node.value === undefined) {\n                graph.value.sidebar.visible = false;\n            }\n        });\n        watch(sidebarVisible, (newValue) => {\n            if (newValue) emit('sidebar-open');\n        });\n\n        const tooltipRef = ref(null);\n        const tooltip = ref(null);\n        const sidebarRef = ref(null);\n\n        tooltip.value = {\n            top: 0,\n            left: 0,\n            visible: false,\n            text: '',\n        };\n\n        const onPointerOver = (name, ev) => {\n            tooltip.value.text = name;\n            tooltip.value.visible = true;\n\n            // We need to wait for the next frame to get the tooltips width first to get its width\n            nextTick().then(() => {\n                const right = ev.clientX - ev.offsetX + ev.currentTarget.offsetWidth / 2 +\n                    tooltipRef.value.$el.clientWidth;\n\n                tooltip.value.top = ev.clientY - ev.offsetY + ev.currentTarget.offsetHeight;\n\n                // If the tooltip is out of user view port it is moved to the left\n                if (right > window.innerWidth) {\n                    tooltip.value.left = ev.clientX - ev.offsetX + ev.currentTarget.offsetWidth / 2\n                        - tooltipRef.value.$el.clientWidth / 2;\n                } else {\n                    tooltip.value.left = ev.clientX - ev.offsetX + ev.currentTarget.offsetWidth / 2;\n                }\n            });\n        };\n\n        const toggleGroup = (intf) => {\n            intf.group.forEach((name) => {\n                node.value.inputs[name].hidden = intf.value;\n            });\n        };\n\n        const onPointerLeave = () => {\n            tooltip.value.visible = false;\n        };\n\n        const styles = computed(() => ({\n            width: `${width.value}px`,\n        }));\n\n        const close = () => {\n            graph.value.sidebar.visible = false;\n        };\n\n        const onMouseMove = (ev) => {\n            ev.preventDefault();\n            width.value -= ev.movementX;\n        };\n\n        const startResize = () => {\n            width.value = sidebarRef.value.offsetWidth;\n            window.addEventListener('mousemove', onMouseMove);\n            window.addEventListener(\n                'mouseup',\n                (ev) => {\n                    ev.preventDefault();\n                    window.removeEventListener('mousemove', onMouseMove);\n                },\n                { once: true },\n            );\n        };\n\n        const displayedInputs = computed(() =>\n            Object.values(node.value.inputs).filter((ni) => !ni.hidden),\n        );\n        const displayedProperties = computed(() =>\n            Object.values(displayedInputs.value).filter((intf) => !intf.port),\n        );\n\n        const interfaceGroups = computed(() =>\n            Object.values({ ...node.value.inputs, ...node.value.outputs }).filter(\n                (ni) => ni.interfaces !== undefined,\n            ),\n        );\n\n        const interfaceGroupsOutput = ref('');\n        const interfaceGroupsButtonClasses = computed(() => ({\n            '--disabled': interfaceGroupsOutput.value !== '',\n        }));\n\n        const interfaceGroupsCheckboxes = computed(() => {\n            const checkboxes = ref([]);\n            // So that interfaces are recomputed when this value changes\n            graph.value.sidebar.visible; // eslint-disable-line no-unused-expressions\n\n            interfaceGroups.value.forEach((intfG) => {\n                const checkbox = new CheckboxInterface(intfG.name, !intfG.hidden).setPort(false);\n                checkbox.events.setValue.subscribe(this, () => {\n                    const errors = validateInterfaceGroupsNames(\n                        enabledInterfaceGroups.value, // eslint-disable-line no-use-before-define\n                        node.value.inputs,\n                        node.value.outputs,\n                    );\n\n                    if (errors.length) {\n                        interfaceGroupsOutput.value = errors.map(\n                            ([parsedIntfName, intfDirection, groupName]) =>\n                                `Reused ${intfDirection} - ${parsedIntfName} for interface group ${groupName}`,\n                        );\n                    } else {\n                        interfaceGroupsOutput.value = '';\n                    }\n                });\n                checkbox.componentName = 'CheckboxInterface';\n                checkbox.intfG = intfG;\n                checkboxes.value.push(checkbox);\n            });\n\n            return checkboxes.value;\n        });\n\n        const enabledInterfaceGroups = computed(() => {\n            const enabledInterfaceGroupsCheckboxes = [];\n\n            interfaceGroupsCheckboxes.value.forEach((intf) => {\n                if (intf.value) {\n                    enabledInterfaceGroupsCheckboxes.push(\n                        `${intf.intfG.direction}_${intf.intfG.name}`,\n                    );\n                }\n            });\n            return enabledInterfaceGroupsCheckboxes;\n        });\n\n        const interfaceGroupsButton = computed(() => {\n            const checkbox = new ButtonInterface('Assign', () => {\n                interfaceGroupsCheckboxes.value.forEach((intf) => {\n                    node.value.toggleInterfaceGroup(intf.intfG, intf.value);\n                });\n                interfaceGroupsOutput.value = '';\n            });\n            checkbox.componentName = 'ButtonInterface';\n            return checkbox;\n        });\n\n        const replacementButtons = (list) => {\n            const buttons = ref([]);\n\n            (list ?? []).forEach((eName) => {\n                const button = new ButtonInterface(eName, () => {\n                    const newNode = graph.value.replaceNode(node.value, eName);\n                    graph.value.sidebar.nodeId = newNode.id;\n                });\n                button.componentName = 'ButtonInterface';\n                buttons.value.push(button);\n            });\n            return buttons.value;\n        };\n\n        const replacementParents = computed(() => replacementButtons(node.value.extends));\n        const replacementChildren = computed(() => replacementButtons(node.value.extending));\n        const replacementSiblings = computed(() => replacementButtons(node.value.siblings));\n\n        const displayedName = computed(() => {\n            if (node.value.title === '' || node.value.title === undefined) {\n                if (node.value.type.startsWith(GRAPH_NODE_TYPE_PREFIX)) {\n                    return node.value.type.slice(GRAPH_NODE_TYPE_PREFIX.length);\n                }\n                return node.value.type;\n            }\n            return node.value.title;\n        });\n\n        return {\n            graph,\n            node,\n            styles,\n            startResize,\n            close,\n            displayedProperties,\n            interfaceGroups,\n            interfaceGroupsCheckboxes,\n            interfaceGroupsButton,\n            interfaceGroupsOutput,\n            interfaceGroupsButtonClasses,\n            nodeIconPath,\n            nodeURLs,\n            getIconPath,\n            desc,\n            tooltip,\n            onPointerOver,\n            onPointerLeave,\n            tooltipRef,\n            sidebarRef,\n            toggleGroup,\n            getOptionName,\n            prettyCategory,\n            replacementParents,\n            replacementChildren,\n            replacementSiblings,\n            editorManager,\n            displayedName,\n        };\n    },\n});\n</script>\n<style lang=\"scss\" scoped>\n.prevent-select {\n    -webkit-user-select: none; /* Safari */\n    -ms-user-select: none; /* IE 10 and IE 11 */\n    user-select: none; /* Standard syntax */\n\n    & > .__content {\n        -webkit-user-select: text; /* Safari */\n        -ms-user-select: text; /* IE 10 and IE 11 */\n        user-select: text; /* Standard syntax */\n    }\n}\n</style>\n","import { render } from \"./CustomSidebar.vue?vue&type=template&id=1fe64c2d&scoped=true\"\nimport script from \"./CustomSidebar.vue?vue&type=script&lang=js\"\nexport * from \"./CustomSidebar.vue?vue&type=script&lang=js\"\n\nimport \"./CustomSidebar.vue?vue&type=style&index=0&id=1fe64c2d&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1fe64c2d\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nDefines the main editor component - canvas in which the pipeline is drawn and\nedited by a user\n\nInherits from baklavajs/rendered-vue/src/editor/Editor.vue\n\nMinimap component is removed whatsoever as they are not used.\nHovered connections are calculated and rendered with an appropriate `isHighlighted` value.\n-->\n\n<template>\n    <div\n        ref=\"el\"\n        tabindex=\"-1\"\n        class=\"baklava-editor\"\n        :class=\"{\n            'baklava-ignore-mouse': !!temporaryConnection || dragging,\n            '--temporary-connection': !!temporaryConnection,\n        }\"\n        :style=\"editorStyle\"\n        @wheel.self=\"mouseWheel\"\n        @keydown=\"keyDown\"\n        @keyup=\"keyUp\"\n        @mouseleave=\"!readonly && onRightPointerUp\"\n        @drop.prevent=\"!readonly && onDrop($event)\"\n        @dragenter.prevent\n        @dragover.prevent\n        oncontextmenu=\"return false;\"\n    >\n        <slot name=\"background\">\n            <background />\n        </slot>\n\n        <slot\n            name=\"palette\"\n            v-if=\"!(readonly || hideHud)\"\n        >\n            <NodePalette />\n        </slot>\n\n        <div class=\"node-container\" :style=\"nodeContainerStyle\" @wheel=\"mouseWheel\">\n            <CustomNode\n                v-for=\"node in visibleNodes\"\n                :key=\"node.id + counter.toString()\"\n                :node=\"node\"\n                :selected=\"selectedNodes.includes(node)\"\n                :greyedOut=\"greyedOutNodes.includes(node)\"\n                :interfaces=\"highlightInterfaces\"\n                @select=\"(ev) => selectNode(node, ev)\"\n            />\n        </div>\n\n        <svg\n            class=\"connections-container\"\n            @mouseenter=\"changeHoveredConnections\"\n            @mousemove=\"changeHoveredConnections\"\n            @mouseleave=\"clearHighlight\"\n            @wheel=\"mouseWheel\"\n        >\n            <PipelineManagerConnection\n                v-for=\"connection in visibleConnections\"\n                :key=\"connection.id + counter.toString()\"\n                :connection=\"connection\"\n                ref=\"connRefs\"\n                :isHighlighted=\"highlightConnections.includes(connection)\"\n            />\n            <TemporaryConnection\n                name=\"temporaryConnection\"\n                :temporary-connection=\"temporaryConnection\"\n                v-if=\"temporaryConnection\"\n                :connection=\"temporaryConnection\"\n            />\n        </svg>\n\n        <div class=\"selection-container\">\n            <RectangleSelection ref=\"rectangleSelection\"/>\n        </div>\n    </div>\n</template>\n\n<script>\n/* eslint-disable object-curly-newline */\nimport { GRAPH_NODE_TYPE_PREFIX } from '@baklavajs/core';\nimport { EditorComponent, useGraph } from '@baklavajs/renderer-vue';\nimport { defineComponent, ref, computed, watch, onMounted } from 'vue';\nimport fuzzysort from 'fuzzysort';\nimport usePanZoom from './panZoom';\n\nimport CustomNode from './CustomNode.vue';\nimport PipelineManagerConnection from './connection/PipelineManagerConnection.vue';\nimport TemporaryConnection from './connection/TemporaryConnection.vue';\nimport NodePalette from './nodepalette/NodePalette.vue';\nimport { useTemporaryConnection } from './temporaryConnection';\nimport NotificationHandler from '../core/notifications';\nimport EditorManager, { loadJsonFromRemoteLocation } from '../core/EditorManager';\nimport RectangleSelection from './RectangleSelection.vue';\nimport nodeInsideSelection from './rectangleSelection.js';\nimport getExternalApplicationManager from '../core/communication/ExternalApplicationManager';\n\nexport default defineComponent({\n    extends: EditorComponent,\n    components: {\n        CustomNode,\n        PipelineManagerConnection,\n        TemporaryConnection,\n        NodePalette,\n        RectangleSelection,\n    },\n    emits: ['loadFinish'],\n    setup(props, { emit }) {\n        const {\n            el,\n            counter,\n            nodes,\n            connections,\n            selectedNodes,\n            nodeContainerStyle,\n            keyDown,\n            keyUp,\n        } = EditorComponent.setup(props);\n\n        const connRefs = ref([]);\n        const { graph } = useGraph();\n\n        const panZoom = usePanZoom();\n        const temporaryConnection = useTemporaryConnection();\n        const editorManager = EditorManager.getEditorManagerInstance();\n\n        const highlightConnections = ref([]);\n        const highlightInterfaces = ref([]);\n\n        const readonly = computed(() => props.viewModel.editor.readonly);\n        const hideHud = computed(() => props.viewModel.editor.hideHud);\n\n        const rectangleSelection = ref(null);\n        const selectedNodesCtrlBackup = [];\n        const scale = computed(() => graph.value.scaling);\n\n        const searchQuery = computed(() => props.viewModel.editor.searchQuery);\n        const greyedOutNodes = ref([]);\n\n        let pressStartTime = 0;\n        const longPressMilisThreshold = 100;\n\n        const editorStyle = computed(() => ({\n            '--scale': scale.value,\n            cursor: panZoom.dragging.value ? 'move' : 'default',\n        }));\n\n        const unselectAllNodes = () => {\n            /* eslint-disable vue/no-mutating-props,no-param-reassign */\n            props.viewModel.displayedGraph.selectedNodes = [];\n        };\n\n        const appendSelectMultipleNodes = () => {\n            graph.value.nodes.forEach((node) => {\n                if (graph.value.selectedNodes.includes(node)) {\n                    return;\n                }\n\n                const selectionBoundingRect = rectangleSelection.value.boundingRect;\n\n                if (nodeInsideSelection(graph.value, node, selectionBoundingRect)) {\n                    graph.value.selectedNodes.push(node);\n                }\n            });\n        };\n\n        const selectNode = (node, event) => {\n            // If select was triggered by event check if CTRL is pressed,\n            // otherwise use default method\n            if ((event && !(event.ctrlKey)) || (!event && !props.viewModel.commandHandler.pressedKeys.includes('Control'))) {\n                unselectAllNodes();\n            }\n\n            props.viewModel.displayedGraph.selectedNodes.push(node);\n        };\n\n        const selectMultipleNodes = () => {\n            graph.value.selectedNodes = [];\n            graph.value.nodes.forEach((node) => {\n                const selectionBoundingRect = rectangleSelection.value.boundingRect;\n\n                if (nodeInsideSelection(graph.value, node, selectionBoundingRect)) {\n                    graph.value.selectedNodes.push(node);\n                }\n            });\n        };\n\n        let pointersDown = 0;\n        const onPointerDown = (ev) => {\n            pointersDown += 1;\n            if (ev.target === el.value) {\n                panZoom.onPointerDown(ev);\n            }\n            temporaryConnection.onMouseDown(ev);\n\n            pressStartTime = new Date();\n        };\n\n        const onRightPointerDown = (ev) => {\n            if (ev.target === el.value) {\n                unselectAllNodes();\n                rectangleSelection.value.onPointerDown(ev);\n            }\n\n            pressStartTime = new Date();\n        };\n\n        const onPointerMove = (ev) => {\n            panZoom.onPointerMove(ev);\n            temporaryConnection.onMouseMove(ev);\n            rectangleSelection.value.onPointerMove(ev);\n            if (rectangleSelection.value.selecting) {\n                selectMultipleNodes();\n            }\n        };\n\n        const onPointerUp = (ev) => {\n            panZoom.onPointerUp(ev);\n            temporaryConnection.onMouseUp();\n\n            // handle press & hold\n            const currentTime = new Date();\n            const elapsedTime = currentTime - pressStartTime;\n            if (elapsedTime < longPressMilisThreshold\n                && ev.target === el.value) {\n                unselectAllNodes();\n            }\n\n            if (pointersDown === 1) {\n                document.removeEventListener('pointerup', onPointerUp);\n                document.removeEventListener('pointermove', onPointerMove);\n            }\n            pointersDown -= 1;\n        };\n\n        const onRightPointerUp = (ev) => {\n            // handle press & hold right mouse button\n            const currentTime = new Date();\n            const elapsedTime = currentTime - pressStartTime;\n            if (elapsedTime >= longPressMilisThreshold\n                && ev.target === el.value) {\n                appendSelectMultipleNodes();\n            }\n            rectangleSelection.value.onPointerUp();\n\n            document.removeEventListener('pointerup', onRightPointerUp);\n            document.removeEventListener('pointermove', onPointerMove);\n        };\n\n        const onRightPointerDownCtrl = (ev) => {\n            rectangleSelection.value.onPointerDown(ev);\n            selectedNodesCtrlBackup.value = graph.value.selectedNodes;\n        };\n\n        const onRightPointerUpCtrl = () => {\n            graph.value.selectedNodes = selectedNodesCtrlBackup.value;\n            appendSelectMultipleNodes();\n            rectangleSelection.value.onPointerUp();\n\n            document.removeEventListener('pointerup', onRightPointerUpCtrl);\n            document.removeEventListener('pointermove', onPointerMove);\n        };\n\n        document.addEventListener('pointerdown', (ev) => {\n            // Dragging\n            if (ev.button === 0 && !ev.shiftKey) {\n                onPointerDown(ev);\n                document.addEventListener('pointerup', onPointerUp);\n                document.addEventListener('pointermove', onPointerMove);\n            }\n\n            // Rectangle selection\n            if (readonly.value) {\n                return;\n            }\n            if (ev.button === 2 && ev.ctrlKey) {\n                onRightPointerDownCtrl(ev);\n                document.addEventListener('pointerup', onRightPointerUpCtrl);\n                document.addEventListener('pointermove', onPointerMove);\n            } else if (ev.button === 2) {\n                onRightPointerDown(ev);\n                document.addEventListener('pointerup', onRightPointerUp);\n                document.addEventListener('pointermove', onPointerMove);\n            }\n        });\n\n        const clearHighlight = () => {\n            highlightConnections.value.splice(0, highlightConnections.value.length);\n        };\n\n        // If a connection is removed by clicking on it all highlighted connections are removed\n        watch(connections.value, () => {\n            clearHighlight();\n        });\n\n        const addHighlight = (connection) => {\n            if (!highlightConnections.value.includes(connection)) {\n                highlightConnections.value.push(connection);\n            }\n        };\n\n        const addInterfaceHighlight = (it) => {\n            if (!highlightInterfaces.value.includes(it)) {\n                highlightInterfaces.value.push(it);\n            }\n        };\n        const clearInterfaceHighlight = () => {\n            highlightInterfaces.value.splice(0, highlightInterfaces.value.length);\n        };\n\n        watch(temporaryConnection?.temporaryConnection, () => {\n            if (typeof (temporaryConnection ?? null) === 'undefined') return;\n            if (temporaryConnection?.temporaryConnection === null) return;\n            if (temporaryConnection?.temporaryConnection?.value?.from) {\n                for (let a = 0; a < nodes.value.length; a += 1) {\n                    const viableConnections = [\n                        ...(Object.values(nodes.value[a].outputs) || []),\n                        ...(Object.values(nodes.value[a].inputs) || []),\n                    ];\n\n                    viableConnections.forEach((n) => {\n                        if (n.port && n !== temporaryConnection.temporaryConnection.value.from) {\n                            const result = graph.value.checkConnection(\n                                temporaryConnection.temporaryConnection.value.from,\n                                n,\n                            );\n                            if (!result.connectionAllowed) {\n                                addInterfaceHighlight(n);\n                            }\n                        }\n                    });\n                }\n            } else {\n                clearInterfaceHighlight();\n            }\n        });\n\n        const removeHighlight = (connection) => {\n            const index = highlightConnections.value.indexOf(connection);\n            if (index >= 0) {\n                highlightConnections.value.splice(index, 1);\n            }\n        };\n\n        const changeHoveredConnections = (ev) => {\n            // Get all connection DOM elements that have mouse hovered over them\n            const elements = document.elementsFromPoint(ev.clientX, ev.clientY);\n\n            const hoveredHtml = connRefs.value.filter((conn) =>\n                conn.containsPoint(elements),\n            );\n\n            // Convert DOM elements to BaklavaJS connections\n            const hovered = connections.value.filter(\n                (conn) => hoveredHtml.filter((htmlEl) => htmlEl.connection === conn).length > 0,\n            );\n\n            const highlighted = connections.value.filter(\n                (conn) => hovered.filter((hov) => hov.from === conn.from).length > 0,\n            );\n\n            connections.value.forEach((conn) => {\n                if (highlighted.includes(conn)) {\n                    addHighlight(conn);\n                } else {\n                    removeHighlight(conn);\n                }\n            });\n        };\n\n        const ignoredLayers = computed(() => props.viewModel.ignoredLayers);\n        const ignorableLayers = computed(() => props.viewModel.layers);\n\n        const ignoredInterfacesTypes = computed(() => {\n            const temp = new Set();\n\n            ignorableLayers.value.forEach((layer) => {\n                if (layer.nodeInterfaces && ignoredLayers.value.has(layer.name)) {\n                    layer.nodeInterfaces.forEach(temp.add, temp);\n                }\n            });\n            return temp;\n        });\n\n        const ignoredNodesTypes = computed(() => {\n            const temp = new Set();\n\n            ignorableLayers.value.forEach((layer) => {\n                if (layer.nodeLayers && ignoredLayers.value.has(layer.name)) {\n                    layer.nodeLayers.forEach(temp.add, temp);\n                }\n            });\n            return temp;\n        });\n\n        const visibleNodes = computed(() =>\n            nodes.value.filter((n) => !ignoredNodesTypes.value.has(n.layer)),\n        );\n        const ignoredNodes = computed(() =>\n            nodes.value.filter((n) => ignoredNodesTypes.value.has(n.layer)),\n        );\n        const ignoredNodesId = computed(() => ignoredNodes.value.map((n) => n.id));\n\n        const visibleConnections = computed(() =>\n            connections.value.filter(\n                (c) =>\n                    !c.from.type?.some((t) => ignoredInterfacesTypes.value.has(t)) &&\n                    !c.to.type?.some((t) => ignoredInterfacesTypes.value.has(t)) &&\n                    !ignoredNodesId.value.includes(c.from.nodeId) &&\n                    !ignoredNodesId.value.includes(c.to.nodeId),\n            ),\n        );\n\n        const externalApplicationManager = getExternalApplicationManager();\n        if (externalApplicationManager.backendAvailable) {\n            watch(visibleNodes, async (value, old) => {\n                if (!editorManager.notifyWhenChanged) return;\n                const newIds = Object.values(value).map((n) => n.id);\n                const oldIds = Object.values(old).map((n) => n.id);\n                const nodesAdded = [];\n                Object.values(value).forEach((node) => {\n                    if (!(oldIds.includes(node.id))) {\n                        nodesAdded.push(node.save());\n                    }\n                });\n                const nodesDeleted = [];\n                Object.values(old).forEach((node) => {\n                    if (!(newIds.includes(node.id))) {\n                        nodesDeleted.push(node.id);\n                    }\n                });\n                const data = {\n                    graph_id: graph.value.id,\n                    nodes: {\n                        added: nodesAdded,\n                        deleted: nodesDeleted,\n                    },\n                };\n                await externalApplicationManager.notifyAboutChange('nodes_on_change', data);\n            });\n\n            watch(visibleConnections, async (value, old) => {\n                if (!editorManager.notifyWhenChanged) return;\n                const newIds = Object.values(value).map((n) => n.id);\n                const oldIds = Object.values(old).map((n) => n.id);\n                const connectionsAdded = [];\n                Object.values(value).forEach((connection) => {\n                    if (!(oldIds.includes(connection.id))) {\n                        connectionsAdded.push({\n                            id: connection.id,\n                            from: connection.from.id,\n                            to: connection.to.id,\n                        });\n                    }\n                });\n                const connectionsDeleted = [];\n                Object.values(old).forEach((connection) => {\n                    if (!(newIds.includes(connection.id))) {\n                        connectionsDeleted.push({\n                            from: connection.from.id,\n                            to: connection.to.id,\n                        });\n                    }\n                });\n                const data = {\n                    graph_id: graph.value.id,\n                    connections: {\n                        added: connectionsAdded,\n                        deleted: connectionsDeleted,\n                    },\n                };\n                await externalApplicationManager.notifyAboutChange('connections_on_change', data);\n            });\n        }\n\n        const filterNodes = (query) => {\n            const threshold = -50;\n\n            const matchingNodes = visibleNodes.value.filter((node) => {\n                let { type } = node;\n                const isGraphNode = type.startsWith(GRAPH_NODE_TYPE_PREFIX);\n                if (isGraphNode) {\n                    type = type.slice(GRAPH_NODE_TYPE_PREFIX.length);\n                }\n\n                const resultTitle = fuzzysort.single(query, node.title);\n                const resultType = fuzzysort.single(query, type);\n\n                if ((resultTitle !== null && resultTitle.score > threshold) ||\n                    (resultType !== null && resultType.score > threshold)) {\n                    node.highlightedTitle = fuzzysort.highlight(resultTitle, '<span>', '</span>');\n                    node.highlightedType = fuzzysort.highlight(resultType, '<span>', '</span>');\n\n                    // If the node is a graph node, has a title and query does not match the title,\n                    // do not show the node\n                    if (isGraphNode && node.title !== '' && resultTitle === null) return false;\n                    return true;\n                }\n                node.highlightedTitle = node.title;\n                node.highlightedType = node.type;\n                return false;\n            });\n\n            return matchingNodes;\n        };\n\n        const nodeTitles = computed(() =>\n            nodes.value.map((n) => n.title),\n        );\n\n        watch([searchQuery, nodeTitles], () => {\n            if (searchQuery.value === undefined || searchQuery.value === '') {\n                greyedOutNodes.value = [];\n                visibleNodes.value.forEach((node) => {\n                    node.highlightedTitle = node.title;\n                    node.highlightedType = node.type;\n                });\n                return;\n            }\n            const matchingNodes = filterNodes(searchQuery.value);\n\n            const nonMatchingNodes = visibleNodes.value.filter(\n                (node) => !matchingNodes.includes(node),\n            );\n\n            greyedOutNodes.value = nonMatchingNodes;\n        });\n\n        const defaultSpecification = process.env.VUE_APP_SPECIFICATION_PATH !== undefined;\n        const defaultDataflow = process.env.VUE_APP_DATAFLOW_PATH !== undefined;\n        const verboseLoad =\n            process.env.VUE_APP_VERBOSE !== undefined && process.env.VUE_APP_VERBOSE === 'true';\n\n        /**\n         * Prepares the Editor based on specification configuration.\n         *\n         * The function validates the specification, updates the Editor\n         * and provides error messages for erroneous content.\n         *\n         * @param specification The object holding the parsed specification file\n         */\n        async function updateEditorSpecification(specification) {\n            let errors = EditorManager.validateSpecification(specification);\n            let warnings;\n            if (errors.length) {\n                NotificationHandler.terminalLog('error', 'Specification is invalid', errors);\n                return errors;\n            }\n\n            ({ errors, warnings } = await editorManager.updateEditorSpecification(specification)); // eslint-disable-line prefer-const,max-len\n            if (Array.isArray(warnings) && warnings.length) {\n                NotificationHandler.terminalLog(\n                    'warning',\n                    'Issue when loading specification',\n                    warnings,\n                );\n            }\n            if (Array.isArray(errors) && errors.length) {\n                NotificationHandler.terminalLog('error', 'Specification is invalid', errors);\n            }\n\n            return errors;\n        }\n\n        /* eslint-disable no-lonely-if */\n        onMounted(async () => {\n            NotificationHandler.setShowNotification(false);\n            editorManager.updateMetadata({}); // Defaulting metadata values\n\n            const escapedsearch = window.location.search.replace(/&amp;/g, '&');\n            const urlParams = new URLSearchParams(escapedsearch);\n            if (urlParams.has('preview')) {\n                const setting = urlParams.get('preview') === 'true';\n                props.viewModel.editor.preview = setting;\n            }\n\n            let specText;\n            if (!defaultSpecification) {\n                // Try loading default specification and/or dataflow from URLs provided in an\n                if (urlParams.has('spec')) {\n                    const [status, ret] = await loadJsonFromRemoteLocation(urlParams.get('spec'));\n                    if (status === false) {\n                        NotificationHandler.terminalLog(\n                            'error',\n                            ret,\n                        );\n                        NotificationHandler.terminalLog(\n                            'error',\n                            `Failed to load the specification file from: ${urlParams.get('spec')}`,\n                        );\n                    } else {\n                        specText = ret;\n                    }\n                }\n            } else {\n                // Use raw-loader which does not parse the specification so that it is possible\n                // To add a more verbose validation log\n                if (verboseLoad) {\n                    specText =\n                        require(`!!raw-loader!${process.env.VUE_APP_SPECIFICATION_PATH}`).default; // eslint-disable-line global-require,import/no-dynamic-require\n                } else {\n                    specText = require(process.env.VUE_APP_SPECIFICATION_PATH); // eslint-disable-line global-require,import/no-dynamic-require,max-len\n                }\n            }\n\n            if (specText !== undefined) {\n                if (urlParams.has('include')) {\n                    if (specText.include === undefined) specText.include = [];\n                    specText.include.push(urlParams.get('include'));\n                }\n                let errors = await updateEditorSpecification(specText);\n\n                if (errors.length) {\n                    NotificationHandler.restoreShowNotification();\n                    emit('loadFinish');\n                    return;\n                }\n\n                let dataflow;\n                if (defaultDataflow) {\n                    dataflow = require(process.env.VUE_APP_DATAFLOW_PATH); // eslint-disable-line global-require,max-len,import/no-dynamic-require\n                } else {\n                    if (urlParams.has('graph')) {\n                        const [status, ret] = await loadJsonFromRemoteLocation(urlParams.get('graph'));\n                        if (status === false) {\n                            NotificationHandler.terminalLog(\n                                'error',\n                                ret,\n                            );\n                            NotificationHandler.terminalLog(\n                                'error',\n                                `Failed to load the graph file from: ${urlParams.get('graph')}`,\n                            );\n                        } else {\n                            dataflow = ret;\n                        }\n                    }\n                }\n                if (dataflow) {\n                    let warnings;\n                    ({ errors, warnings } = await editorManager.loadDataflow(dataflow));\n                    if (Array.isArray(warnings) && warnings.length) {\n                        NotificationHandler.terminalLog(\n                            'warning',\n                            'Issue when loading dataflow',\n                            warnings,\n                        );\n                    }\n                    if (Array.isArray(errors) && errors.length) {\n                        const messageTitle = process.env.VUE_APP_GRAPH_DEVELOPMENT_MODE === 'true' ?\n                            'Softload enabled, errors found while loading the dataflow' :\n                            'Dataflow is invalid';\n                        NotificationHandler.terminalLog('error', messageTitle, errors);\n                    }\n                }\n            }\n            NotificationHandler.restoreShowNotification();\n            emit('loadFinish');\n        });\n\n        const onDrop = async (event) => {\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'copy';\n            const files = [];\n            if (event.dataTransfer.items) {\n                [...event.dataTransfer.items].filter(\n                    (item) => item.kind === 'file',\n                ).forEach(\n                    (item) => files.push(item.getAsFile()),\n                );\n            } else {\n                files.push(...event.dataTransfer.files);\n            }\n            if (files.length > 1) {\n                NotificationHandler.showToast(\n                    'warning',\n                    'More than one file dropped, processing only the first one',\n                );\n            }\n            const reader = new FileReader();\n            reader.addEventListener('load', (ev) => {\n                const file = ev.target.result;\n                let data;\n                try {\n                    data = JSON.parse(file);\n                } catch (SyntaxError) {\n                    NotificationHandler.showToast(\n                        'error',\n                        'Dropped file is not in JSON format',\n                    );\n                    return;\n                }\n\n                if (data.nodes) { // Load Specification\n                    const specErrors = EditorManager.validateSpecification(data);\n                    if (specErrors.length) {\n                        NotificationHandler.terminalLog('error', 'Specification is invalid', specErrors);\n                        return;\n                    }\n                    editorManager.updateEditorSpecification(data).then(({ errors, warnings }) => {\n                        if (Array.isArray(warnings) && warnings.length) {\n                            NotificationHandler.terminalLog(\n                                'warning',\n                                'Issue when loading specification',\n                                warnings,\n                            );\n                        }\n                        if (Array.isArray(errors) && errors.length) {\n                            NotificationHandler.terminalLog('error', 'Specification is invalid', errors);\n                        }\n                    });\n                    return;\n                }\n\n                if (data.graphs) { // Load Dataflow\n                    editorManager.loadDataflow(data).then(({ errors, warnings }) => {\n                        if (Array.isArray(warnings) && warnings.length) {\n                            NotificationHandler.terminalLog(\n                                'warning',\n                                'Issue when loading dataflow',\n                                warnings,\n                            );\n                        }\n                        if (Array.isArray(errors) && errors.length) {\n                            const messageTitle = process.env.VUE_APP_GRAPH_DEVELOPMENT_MODE === 'true' ?\n                                'Softload enabled, errors found while loading the dataflow' :\n                                'Dataflow is invalid';\n                            NotificationHandler.terminalLog('error', messageTitle, errors);\n                        }\n                    });\n                    return;\n                }\n\n                NotificationHandler.showToast(\n                    'error',\n                    'File is neither specification nor dataflow',\n                );\n            });\n            reader.onerror = (er) => NotificationHandler.terminalLog(\n                'error',\n                'File cannot be loaded',\n                er.message,\n            );\n            reader.readAsText(files[0]);\n        };\n\n        return {\n            el,\n            counter,\n            selectedNodes,\n            nodeContainerStyle,\n            onRightPointerUp,\n            onDrop,\n            nodes,\n            keyDown,\n            keyUp,\n            selectNode,\n            rectangleSelection,\n            greyedOutNodes,\n            temporaryConnection: temporaryConnection.temporaryConnection,\n            mouseWheel: panZoom.onMouseWheel,\n            dragging: panZoom.dragging,\n            changeHoveredConnections,\n            highlightConnections,\n            connRefs,\n            clearHighlight,\n            readonly,\n            hideHud,\n            scale,\n            visibleConnections,\n            visibleNodes,\n            highlightInterfaces,\n            editorStyle,\n        };\n    },\n});\n</script>\n","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nInterface that is used to display inputs, outputs and properties of a node.\n\nThe custom implementations introduces wrapper functions that prevent the user\nfrom creating and deleting connections or altering nodes' values if the editor is read-only.\n-->\n\n<template>\n    <transition name=\"slide-fade\">\n        <div\n            v-show=\"modelValue\"\n            ref=\"el\"\n            class=\"baklava-context-menu\"\n            :class=\"classes\"\n            :style=\"styles\"\n        >\n            <template v-if=\"itemsWithHoverProperty.length === 0\">\n                <div\n                    class=\"readonly item\"\n                    style=\"cursor: default\"\n                >\n                    <div class=\"text\"><i>No resources</i></div>\n                </div>\n            </template>\n            <template v-for=\"(item, index) in itemsWithHoverProperty\">\n                <div\n                    v-if=\"item.url === undefined\"\n                    :key=\"`i-${index}`\"\n                    class=\"item\"\n                    :class=\"{ submenu: !!item.submenu, '--disabled': !!item.disabled }\"\n                    @click.stop=\"onClick(item)\"\n                >\n                    <div class=\"icon\">\n                        <component v-if=\"item.icon !== undefined\" :is=\"item.icon\"></component>\n                    </div>\n                    <div class=\"text\">{{ item.label }}</div>\n                </div>\n                <a\n                    v-else\n                    :key=\"item.name\"\n                    :href=\"item.url\"\n                    class=\"item\"\n                    target=\"_blank\"\n                    draggable=\"false\"\n                    @click.stop=\"onClick(item)\"\n                >\n                    <div class=\"icon\">\n                        <img\n                            v-if=\"getIconPath(item.icon) !== undefined\"\n                            :src=\"getIconPath(item.icon)\"\n                            :alt=\"item.name\"\n                            draggable=\"false\"\n                        />\n                    </div>\n                    <div class=\"text\">{{ item.name }}</div>\n                </a>\n                <hr v-if=\"item.endSection\" :key=\"`hr-${index}`\" />\n            </template>\n        </div>\n    </transition>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue';\nimport { Components, useViewModel } from '@baklavajs/renderer-vue';\n\nexport default defineComponent({\n    extends: Components.ContextMenu,\n    props: {\n        urls: {\n            required: false,\n            default: [],\n        },\n    },\n    emits: ['update:modelValue', 'click'],\n    setup(props, context) {\n        const {\n            el,\n            styles,\n            classes,\n            itemsWithHoverProperty,\n        } = // eslint-disable-line object-curly-newline\n            Components.ContextMenu.setup(props, context);\n\n        const { viewModel } = useViewModel();\n        const getIconPath = (name) => viewModel.value.cache[`./${name}`] ?? name;\n\n        const justOpened = ref(true);\n\n        const closeContextMenu = (ev) => {\n            if (props.modelValue === true) {\n                // We need a counter so that this event is not fired right when the menu is opened\n                if (justOpened.value === false) {\n                    const elements = document.elementsFromPoint(ev.clientX, ev.clientY);\n                    // We only need to fire closing event if the click was\n                    // outside of the context menu. Otherwise `onClick` is fired.\n                    if (!elements.includes(el.value)) {\n                        window.removeEventListener('wheel', closeContextMenu);\n                        window.removeEventListener('pointerdown', closeContextMenu);\n                        context.emit('update:modelValue', false);\n                    }\n                    justOpened.value = true;\n                } else {\n                    justOpened.value = false;\n                }\n            }\n        };\n\n        window.addEventListener('wheel', closeContextMenu);\n        window.addEventListener('pointerdown', closeContextMenu);\n\n        const onClick = (item) => {\n            context.emit('click', item.value);\n            context.emit('update:modelValue', false);\n        };\n\n        return {\n            el,\n            styles,\n            classes,\n            itemsWithHoverProperty,\n            onClick,\n            getIconPath,\n        };\n    },\n});\n</script>\n","import { render } from \"./ContextMenu.vue?vue&type=template&id=1956d404\"\nimport script from \"./ContextMenu.vue?vue&type=script&lang=js\"\nexport * from \"./ContextMenu.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nThe baklavajs functionality was fully copied to this component, as the original\nimplementation uses `<script setup>` which does not work well with `extends` feature.\n\nAside from the original source code, the custom node implements displaying name tags\nfor properties that do not display them, support for readonly mode that prevents the user\nfrom moving or deleting the nodes.\n -->\n\n<template>\n    <div\n        :id=\"node.id\"\n        ref=\"nodeRef\"\n        class=\"baklava-node\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :data-node-type=\"node.type\"\n        @pointerdown.left.self=\"(ev) => select(ev)\"\n        oncontextmenu=\"return false;\"\n    >\n        <div class=\"interface-cursor\">\n            <div class=\"line\" :style=\"interfaceCursorStyle\"></div>\n        </div>\n        <div\n            class=\"__title\"\n            ref=\"titleRef\"\n            :style=\"nodeTitleStyle\"\n            @pointerdown.left.exact=\"onMouseDown\"\n            @pointerdown.left=\"startDragWrapper($event)\"\n            @pointerdown.right=\"openContextMenuTitle\"\n            v-long-press:500=\"openContextMenuTitle\"\n        >\n            <img\n                class=\"__title-icon\"\n                v-if=\"iconPath !== undefined\"\n                :src=\"iconPath\"\n            >\n            <div v-if=\"!renaming\" class=\"__title-label\" v-html=\"nodeTitle\">\n            </div>\n            <input\n                v-else\n                type=\"text\"\n                class=\"baklava-input\"\n                v-model=\"tempName\"\n                placeholder=\"Node Name\"\n                ref=\"renameField\"\n                v-click-outside=\"doneRenaming\"\n                @keydown.enter=\"doneRenaming\"\n            />\n            <CustomContextMenu\n                v-if=\"showContextMenuTitle\"\n                v-model=\"showContextMenuTitle\"\n                :x=\"contextMenuTitleX\"\n                :y=\"contextMenuTitleY\"\n                :items=\"contextMenuTitleItems\"\n                :urls=\"nodeURLs\"\n                :style=\"contextMenuStyle\"\n                @pointerdown.left.stop\n                @click=\"onContextMenuTitleClick\"\n            />\n        </div>\n\n        <div class=\"__content\">\n            <!-- Properties -->\n            <div class=\"__properties\">\n                <div v-for=\"input in displayedProperties\" :key=\"input.id\">\n                    {{ getOptionName(input.componentName) ? `${input.name}:` : '' }}\n                    <CustomInterface :node=\"node\" :intf=\"input\" :toggleGroup=\"toggleGroup\" />\n                </div>\n            </div>\n\n            <!-- Outputs -->\n            <div class=\"__outputs\" ref=\"rightSocketsRefs\">\n                <template v-for=\"output in displayedRightRows\">\n                    <CustomInterface\n                        :key=\"output.id\"\n                        v-if=\"output\"\n                        @pointerdown.left.shift=\"pickInterface(output, $event)\"\n                        @pointerdown.right.exact=\"openContextMenuInterface(output, $event)\"\n                        v-long-press-to-right:500\n                        :node=\"node\"\n                        :intf=\"output\"\n                        :highlighted=\"props.interfaces.includes(output)\"\n                        :picked=\"isPickedInterface(output)\"\n                        :switchSides=\"switchSides\"\n                    />\n                    <!-- eslint-disable-next-line vue/require-v-for-key -->\n                    <div v-else class=\"baklava-node-interface --output\">&nbsp;</div>\n                </template>\n            </div>\n\n            <!-- Inputs -->\n            <div class=\"__inputs\" ref=\"leftSocketsRefs\">\n                <template v-for=\"input in displayedLeftRows\">\n                    <CustomInterface\n                        :key=\"input.id\"\n                        v-if=\"input\"\n                        @pointerdown.left.shift=\"pickInterface(input, $event)\"\n                        @pointerdown.right=\"openContextMenuInterface(input, $event)\"\n                        v-long-press-to-right:500\n                        :node=\"node\"\n                        :intf=\"input\"\n                        :highlighted=\"props.interfaces.includes(input)\"\n                        :picked=\"isPickedInterface(input)\"\n                        :switchSides=\"switchSides\"\n                    />\n                    <!-- eslint-disable-next-line vue/require-v-for-key -->\n                    <div v-else class=\"baklava-node-interface --input\">&nbsp;</div>\n                </template>\n            </div>\n\n            <CustomContextMenu\n                v-if=\"showContextMenuInterface\"\n                v-model=\"showContextMenuInterface\"\n                :x=\"contextMenuInterfaceX\"\n                :y=\"contextMenuInterfaceY\"\n                :items=\"contextMenuInterfaceItems\"\n                :style=\"contextMenuStyle\"\n                @click=\"onContextMenuInterfaceClick\"\n            />\n        </div>\n    </div>\n</template>\n\n<script setup>\n/* eslint-disable object-curly-newline */\nimport { ref, computed, toRef, onUpdated, onMounted, nextTick, markRaw, watch } from 'vue';\nimport { useViewModel, useGraph } from '@baklavajs/renderer-vue';\nimport { AbstractNode, GRAPH_NODE_TYPE_PREFIX } from '@baklavajs/core';\n\nimport useGroupDragMove from './useGroupDragMove';\nimport CustomInterface from './CustomInterface.vue';\nimport CustomContextMenu from './ContextMenu.vue';\nimport { gridSnapper } from '../core/snappers';\nimport icons from '../icons/index';\nimport doubleClick from '../core/doubleClick.js';\nimport { getOptionName, updateInterfacePosition, removeNode } from './CustomNode.js';\nimport {\n    startTransaction, commitTransaction,\n} from '../core/History.ts';\n\nimport EditorManager from '../core/EditorManager';\nimport NotificationHandler from '../core/notifications.js';\nimport getExternalApplicationManager from '../core/communication/ExternalApplicationManager';\n\nimport InputInterfaceComponent from '../interfaces/InputInterface.vue';\nimport ListInterfaceComponent from '../interfaces/ListInterface.vue';\nimport SliderInterfaceComponent from '../interfaces/SliderInterface.vue';\nimport HexInterfaceComponent from '../interfaces/HexInterface.vue';\n\n// Baklavajs implementation\n\nconst props = defineProps({\n    node: AbstractNode,\n    selected: Boolean,\n    greyedOut: Boolean,\n    interfaces: Array,\n});\n\nconst emit = defineEmits(['select']);\n\nconst { viewModel } = useViewModel();\nconst { graph } = useGraph();\nconst movementStep = computed(() => viewModel.value.movementStep);\n\nconst contextMenuStyle = computed(() => ({\n    'transform-origin': '0 0',\n    transform: `scale(${1 / graph.value.scaling})`,\n}));\n\nconst nodeRef = ref(null);\nconst titleRef = ref(null);\nconst renaming = ref(false);\nconst renameField = ref(null);\nconst tempName = ref('');\n\nconst nodeURLs = viewModel.value.editor.getNodeURLs(props.node.type);\nconst displayNoResources = !viewModel.value.editor.nodeURLsEmpty();\n\nconst displayedInputs = computed(() => Object.values(props.node.inputs).filter((ni) => !ni.hidden));\nconst displayedOutputs = computed(() =>\n    Object.values(props.node.outputs).filter((ni) => !ni.hidden),\n);\n\nconst editorManager = EditorManager.getEditorManagerInstance();\nconst externalApplicationManager = getExternalApplicationManager();\n// Watch properties\nObject.entries(props.node.inputs).forEach(([name, input]) => {\n    if (externalApplicationManager.backendAvailable && name.startsWith('property_')) {\n        let firstWatch = true;\n        watch(input, async (value) => {\n            if (firstWatch || !editorManager.notifyWhenChanged) {\n                firstWatch = false;\n                return;\n            }\n            const data = {\n                graph_id: props.node.graphInstance.id,\n                node_id: props.node.id,\n                properties: [],\n            };\n            data.properties.push({\n                id: value.id,\n                new_value: value.value,\n            });\n            await externalApplicationManager.notifyAboutChange('properties_on_change', data);\n        });\n    }\n});\n\n// Send message about changed position\nconst notifyPositionChanged = (position) => {\n    externalApplicationManager.notifyAboutChange('position_on_change', {\n        graph_id: props.node.graphInstance.id,\n        node_id: props.node.id,\n        position: {\n            x: position.x,\n            y: position.y,\n        },\n    });\n};\n// Create watcher for position\nconst startPositionWatcher = (position) => watch(position, (value) => {\n    if (!editorManager.notifyWhenChanged) return;\n    notifyPositionChanged(value);\n});\nif (externalApplicationManager.backendAvailable) {\n    let stopPositionWatcher = startPositionWatcher(props.node.position);\n    // Restart watcher when position is replaced\n    watch(() => props.node.position, (value) => {\n        stopPositionWatcher();\n        notifyPositionChanged(value);\n        stopPositionWatcher = startPositionWatcher(value);\n    });\n}\n\nconst focusOnRename = () => {\n    renameField.value.focus();\n    renameField.value.select();\n};\n\n// Title context menu\nconst showContextMenuTitle = ref(false);\nconst contextMenuTitleX = ref(0);\nconst contextMenuTitleY = ref(0);\nconst contextMenuTitleItems = computed(() => {\n    const items = [];\n    items.push({ value: 'sidebar', label: 'Details', icon: icons.Sidebar });\n    if (!viewModel.value.editor.readonly) {\n        items.push({ value: 'rename', label: 'Rename', icon: icons.Pencil });\n    }\n    if (props.node.type.startsWith(GRAPH_NODE_TYPE_PREFIX)) {\n        items.push({ value: 'editSubgraph', label: 'Edit Subgraph' });\n    }\n    if (items.length > 1) {\n        items.at(-1).endSection = true;\n    }\n\n    items.push(...nodeURLs);\n\n    if (!viewModel.value.editor.readonly) {\n        if (items.length > 1) {\n            items.at(-1).endSection = true;\n        }\n        items.push(\n            { value: 'disconnect', label: 'Disconnect', icon: icons.Disconnect },\n            { value: 'delete', label: 'Delete', icon: icons.Bin },\n        );\n    }\n\n    // NOTE: This feature is disabled for now, as it is not fully implemented\n    const SUPPORT_NODE_UNWRAPPING = false;\n    if (SUPPORT_NODE_UNWRAPPING) {\n        if (props.node.type.startsWith(GRAPH_NODE_TYPE_PREFIX)) {\n            items.push({ value: 'unwrap', label: 'Unwrap Subgraph', icon: icons.Unwrap });\n        }\n    }\n\n    return items;\n});\n\nconst openSidebar = () => {\n    const { sidebar } = viewModel.value.displayedGraph;\n    sidebar.nodeId = props.node.id;\n    sidebar.visible = true;\n};\n\n/* eslint-disable default-case */\nconst onContextMenuTitleClick = async (action) => {\n    switch (action) {\n        case 'delete':\n            startTransaction();\n            // If the node is not selected, select it\n            if (!graph.value.selectedNodes.includes(props.node)) {\n                graph.value.selectedNodes.push(props.node);\n            }\n            graph.value.selectedNodes.forEach((node) => {\n                removeNode(node);\n            });\n            commitTransaction();\n            break;\n        case 'rename':\n            tempName.value = props.node.title;\n            renaming.value = true;\n            await nextTick();\n            focusOnRename();\n            break;\n        case 'disconnect': {\n            startTransaction();\n            let interfaces = [...displayedInputs.value, ...displayedOutputs.value];\n            graph.value.selectedNodes.forEach((node) => {\n                interfaces = interfaces.concat(\n                    Object.entries(node.inputs).filter(([name, ni]) => !ni.hidden && !name.startsWith('property_')).map(([, ni]) => ni),\n                    Object.values(node.outputs).filter((ni) => !ni.hidden),\n                );\n            });\n            const nodeConnections = graph.value.connections.filter(\n                (c) =>\n                    (interfaces.find((i) => i === c.from || i === c.to) !== undefined),\n            );\n            nodeConnections.forEach((c) => {\n                graph.value.removeConnection(c);\n            });\n            commitTransaction();\n        } break;\n        case 'sidebar':\n            openSidebar();\n            break;\n        case 'editSubgraph': {\n            const errors = viewModel.value.editor.switchToSubgraph(props.node);\n            if (Array.isArray(errors) && errors.length) {\n                NotificationHandler.terminalLog('error', 'Dataflow is invalid', errors);\n            }\n            break;\n        }\n        case 'unwrap': {\n            startTransaction();\n            removeNode(props.node, true);\n            commitTransaction();\n        }\n    }\n};\n\nconst canOpenContextMenu = computed(() =>\n    (contextMenuTitleItems.value.length === 0 && displayNoResources)\n        || contextMenuTitleItems.value.length > 0,\n);\n\nconst openContextMenuTitle = (ev) => {\n    if (\n        canOpenContextMenu.value &&\n        showContextMenuTitle.value === false\n\n    ) {\n        contextMenuTitleX.value = ev.offsetX;\n        contextMenuTitleY.value = ev.offsetY;\n        showContextMenuTitle.value = true;\n    }\n};\n\nconst groupDragMove = useGroupDragMove(\n    toRef(props.node, 'position'),\n    props.node.id,\n    gridSnapper(movementStep),\n);\n\nconst classes = computed(() => ({\n    '--selected': props.selected,\n    '--dragging': groupDragMove.dragging.value,\n    '--two-column': !!props.node.twoColumn,\n    '--greyed-out': props.greyedOut,\n    __readonly: viewModel.value.editor.readonly,\n}));\n\nconst styles = computed(() => ({\n    top: `${props.node.position?.y ?? 0}px`,\n    left: `${props.node.position?.x ?? 0}px`,\n    width: `${props.node.width ?? 200}px`,\n}));\n\nconst nodeTitle = computed(() => {\n    const title = props.node.highlightedTitle ?? props.node.title;\n    const type = props.node.highlightedType ?? props.node.type;\n\n    // Graph node case\n    if (props.node.type.startsWith(GRAPH_NODE_TYPE_PREFIX)) {\n        if (title === '' || title === undefined) {\n            // The highlighted title does not have the GRAPH_NODE_TYPE_PREFIX\n            // because otherwise <span> tags could mangle the name\n            if (props.node.highlightedTitle === props.node.title) {\n                return type.slice(GRAPH_NODE_TYPE_PREFIX.length);\n            }\n            return type;\n        }\n\n        return title;\n    }\n\n    if (title === '' || props.node.title === props.node.type) {\n        return type;\n    }\n\n    return `${title} <pre class=\"subtitle\">${type}</pre>`;\n});\n\nconst select = (event) => {\n    emit('select', event);\n};\n\nlet abortDrag;\nlet stopDrag;\n\nconst cleanEvents = () => {\n    document.removeEventListener('pointermove', groupDragMove.onPointerMove);\n    document.removeEventListener('keyboard.escape', abortDrag);\n    document.removeEventListener('pointerup', stopDrag);\n};\n\nabortDrag = () => {\n    cleanEvents();\n};\n\nstopDrag = () => {\n    groupDragMove.onPointerUp();\n    cleanEvents();\n};\n\nconst startDrag = (ev) => {\n    if (!graph.value.selectedNodes.includes(props.node)) {\n        select(ev);\n    }\n\n    groupDragMove.onPointerDown(ev);\n    document.addEventListener('pointermove', groupDragMove.onPointerMove);\n    document.addEventListener('keyboard.escape', abortDrag);\n    document.addEventListener('pointerup', stopDrag);\n};\n\nconst doneRenaming = () => {\n    graph.value.findNodeById(props.node.id).title = tempName.value;\n    renaming.value = false;\n};\n\nconst onRender = () => {\n    if (nodeRef.value) {\n        viewModel.value.hooks.renderNode.execute({ node: props.node, el: nodeRef.value });\n    }\n};\n\nonMounted(onRender);\nonUpdated(onRender);\n\n// ----------\n\n/**\n * Wrapper that prevents node moving if the editor is in read-only mode.\n *\n * @param ev Event\n */\nconst startDragWrapper = (ev) => {\n    if (!viewModel.value.editor.readonly) {\n        startDrag(ev);\n    }\n};\n\nconst openDoubleClick = doubleClick(700, () => {\n    openSidebar();\n});\n\n/* eslint-disable vue/no-mutating-props,no-param-reassign */\nconst onMouseDown = () => {\n    const { sidebar } = viewModel.value.displayedGraph;\n    if (sidebar.visible) {\n        sidebar.nodeId = props.node.id;\n    }\n\n    openDoubleClick();\n};\n\nconst displayedProperties = computed(() =>\n    Object.values(displayedInputs.value).filter((intf) => !intf.port),\n);\n\nconst displayedLeftSockets = computed(() =>\n    Object.values([...displayedInputs.value, ...displayedOutputs.value])\n        .filter((intf) => intf.side === 'left' && intf.port)\n        .sort((intf1, intf2) => intf1.sidePosition - intf2.sidePosition),\n);\n\nconst displayedRightSockets = computed(() =>\n    Object.values([...displayedInputs.value, ...displayedOutputs.value])\n        .filter((intf) => intf.side === 'right' && intf.port)\n        .sort((intf1, intf2) => intf1.sidePosition - intf2.sidePosition),\n);\n\nconst getRows = (sockets) => {\n    if (!sockets.length) {\n        return [];\n    }\n\n    const numOfLines = Math.max(\n        displayedLeftSockets.value.at(-1)?.sidePosition ?? 0,\n        displayedRightSockets.value.at(-1)?.sidePosition ?? 0,\n    );\n\n    let numOfSocket = 0;\n    const rows = [];\n\n    for (let i = 0; i <= numOfLines; i += 1) {\n        if (sockets[numOfSocket]?.sidePosition === i) {\n            rows.push(sockets[numOfSocket]);\n            numOfSocket += 1;\n        } else {\n            rows.push(undefined);\n        }\n    }\n    return rows;\n};\n\nconst displayedRightRows = computed(() => getRows(displayedRightSockets.value));\nconst displayedLeftRows = computed(() => getRows(displayedLeftSockets.value));\n\ndisplayedProperties.value.forEach((prop) => {\n    if (prop.component === undefined) {\n        if (prop.componentName === 'InputInterface') {\n            prop.setComponent(markRaw(InputInterfaceComponent));\n        } else if (prop.componentName === 'ListInterface') {\n            prop.setComponent(markRaw(ListInterfaceComponent));\n        } else if (prop.componentName === 'SliderInterface') {\n            prop.setComponent(markRaw(SliderInterfaceComponent));\n        } else if (prop.componentName === 'HexInterface') {\n            prop.setComponent(markRaw(HexInterfaceComponent));\n        }\n    }\n});\n\nconst path = viewModel.value.editor.getNodeIconPath(props.node.type);\nconst iconPath = viewModel.value.cache[`./${path}`] ?? path;\n\n// Interface modification\n\nlet newSocketIndex;\nlet chosenInterface;\n\nconst leftSocketsRefs = ref(null);\nconst rightSocketsRefs = ref(null);\n\nconst interfaceCursorStyle = ref({\n    top: '0px',\n    left: '0px',\n    display: 'none',\n});\n\nconst nodeTitleStyle = computed(() => {\n    if (!viewModel.value.editor.readonly) {\n        return {\n            cursor: 'drag',\n        };\n    }\n\n    if (canOpenContextMenu.value) {\n        return {\n            cursor: 'pointer',\n        };\n    }\n\n    return {\n        cursor: 'default',\n    };\n});\n\nconst isPickedInterface = (intf) => intf === chosenInterface;\n\nconst assignNewPosition = () => {\n    updateInterfacePosition(\n        props.node,\n        chosenInterface,\n        chosenInterface.side,\n        newSocketIndex,\n        true,\n    );\n};\n\nconst dragInterface = (ev) => {\n    let sockets;\n    if (chosenInterface.side === 'right') {\n        sockets = rightSocketsRefs.value;\n    } else if (chosenInterface.side === 'left') {\n        sockets = leftSocketsRefs.value;\n    }\n\n    // Finding the first interface that is lower than the cursor\n    let socket = [...sockets.children].findIndex((socketRef) => {\n        const boundingRect = socketRef.getBoundingClientRect();\n        return boundingRect.bottom > ev.clientY;\n    });\n    newSocketIndex = socket;\n\n    if (socket === -1) {\n        socket = sockets.children.length - 1;\n        newSocketIndex = sockets.children.length - 1;\n    }\n\n    const el = sockets.children[socket];\n    interfaceCursorStyle.value = {\n        top: `${el.offsetTop + el.offsetHeight / 2 - 2.5}px`,\n        display: 'block',\n    };\n\n    if (chosenInterface.side === 'right') {\n        interfaceCursorStyle.value.right = '-0.7em';\n    } else if (chosenInterface.side === 'left') {\n        interfaceCursorStyle.value.left = '-0.7em';\n    }\n};\n\nconst dropInterface = () => {\n    assignNewPosition();\n\n    chosenInterface = undefined;\n    interfaceCursorStyle.value = {\n        top: '0px',\n        left: '0px',\n        right: '0px',\n        display: 'none',\n    };\n\n    document.removeEventListener('pointermove', dragInterface);\n    document.removeEventListener('pointerup', dropInterface);\n};\n\nconst pickInterface = (intf, ev) => {\n    chosenInterface = intf;\n    dragInterface(ev);\n\n    document.addEventListener('pointermove', dragInterface);\n    document.addEventListener('pointerup', dropInterface);\n};\n\n// Interface context menu\n\nconst showContextMenuInterface = ref(false);\nconst contextMenuInterfaceX = ref(0);\nconst contextMenuInterfaceY = ref(0);\n\nconst createContextMenuInterfaceItems = () => {\n    const items = [];\n\n    if (chosenInterface !== undefined) {\n        const intfMode = (chosenInterface.externalName === undefined ?\n            { value: 'SetExternalName', label: 'Expose Interface' } :\n            { value: 'UnsetExternalName', label: 'Privatize Interface' }\n        );\n        items.push(intfMode);\n    }\n\n    items.push(\n        { value: 'SpaceUp', label: 'Space Up' },\n        { value: 'SpaceDown', label: 'Space Down' },\n        { value: 'MoveUp', label: 'Move Up' },\n        { value: 'MoveDown', label: 'Move Down' },\n    );\n\n    return items;\n};\n\nconst contextMenuInterfaceItems = ref(createContextMenuInterfaceItems());\n\n/* eslint-disable default-case */\nconst onContextMenuInterfaceClick = (action) => {\n    switch (action) {\n        case 'SetExternalName':\n            viewModel.value.editor.exposeInterface(\n                graph.value.id,\n                chosenInterface,\n            );\n            break;\n        case 'UnsetExternalName':\n            viewModel.value.editor.privatizeInterface(\n                graph.value.id,\n                chosenInterface,\n            );\n            break;\n        case 'MoveUp':\n            if (chosenInterface.sidePosition === 0) {\n                chosenInterface = undefined;\n                break;\n            }\n            newSocketIndex = chosenInterface.sidePosition - 1;\n            dropInterface();\n            break;\n        case 'MoveDown':\n            newSocketIndex = chosenInterface.sidePosition + 1;\n            dropInterface();\n            break;\n        case 'SpaceUp':\n        case 'SpaceDown': {\n            const sockets =\n                chosenInterface.side === 'right'\n                    ? displayedRightRows.value\n                    : displayedLeftRows.value;\n            const comparison = action === 'SpaceDown' ? (a, b) => a > b : (a, b) => a >= b;\n            Object.values(sockets).forEach((intf) => {\n                if (intf !== undefined &&\n                comparison(intf.sidePosition, chosenInterface.sidePosition)) {\n                    intf.sidePosition += 1; // eslint-disable-line no-param-reassign\n                }\n            });\n            break;\n        }\n    }\n};\n\nconst openContextMenuInterface = (intf, ev) => {\n    if (!viewModel.value.editor.readonly && showContextMenuInterface.value === false) {\n        chosenInterface = intf;\n        contextMenuInterfaceItems.value = createContextMenuInterfaceItems();\n        if (chosenInterface.side === 'right') {\n            contextMenuInterfaceX.value = ev.currentTarget.offsetLeft + 162.5;\n            contextMenuInterfaceY.value = ev.currentTarget.offsetTop + 12.5;\n        } else if (chosenInterface.side === 'left') {\n            contextMenuInterfaceX.value =\n                ev.currentTarget.offsetLeft - ev.currentTarget.offsetWidth + 162.5;\n            contextMenuInterfaceY.value = ev.currentTarget.offsetTop + 12.5;\n        }\n\n        showContextMenuInterface.value = true;\n    }\n};\n\nwatch(showContextMenuInterface, () => {\n    if (showContextMenuInterface.value === false) {\n        chosenInterface = undefined;\n    }\n});\n\nconst toggleGroup = (intf) => {\n    intf.group.forEach((name) => {\n        props.node.inputs[name].hidden = !intf.value;\n    });\n};\n\n/* eslint-disable no-param-reassign */\nconst switchSides = (intf) => {\n    if (intf.side === 'left') {\n        updateInterfacePosition(props.node, intf, 'right');\n    } else {\n        updateInterfacePosition(props.node, intf, 'left');\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.interface-cursor {\n    position: relative;\n    top: 0;\n    left: 0;\n\n    & > .line {\n        position: absolute;\n        height: 0.2em;\n        width: 1.4em;\n        background-color: $gold;\n        z-index: 100;\n    }\n}\n\n</style>\n","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\nimport { useGraph } from '@baklavajs/renderer-vue';\nimport useDragMove from './useDragMove';\n/* eslint-disable no-param-reassign, @typescript-eslint/no-explicit-any */\nexport default function useGroupDragMove(dragRootNodePosition, dragRootNodeId = undefined, gridSnapperInstance = undefined) {\n    const { graph } = useGraph();\n    const groupDragMove = useDragMove(dragRootNodePosition, gridSnapperInstance, dragRootNodeId);\n    const groupPointerMove = groupDragMove.onPointerMove;\n    const onPointerMove = (ev) => {\n        const groupPositionCoords = {\n            x: dragRootNodePosition.value.x,\n            y: dragRootNodePosition.value.y,\n        };\n        groupPointerMove(ev);\n        const dx = dragRootNodePosition.value.x - groupPositionCoords.x;\n        const dy = dragRootNodePosition.value.y - groupPositionCoords.y;\n        graph.value.selectedNodes.forEach((node) => {\n            if (node.id !== dragRootNodeId) {\n                node.position.x += dx;\n                node.position.y += dy;\n            }\n        });\n    };\n    groupDragMove.onPointerMove = onPointerMove;\n    return groupDragMove;\n}\n","import script from \"./CustomNode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CustomNode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CustomNode.vue?vue&type=style&index=0&id=f0e65632&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f0e65632\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nComponent defining connection between two different nodes\nInherits from baklavajs/renderer-vue/src/connection/ConnectionView.vue\n-->\n\n<template>\n    <g v-if=\"hasAnchors\">\n        <path :d=\"parsedNewD\" class=\"connection-wrapper baklava-connection\"></path>\n        <!-- The connection wrapper is rendered twice, once for\n            easy highlight detection, and once for creating anchor points -->\n\n        <!-- eslint-disable vue/valid-v-for -->\n        <template v-if=\"hasAnchors\">\n            <g\n                v-for=\"(d, index) in parsedNewD\"\n                @pointerdown.left.exact=\"onMouseDown\"\n                @pointerdown=\"(ev) => { if(ev.pointerType === 'touch') onMouseDown(ev) }\"\n                @pointerdown.left.ctrl.exact=\"(ev) => onMouseCtrlDown(ev, index)\"\n            >\n            <path :d=\"d\" class=\"connection-wrapper baklava-connection\"></path>\n            <path :d=\"d\" class=\"baklava-connection\" :class=\"cssClasses\" :style=\"style\"></path>\n            </g>\n            <Anchor\n                v-for=\"(anchor, index) in connection.anchors\"\n                :key=\"anchor.id\"\n                :position=\"anchor\"\n                :rightclickCallback=\"() => removeAnchor(index)\"\n            />\n        </template>\n    </g>\n    <g\n        v-else\n        @pointerdown.left.exact=\"onMouseDown\"\n        @pointerdown=\"(ev) => { if(ev.pointerType === 'touch') onMouseDown(ev) }\"\n        @pointerdown.left.ctrl.exact=\"(ev) => onMouseCtrlDown(ev, 0)\"\n    >\n        <path :d=\"parsedNewD\" class=\"connection-wrapper baklava-connection\"></path>\n        <path :d=\"parsedNewD\" class=\"baklava-connection\" :class=\"cssClasses\" :style=\"style\"></path>\n    </g>\n</template>\n\n<script>\nimport { defineComponent, computed } from 'vue';\nimport { Components, useGraph, useViewModel } from '@baklavajs/renderer-vue';\nimport doubleClick from '../../core/doubleClick';\nimport Anchor from '../../components/Anchor.vue';\n\n/* eslint-disable vue/no-mutating-props,no-param-reassign */\nexport default defineComponent({\n    extends: Components.Connection,\n    props: { isHighlighted: { default: false }, connection: { required: true } },\n    components: { Anchor },\n    setup(props) {\n        const { classes } = Components.Connection.setup(props);\n        const { graph } = useGraph();\n        const { viewModel } = useViewModel();\n        const { interfaceTypes } = viewModel.value;\n\n        const connectionStyle = interfaceTypes.getConnectionStyle(\n            props.connection.from,\n            props.connection.to,\n        );\n\n        const cssClasses = computed(() => ({\n            ...classes.value,\n            '--hover': props.isHighlighted,\n            '--dashed': connectionStyle.interfaceConnectionPattern === 'dashed',\n            '--dotted': connectionStyle.interfaceConnectionPattern === 'dotted',\n        }));\n\n        const style = computed(() => ({\n            '--color': connectionStyle.interfaceConnectionColor,\n        }));\n\n        const onMouseDown = doubleClick(700, (ev) => {\n            if (!viewModel.value.editor.readonly) {\n                ev.preventDefault();\n                graph.value.removeConnection(props.connection);\n            }\n        });\n\n        const removeAnchor = (idx) => {\n            if (viewModel.value.editor.readonly) return;\n            graph.value.events.removeAnchor.emit([props.connection, idx]);\n            props.connection.anchors.splice(idx, 1);\n        };\n\n        const onMouseCtrlDown = (ev, index) => {\n            if (\n                viewModel.value.editor.readonly ||\n                viewModel.value.connectionRenderer.style !== 'orthogonal'\n            ) return;\n            ev.preventDefault();\n\n            const newAnchor = {\n                x: (ev.offsetX / graph.value.scaling) - graph.value.panning.x,\n                y: (ev.offsetY / graph.value.scaling) - graph.value.panning.y,\n                id: Date.now(),\n            };\n                // The index shows the connection section that was pressed -\n                // since we have an extra one at the beginning, we need a -1 and a\n                // division by 3 with no decimal to determine what anchor position\n                // corresponds\n            graph.value.addAnchor(newAnchor, props.connection, Math.trunc((index - 1) / 3));\n        };\n\n        const transform = (x, y) => {\n            const tx = (x + graph.value.panning.x) * graph.value.scaling;\n            const ty = (y + graph.value.panning.y) * graph.value.scaling;\n            return [tx, ty];\n        };\n\n        const newD = computed(() => {\n            const [tx1, ty1] = transform(props.x1, props.y1);\n            const [tx2, ty2] = transform(props.x2, props.y2);\n            return viewModel.value.connectionRenderer.render(tx1, ty1, tx2, ty2, props.connection);\n        });\n\n        const parsedNewD = computed(() => {\n            const d = newD.value;\n\n            if (Array.isArray(d) && d.length) {\n                const parsedArray = [];\n                for (let i = 0; i < d.length - 1; i += 1) {\n                    parsedArray.push(`M ${d[i].x} ${d[i].y} L ${d[i + 1].x} ${d[i + 1].y}`);\n                }\n                return parsedArray;\n            }\n            return d;\n        });\n\n        const hasAnchors = computed(() =>\n            props.connection.anchors !== undefined &&\n            props.connection.anchors.length &&\n            viewModel.value.connectionRenderer.style === 'orthogonal',\n        );\n\n        return {\n            cssClasses,\n            parsedNewD,\n            onMouseDown,\n            onMouseCtrlDown,\n            style,\n            hasAnchors,\n            removeAnchor,\n        };\n    },\n});\n</script>\n","import { render } from \"./ConnectionView.vue?vue&type=template&id=f8f5e354\"\nimport script from \"./ConnectionView.vue?vue&type=script&lang=js\"\nexport * from \"./ConnectionView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Baklava file that is not exported so it has to be copy-pasted here locally into the project\n\nexport default function getDomElements(ni) {\n    const interfaceDOM = document.getElementById(ni.id);\n    const portDOM = interfaceDOM?.getElementsByClassName('__port');\n\n    return {\n        node: interfaceDOM?.closest('.baklava-node') ?? null,\n        interface: interfaceDOM,\n        port: portDOM && portDOM.length > 0 ? portDOM[0] : null,\n    };\n}\n","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\n\n/**\n * Module used to handle user interaction with connections and interfaces.\n * It is heavily baklava implementation based.\n */\n\nimport { provide, ref } from 'vue';\nimport { useGraph } from '@baklavajs/renderer-vue';\n\n/**\n * This enum class is based on baklavajs enum `TemporaryConnectionState`\n * and is compatible with it as it is unimportable in baklavajs sources\n */\nexport const TemporaryConnectionState = {\n    NONE: 0,\n    ALLOWED: 1,\n    FORBIDDEN: 2,\n};\n\nexport function useTemporaryConnection() {\n    const { graph } = useGraph();\n\n    const temporaryConnection = ref(null);\n    const hoveringOver = ref(null);\n    let hoveringOverElement = null;\n\n    const onMouseMove = (ev) => {\n        if (temporaryConnection.value) {\n            // Touch does not support hover, check if event pointing on interface\n            if (ev.pointerType === 'touch') {\n                const element = document.elementFromPoint(ev.clientX, ev.clientY);\n                // Hover out, trigger pointerout\n                if (hoveringOverElement && hoveringOverElement !== element) {\n                    hoveringOverElement.dispatchEvent(new PointerEvent('pointerout'));\n                    hoveringOverElement = null;\n                }\n                // Hover over port, trigger pointerover\n                if (element && element.classList.contains('__port')) {\n                    element.dispatchEvent(new PointerEvent('pointerover'));\n                    hoveringOverElement = element;\n                }\n                temporaryConnection.value.mx =\n                    ev.clientX / graph.value.scaling - graph.value.panning.x;\n                temporaryConnection.value.my =\n                    ev.clientY / graph.value.scaling - graph.value.panning.y;\n            } else {\n                temporaryConnection.value.mx =\n                    ev.offsetX / graph.value.scaling - graph.value.panning.x;\n                temporaryConnection.value.my =\n                    ev.offsetY / graph.value.scaling - graph.value.panning.y;\n            }\n        }\n    };\n\n    const onMouseDown = (ev) => {\n        hoveringOverElement = ev.target;\n        if (hoveringOver.value) {\n            temporaryConnection.value = {\n                status: TemporaryConnectionState.NONE,\n                from: hoveringOver.value,\n                to: hoveringOver.value,\n            };\n\n            temporaryConnection.value.mx = undefined;\n            temporaryConnection.value.my = undefined;\n        }\n    };\n\n    const onMouseUp = () => {\n        if (temporaryConnection.value && hoveringOver.value) {\n            graph.value.addConnection(temporaryConnection.value.from, temporaryConnection.value.to);\n        }\n        temporaryConnection.value = null;\n    };\n\n    const hoveredOver = (ni) => {\n        hoveringOver.value = ni ?? null;\n        if (ni && temporaryConnection.value) {\n            temporaryConnection.value.to = ni;\n            const checkConnectionResult = graph.value.checkConnection(\n                temporaryConnection.value.from,\n                temporaryConnection.value.to,\n            );\n            temporaryConnection.value.status = checkConnectionResult.connectionAllowed\n                ? TemporaryConnectionState.ALLOWED\n                : TemporaryConnectionState.FORBIDDEN;\n\n            if (checkConnectionResult.connectionAllowed) {\n                const ids = checkConnectionResult.connectionsInDanger.map((c) => c.id);\n                graph.value.connections.forEach((c) => {\n                    if (ids.includes(c.id)) {\n                        c.isInDanger = true; // eslint-disable-line no-param-reassign\n                    }\n                });\n            }\n        } else if (!ni && temporaryConnection.value) {\n            temporaryConnection.value.to = undefined;\n            temporaryConnection.value.status = TemporaryConnectionState.NONE;\n            graph.value.connections.forEach((c) => {\n                c.isInDanger = false; // eslint-disable-line no-param-reassign\n            });\n        }\n    };\n\n    provide('hoveredOver', hoveredOver);\n\n    return {\n        temporaryConnection,\n        onMouseMove,\n        onMouseDown,\n        onMouseUp,\n    };\n}\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nWraps the connection, defines it's type and parameters.\nInherits from baklavajs/renderer-vue/src/connection/ConnectionView.vue\n-->\n\n<template>\n    <ConnectionView\n        ref=\"conn\"\n        :x1=\"d.x1\"\n        :y1=\"d.y1\"\n        :x2=\"d.x2\"\n        :y2=\"d.y2\"\n        :state=\"state\"\n        :connection=\"connection\"\n        :isHighlighted=\"isHighlighted\"\n    ></ConnectionView>\n</template>\n\n<script>\nimport { defineComponent, ref, computed, watch, nextTick, onMounted, onBeforeUnmount } from 'vue'; // eslint-disable-line object-curly-newline\nimport { Components, useGraph } from '@baklavajs/renderer-vue';\nimport ConnectionView from './ConnectionView.vue';\nimport getDomElements from './domResolver';\nimport { TemporaryConnectionState } from '../temporaryConnection.js';\n\nexport default defineComponent({\n    extends: Components.ConnectionWrapper,\n    props: { connection: { required: true }, isHighlighted: { default: false } },\n    components: { ConnectionView },\n    setup(props) {\n        const conn = ref(null);\n        const { graph } = useGraph();\n\n        let resizeObserver;\n        const d = ref({\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n        });\n\n        // eslint-disable-next-line no-confusing-arrow\n        const state = computed(() =>\n            props.connection.isInDanger\n                ? TemporaryConnectionState.FORBIDDEN\n                : TemporaryConnectionState.NONE,\n        );\n\n        /**\n         * Check whether the connection path contains the x, y point\n         *\n         * @param elements result of `document.elementsFromPoint()` for a given x, y point.\n         */\n        const containsPoint = (elements) =>\n            elements.includes(conn.value.$el.firstChild);\n\n        const fromNodePosition = computed(\n            () => graph.value.findNodeById(props.connection.from.nodeId)?.position,\n        );\n        const toNodePosition = computed(\n            () => graph.value.findNodeById(props.connection.to.nodeId)?.position,\n        );\n\n        const fromNode = computed(() => graph.value.findNodeById(props.connection.from.nodeId));\n        const toNode = computed(() => graph.value.findNodeById(props.connection.to.nodeId));\n\n        const fromNodeInterfacesSide = computed(() =>\n            [\n                ...Object.values(fromNode.value?.inputs ?? {}),\n                ...Object.values(fromNode.value?.outputs ?? {}),\n            ].map((io) => [io.side, io.sidePosition]),\n        );\n        const toNodeInterfacesSide = computed(() =>\n            [\n                ...Object.values(toNode.value?.inputs ?? {}),\n                ...Object.values(toNode.value?.outputs ?? {}),\n            ].map((io) => [io.side, io.sidePosition]),\n        );\n\n        const getPortCoordinates = (resolved) => {\n            if (resolved.node && resolved.interface && resolved.port) {\n                return [\n                    resolved.node.offsetLeft +\n                        resolved.interface.offsetLeft +\n                        resolved.port.offsetLeft +\n                        resolved.port.clientWidth / 2,\n                    resolved.node.offsetTop +\n                        resolved.interface.offsetTop +\n                        resolved.port.offsetTop +\n                        resolved.port.clientHeight / 2,\n                ];\n            }\n            return [0, 0];\n        };\n\n        const updateCoords = () => {\n            const from = getDomElements(props.connection.from);\n            const to = getDomElements(props.connection.to);\n            if (from.node && to.node) {\n                if (!resizeObserver) {\n                    resizeObserver = new ResizeObserver(() => {\n                        updateCoords();\n                    });\n                    resizeObserver.observe(from.node);\n                    resizeObserver.observe(to.node);\n                }\n            }\n\n            const [x1, y1] = getPortCoordinates(from);\n            const [x2, y2] = getPortCoordinates(to);\n            d.value = {\n                x1,\n                y1,\n                x2,\n                y2,\n            };\n        };\n\n        // If any side of any interface in from or to node changes we may need to\n        // Rerender connections\n        watch([fromNodeInterfacesSide, toNodeInterfacesSide], async () => {\n            await nextTick();\n            updateCoords();\n        });\n\n        watch(\n            [fromNodePosition, toNodePosition],\n            async () => {\n                await nextTick();\n                updateCoords();\n            },\n            { deep: true },\n        );\n\n        onMounted(async () => {\n            await nextTick();\n            updateCoords();\n        });\n\n        onBeforeUnmount(() => {\n            if (resizeObserver) {\n                resizeObserver.disconnect();\n            }\n        });\n\n        return {\n            d,\n            state,\n            containsPoint,\n            conn,\n        };\n    },\n});\n</script>\n","import { render } from \"./PipelineManagerConnection.vue?vue&type=template&id=6aa53c7f\"\nimport script from \"./PipelineManagerConnection.vue?vue&type=script&lang=js\"\nexport * from \"./PipelineManagerConnection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <ConnectionView\n        :x1=\"swappedD.input[0]\"\n        :y1=\"swappedD.input[1]\"\n        :x2=\"swappedD.output[0]\"\n        :y2=\"swappedD.output[1]\"\n        :state=\"status\"\n        :connection=\"connection\"\n        is-temporary\n    />\n</template>\n\n<script>\nimport { computed } from 'vue';\nimport { Components } from '@baklavajs/renderer-vue';\nimport ConnectionView from './ConnectionView.vue';\n\nexport default {\n    extends: Components.TemporaryConnection,\n    components: {\n        ConnectionView,\n    },\n    setup(props) {\n        const { d, status } = Components.TemporaryConnection.setup(props);\n\n        const swappedD = computed(() => {\n            let { input, output } = d.value;\n\n            // Currently, baklavajs swaps the input/output if this condition holds\n            // We want to have no discrepancy between the input output coordinates\n            // and connection from/to values.\n            if (props.connection.from.isInput) {\n                [input, output] = [output, input];\n            }\n\n            return { input, output };\n        });\n\n        return { d, swappedD, status };\n    },\n};\n</script>\n","import { render } from \"./TemporaryConnection.vue?vue&type=template&id=00fe0537\"\nimport script from \"./TemporaryConnection.vue?vue&type=script&lang=js\"\nexport * from \"./TemporaryConnection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nCustom node palette - Implements a sidebar containing available nodes.\n\nInherits from baklavajs/packages/renderer-vue/src/nodepalette/NodePalette.vue\n-->\n\n<template>\n    <!-- eslint-disable vue/no-multiple-template-root -->\n    <div\n        ref=\"paletteRef\"\n        class=\"baklava-node-palette\"\n        :class=\"{'hidden-navbar': $isMobile}\"\n    >\n        <div class=\"search-bar\">\n            <div class=\"palette-title\">\n                <span>Nodes browser</span>\n            </div>\n            <div class=\"__entry_search\">\n                <Magnifier :color=\"'gray'\" />\n                <input class=\"node-search\" v-model=\"nodeSearch\" placeholder=\"Search\" />\n            </div>\n        </div>\n        <div class=\"nodes\">\n            <PaletteCategory\n                :nodeTree=\"nodeTree\"\n                :onDragStart=\"onDragStart\"\n                :defaultCollapse=\"collapse\"\n                :tooltip=\"tooltip\"\n                :nodeSearch=\"nodeSearch\"\n            />\n        </div>\n        <!-- Height of the sidebar is 60 so we need to subtract that -->\n        <Tooltip\n            v-show=\"tooltip.visible\"\n            :text=\"tooltip.text\"\n            :left=\"tooltip.left\"\n            :top=\"tooltip.top - 60\"\n        />\n    </div>\n    <transition name=\"fade\">\n        <div v-if=\"draggedNode\" class=\"baklava-dragged-node\" :style=\"draggedNodeStyles\">\n            <PaletteEntry\n                :title=\"draggedNode.nodeInformation.title\"\n                :iconPath=\"draggedNode.iconPath\"\n                :isDragged=\"true\"\n                :depth=\"0\"\n            />\n        </div>\n    </transition>\n</template>\n\n<script>\nimport { computed, defineComponent, provide, inject, ref, onMounted } from 'vue'; // eslint-disable-line object-curly-newline\nimport { useViewModel, useTransform } from '@baklavajs/renderer-vue';\nimport { usePointer } from '@vueuse/core';\nimport PaletteCategory from './PaletteCategory.vue';\nimport getNodeTree from './nodeTree';\nimport PaletteEntry from './PaletteEntry.vue';\nimport Tooltip from '../../components/Tooltip.vue';\nimport Magnifier from '../../icons/Magnifier.vue';\n\nexport default defineComponent({\n    components: {\n        PaletteCategory,\n        PaletteEntry,\n        Tooltip,\n        Magnifier,\n    },\n    setup() {\n        const { viewModel } = useViewModel();\n\n        const { x: mouseX, y: mouseY } = usePointer();\n        const { transform } = useTransform();\n\n        const paletteRef = ref(null);\n        const editorEl = inject('editorEl');\n\n        const draggedNode = ref(null);\n        const tooltip = ref(null);\n\n        tooltip.value = {\n            top: 0,\n            left: 0,\n            visible: false,\n            text: '',\n        };\n\n        const draggedNodeStyles = computed(() => {\n            if (!draggedNode.value || !editorEl?.value) {\n                return {};\n            }\n            const { left, top } = editorEl.value.getBoundingClientRect();\n            return {\n                top: `${mouseY.value - top}px`,\n                left: `${mouseX.value - left}px`,\n            };\n        });\n\n        const dragEndPlaceNode = (ev) => {\n            const elements = document.elementsFromPoint(ev.clientX, ev.clientY);\n\n            if (!elements.includes(paletteRef.value)) {\n                const instance = new draggedNode.value.nodeInformation.type(); // eslint-disable-line new-cap,max-len\n                viewModel.value.displayedGraph.addNode(instance);\n\n                const rect = editorEl.value.getBoundingClientRect();\n                const [x, y] = transform(mouseX.value - rect.left, mouseY.value - rect.top);\n                instance.position.x = x;\n                instance.position.y = y;\n\n                draggedNode.value = null;\n                document.removeEventListener('pointerup', dragEndPlaceNode);\n                document.removeEventListener('keydown', dragEndDeselectNode); // eslint-disable-line no-use-before-define\n            }\n        };\n\n        const dragEndDeselectNode = (ev) => {\n            if (ev.key === 'Escape') {\n                draggedNode.value = null;\n\n                document.removeEventListener('pointerup', dragEndPlaceNode);\n                document.removeEventListener('keydown', dragEndDeselectNode);\n            }\n        };\n\n        const onDragStart = (type, nodeInformation, iconPath) => {\n            draggedNode.value = {\n                type,\n                nodeInformation,\n                iconPath,\n            };\n\n            document.addEventListener('pointerup', dragEndPlaceNode);\n            document.addEventListener('keydown', dragEndDeselectNode);\n        };\n        const nodeSearch = ref('');\n        const scroll = ref(0);\n        const showMenu = ref(false);\n        provide('menu', showMenu);\n\n        const nodeTree = computed(() => getNodeTree(nodeSearch));\n        const collapse = computed(() => viewModel.value.collapseSidebar);\n\n        onMounted(() => {\n            const nodesContainer = computed(() => document.querySelector('.nodes'));\n            nodesContainer.value.addEventListener('scroll', (event) => {\n                scroll.value = event.target.scrollTop;\n                const iconMenus = document.getElementsByClassName('__icondiv');\n                for (let i = 0; i < iconMenus.length; i += 1) {\n                    iconMenus[i].style.translate = `0px -${scroll.value.toString()}px`;\n                }\n            });\n        });\n\n        return {\n            draggedNodeStyles,\n            draggedNode,\n            onDragStart,\n            nodeTree,\n            collapse,\n            tooltip,\n            nodeSearch,\n            paletteRef,\n            scroll,\n        };\n    },\n});\n</script>\n","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nComponent representing single node's type category/subcategory.\nIt groups the nodes of the same subcategory in the block that can be collapsed.\n-->\n\n<template v-if=\"specificationLoaded\">\n    <!-- eslint-disable vue/no-multiple-template-root -->\n    <div v-show=\"nodeTree.mask\">\n        <div v-if=\"nodeTree.nodes.nodeTypes\">\n            <div\n                v-for=\"[nt, node] in sortedEntries(nodeTree.nodes.nodeTypes)\"\n                style=\"width: 100%;\"\n                v-show=\"node.mask\"\n                :style=\"padding(depth)\"\n                :class=\"nodeEntryClasses(nt)\"\n                :key=\"nt\"\n            >\n                <div\n                    @pointerdown=\"onDragStart(nt, node, node.iconPath)\"\n                    :class=\"nodeEntryClasses(nt)\"\n                >\n                    <template v-if=\"!isDefaultGraphNodeType(nt)\">\n                        <img\n                            class=\"__title-icon\"\n                            v-if=\"node.iconPath !== undefined\"\n                            :src=\"getIconPath(node.iconPath)\"\n                            draggable=\"false\"\n                        />\n                    </template>\n                    <Cross v-else color=\"white\" :rotate=\"45\" class=\"__title-icon\"></Cross>\n                    <div class=\"__title-label\" v-html=\"node.hitSubstring\"></div>\n                </div>\n                <div\n                    class=\"__vertical_ellipsis\"\n                    ref=\"settings\"\n                    role=\"button\"\n                    @pointerdown.stop=\"\"\n                    @click.stop=\"() => showMenuClick(node)\"\n                    v-if=\"node.URLs.length !== 0\"\n                >\n                    <VerticalEllipsis class=\"smaller_svg\" />\n                </div>\n                <div class='__icondiv'>\n                    <LinkMenu\n                        :node='showMenu'\n                        style='width: 18em'\n                        v-if=\"showMenu !== false &&\n                                showMenu.hitSubstring === node.hitSubstring\"\n                        v-click-outside=\"closeMenu\"\n                    />\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div\n        v-for=\"([name, category], i) in sortedEntries(nodeTree.subcategories, true)\"\n        v-show=\"category.mask\"\n        :key=\"name\"\n    >\n        <template v-if=\"notEmptyCategory(category)\">\n            <div\n                class=\"__entry __category\"\n                @click=\"onMouseDown(i)\"\n                :style=\"padding(depth)\"\n            >\n                <Arrow :rotate=\"getRotation(i)\" scale=\"small\" />\n                <!-- There is only one category node -->\n                <template v-if=\"isCategoryNode(category)\">\n                    <div\n                        class=\"__entry __node-entry\"\n                        v-show=\"category.mask\"\n                        :key=\"category.title\"\n                        @click=\"onMouseDown(i)\"\n                        @pointerdown=\"onDragStart(\n                            category.title,\n                            category.categoryNode,\n                            category.iconPath\n                        )\"\n                    >\n                        <img\n                            class=\"__title-icon\"\n                            v-if=\"category.categoryNode.iconPath !== undefined\"\n                            :src=\"getIconPath(category.categoryNode.iconPath)\"\n                            draggable=\"false\"\n                        />\n                        <div class=\"__title-label\" v-html=\"category.hitSubstring\"></div>\n                        <div\n                            class=\"__vertical_ellipsis\"\n                            ref=\"settings\"\n                            role=\"button\"\n                            @pointerdown.stop=\"\"\n                            @click.stop=\"() => showMenuClick(category)\"\n                            v-if=\"category.categoryNode.URLs.length !== 0\"\n                        >\n                            <VerticalEllipsis class=\"smaller_svg\" />\n                        </div>\n                    </div>\n                    <div class='__icondiv'>\n                        <LinkMenu\n                            :node='showMenu.categoryNode'\n                            style='width: 18em'\n                            v-if=\"showMenu !== false &&\n                                  showMenu.hitSubstring === category.hitSubstring\"\n                            v-click-outside=\"closeMenu\"\n                        />\n                    </div>\n                </template>\n                <div v-else class=\"__title\" v-html=\"category.hitSubstring\"></div>\n            </div>\n            <div v-show=\"mask[i]\">\n                <PaletteCategory\n                    :nodeTree=\"category\"\n                    :onDragStart=\"onDragStart\"\n                    :depth=\"depth + 1\"\n                    :defaultCollapse=\"defaultCollapse\"\n                    :tooltip=\"tooltip\"\n                    :nodeSearch=\"nodeSearch\"\n                />\n            </div>\n        </template>\n        <template v-else>\n            <template v-if=\"isCategoryNode(category)\">\n                <div\n                    :class=\"nodeEntryClasses(category.title)\"\n                    :style=\"padding(depth)\"\n                    v-show=\"category.mask\"\n                    :key=\"category.title\"\n                    @pointerdown=\"onDragStart(\n                        category.title,\n                        category.categoryNode,\n                        category.iconPath\n                    )\"\n                >\n                    <img\n                        class=\"__title-icon\"\n                        v-if=\"category.categoryNode.iconPath !== undefined\"\n                        :src=\"getIconPath(category.categoryNode.iconPath)\"\n                        draggable=\"false\"\n                    />\n                    <div class=\"__title-label\" v-html=\"category.hitSubstring\"></div>\n                    <div\n                        class=\"__vertical_ellipsis\"\n                        ref=\"settings\"\n                        role=\"button\"\n                        @pointerdown.stop=\"\"\n                        @click.stop=\"() => showMenuClick(category)\"\n                        v-if=\"category.categoryNode.URLs.length !== 0\"\n                    >\n                        <VerticalEllipsis class=\"smaller_svg\" />\n                    </div>\n                    <div class='__icondiv'>\n                        <LinkMenu\n                            :node='showMenu.categoryNode'\n                            style='width: 18em'\n                            v-if=\"showMenu !== false &&\n                                  showMenu.hitSubstring === category.hitSubstring\"\n                            v-click-outside=\"closeMenu\"\n                        />\n                    </div>\n                </div>\n            </template>\n            <div v-else class=\"__title\" v-html=\"category.hitSubstring\"></div>\n        </template>\n    </div>\n</template>\n\n<script>\nimport { defineComponent, computed, ref, watch, inject } from 'vue'; // eslint-disable-line object-curly-newline\nimport { useViewModel } from '@baklavajs/renderer-vue';\nimport Arrow from '../../icons/Arrow.vue';\nimport VerticalEllipsis from '../../icons/VerticalEllipsis.vue';\nimport LinkMenu from '../LinkMenu.vue';\nimport EditorManager, { DEFAULT_GRAPH_NODE_TYPE } from '../../core/EditorManager';\nimport Cross from '../../icons/Cross.vue';\n\nexport default defineComponent({\n    components: {\n        Arrow, LinkMenu, VerticalEllipsis, Cross,\n    },\n    props: {\n        nodeTree: {\n            required: true,\n        },\n        onDragStart: {\n            required: true,\n        },\n        depth: {\n            type: Number,\n            default: 0,\n        },\n        defaultCollapse: {\n            type: Boolean,\n            default: true,\n        },\n        tooltip: {\n            required: false,\n        },\n        nodeSearch: {\n            type: String,\n            required: true,\n        },\n    },\n    setup(props) {\n        const { viewModel } = useViewModel();\n        const getIconPath = (name) => viewModel.value.cache[`./${name}`] ?? name;\n        const isCategoryNode = (category) => category?.categoryNode !== undefined;\n\n        const notEmptyCategory = (category) => {\n            if (category.nodes.nodeTypes === undefined) {\n                return Object.keys(category.subcategories).length !== 0;\n            }\n            return Object.keys(category.nodes.nodeTypes).length !== 0;\n        };\n\n        const paddingDepth = 30;\n        const minPadding = 10;\n        const padding = (depth, forceZero = false) => {\n            if (forceZero) {\n                return 'padding-left: 0';\n            }\n            return `padding-left: ${minPadding + depth * paddingDepth}px`;\n        };\n\n        const mask = ref(Array(\n            Object.keys(props.nodeTree.subcategories ?? {}).length,\n        ).fill(!props.defaultCollapse));\n        let storedMask = mask.value;\n\n        // If the category tree changes the mask needs to get reinitialized\n        watch(\n            () => props.nodeTree,\n            () => {\n                mask.value = Array(Object.keys(\n                    props.nodeTree.subcategories ?? {},\n                ).length).fill(!props.defaultCollapse);\n            },\n        );\n\n        // If searching then the sidebar is expanded\n        watch(\n            () => props.nodeSearch,\n            (newValue, oldValue) => {\n                if (newValue !== '' && oldValue === '') {\n                    storedMask = mask.value;\n                    mask.value = Array(Object.keys(\n                        props.nodeTree.subcategories ?? {},\n                    ).length).fill(true);\n                } else if (newValue === '' && oldValue !== '') {\n                    mask.value = storedMask;\n                }\n            },\n        );\n\n        const getRotation = (index) => {\n            if (mask.value[index]) {\n                return 'left';\n            }\n            return 'right';\n        };\n\n        const onMouseDown = (index) => {\n            mask.value.splice(index, 1, !mask.value[index]);\n        };\n\n        const sortedEntries = (obj, sortSubcategories = false) =>\n            Object.entries(obj).sort(([a, aNode], [b, bNode]) => {\n                if (sortSubcategories) {\n                    if (notEmptyCategory(aNode) && !notEmptyCategory(bNode)) {\n                        return 1;\n                    }\n                    if (!notEmptyCategory(aNode) && notEmptyCategory(bNode)) {\n                        return -1;\n                    }\n                }\n\n                return a.toLowerCase().localeCompare(b.toLowerCase());\n            });\n\n        const showMenu = inject('menu');\n        const showMenuClick = (menu) => {\n            showMenu.value = (showMenu.value.hitSubstring === menu.hitSubstring) ? false : menu;\n        };\n        const closeMenu = () => {\n            if (showMenu.value) showMenu.value = false;\n        };\n\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const specificationLoaded = computed(() => editorManager.specificationLoaded.value);\n\n        const isDefaultGraphNodeType = (name) => name === DEFAULT_GRAPH_NODE_TYPE;\n\n        const nodeEntryClasses = (name) => ({\n            __entry: true,\n            '__node-entry': true,\n            '__default-graph-node-entry': isDefaultGraphNodeType(name),\n        });\n\n        return {\n            padding,\n            mask,\n            onMouseDown,\n            getRotation,\n            sortedEntries,\n            getIconPath,\n            isCategoryNode,\n            notEmptyCategory,\n            showMenu,\n            showMenuClick,\n            closeMenu,\n            specificationLoaded,\n            nodeEntryClasses,\n            isDefaultGraphNodeType,\n        };\n    },\n});\n</script>\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nInterface that is used to display inputs, outputs and properties of a node.\n\nThe custom implementations introduces wrapper functions that prevent the user\nfrom creating and deleting connections or altering nodes' values if the editor is read-only.\n-->\n\n<template>\n    <transition name=\"slide-fade\">\n        <div ref=\"el\">\n                <a\n                    v-for=\"url in nodeRef.URLs\"\n                    :key=\"url.name\"\n                    :href=\"url.url\"\n                    class=\"__url\"\n                    target=\"_blank\"\n                    draggable=\"false\"\n                >\n                    <div class=\"link_item\">\n                        <img\n                            v-if=\"url.icon !== undefined\"\n                            :src=\"getIconPath(url.icon)\"\n                            draggable=\"false\"\n                        />\n                        <span v-html=\"url.name\"></span>\n                        <br>\n                    </div>\n                </a>\n        </div>\n    </transition>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue';\nimport { useViewModel } from '@baklavajs/renderer-vue';\n\nexport default defineComponent({\n    props: {\n        node: {\n            required: true,\n        },\n    },\n    setup(props) {\n        const el = ref(null);\n        const { viewModel } = useViewModel();\n        const getIconPath = (name) => viewModel.value.cache[`./${name}`] ?? name;\n        const nodeRef = ref(props.node);\n\n        return {\n            el,\n            getIconPath,\n            nodeRef,\n        };\n    },\n});\n</script>\n\n<style lang='scss' scoped>\na {\n    color: white;\n    text-decoration: none;\n    word-wrap: normal;\n    width: 100%;\n\n     > .link_item {\n        border: 1px solid #737373;\n        border-bottom: 0px solid;\n        > img {\n            display: inline-block;\n            vertical-align: middle;\n            margin: 1em 1em 1em 1em;\n            width: auto;\n            height: 100%;\n            max-height: 1.75em;\n        }\n\n        > span {\n            vertical-align: middle;\n            font-size: $fs-small;\n        }\n        &:hover > span {\n            color: $green;\n        }\n    }\n}\n\n</style>\n","import { render } from \"./LinkMenu.vue?vue&type=template&id=12450553&scoped=true\"\nimport script from \"./LinkMenu.vue?vue&type=script&lang=js\"\nexport * from \"./LinkMenu.vue?vue&type=script&lang=js\"\n\nimport \"./LinkMenu.vue?vue&type=style&index=0&id=12450553&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-12450553\"]])\n\nexport default __exports__","import { render } from \"./PaletteCategory.vue?vue&type=template&id=bb34d4e4\"\nimport script from \"./PaletteCategory.vue?vue&type=script&lang=js\"\nexport * from \"./PaletteCategory.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { useViewModel } from '@baklavajs/renderer-vue';\nimport { watch } from 'vue';\nimport fuzzysort from 'fuzzysort';\nimport { DEFAULT_GRAPH_NODE_TYPE } from '../../core/EditorManager';\n/**\n * Creates a tree of categories based on the passed names of categories.\n *\n * @param Set of categories names of the nodes\n * @returns Tree of parsed categories that represents categories and their subcategories structure\n */\nconst parseCategories = (categoriesNames) => {\n    const categoryTree = {};\n    const toParse = {};\n    categoriesNames.forEach((c) => {\n        const [label, ...rest] = c.split('/');\n        if (!Object.keys(toParse).includes(label)) {\n            toParse[label] = [];\n        }\n        if (rest.length > 0) {\n            toParse[label].push(rest.join('/'));\n        }\n    });\n    Object.entries(toParse).forEach(([label, rest]) => {\n        categoryTree[label] = parseCategories(new Set(rest));\n    });\n    return categoryTree;\n};\n/* eslint-disable no-param-reassign */\n/**\n * Sets `hitSubstring` value of all nodes of a given category to default names.\n * @param category Single category entry\n */\nconst setDefaultNames = (category) => {\n    const [name, node] = category;\n    node.hitSubstring = name;\n    if (node.categoryNode !== undefined) {\n        node.categoryNode.hitSubstring = node.categoryNode.title;\n    }\n    if (node.nodes.nodeTypes !== undefined) {\n        Object.entries(node.nodes.nodeTypes).forEach(([, nodeType]) => {\n            nodeType.hitSubstring = nodeType.title;\n        });\n    }\n    Object.entries(node.subcategories).forEach((subTree) => setDefaultNames(subTree));\n};\n/* eslint-disable no-param-reassign */\n/**\n * Sets in place all masks inside nodes and subcategories to true\n * @param category Single category object\n */\nconst setMasksToTrue = (category) => {\n    category.mask = true;\n    if (category.categoryNode !== undefined) {\n        category.categoryNode.mask = true;\n    }\n    if (category.nodes.nodeTypes !== undefined) {\n        Object.values(category.nodes.nodeTypes).forEach((nodeType) => {\n            nodeType.mask = true;\n        });\n    }\n    Object.values(category.subcategories).forEach((subTree) => setMasksToTrue(subTree));\n};\n/**\n * Uses parsed categories structure to create a full tree of nodes based on their categories\n * which can be used to render then in a node palette.\n *\n * @param categoryTree Parsed tree returned by `parseCategories` function. It is used to divide\n * nodes into subcategories.\n * @param nodes list of nodes that has information about their types and icons created\n * in `getNodeTree` function.\n * @param prefix represents category path of a node.\n * @returns Parsed structure where every node has two keys: `nodes`, which represents nodes of\n * a given category and `subcategories` which represent subcategories. Subcategories are\n * also of this type.\n */\nconst categorizeNodes = (categoryTree, nodes, prefix = '') => {\n    const nodeTree = {};\n    Object.entries(categoryTree).forEach(([category, subcategories]) => {\n        var _a;\n        let name = '';\n        if (prefix === '') {\n            name = category;\n        }\n        else {\n            name = `${prefix}/${category}`;\n        }\n        const hitNodes = (_a = nodes.find((n) => n.categoryName === name)) !== null && _a !== void 0 ? _a : {};\n        if (Object.keys(hitNodes).length !== 0) {\n            const categoryNames = [];\n            Object.entries(hitNodes.nodeTypes).forEach(([nameNodeType, nodeType]) => {\n                if (nodeType.isCategory) {\n                    categoryNames.push(nameNodeType);\n                }\n            });\n            const allNames = Object.keys(hitNodes.nodeTypes);\n            const nonCategoryNodes = {\n                categoryName: hitNodes.categoryName,\n                nodeTypes: {},\n            };\n            let categoryNode;\n            allNames.forEach((nodeName) => {\n                if (categoryNames.includes(nodeName)) {\n                    categoryNode = hitNodes.nodeTypes[nodeName];\n                }\n                else {\n                    nonCategoryNodes.nodeTypes[nodeName] = hitNodes.nodeTypes[nodeName];\n                }\n            });\n            nodeTree[category] = {\n                subcategories: categorizeNodes(subcategories, nodes, name),\n                nodes: nonCategoryNodes,\n                categoryNode,\n                hitSubstring: category,\n                mask: true,\n            };\n        }\n        else {\n            nodeTree[category] = {\n                subcategories: categorizeNodes(subcategories, nodes, name),\n                nodes: {},\n                categoryNode: undefined,\n                hitSubstring: category,\n                mask: true,\n            };\n        }\n    });\n    return nodeTree;\n};\n/**\n *\n * Updates masks of all nodes and subcategories based on filter value.\n * The node is shown if filter is a substring of the name.\n * Category is shown if it contains at least one node in the subtree which is\n * shown or if filter is a substring of the category name\n *\n * @param treeNode NodeSubcategories instance.\n * @param filter String which is used for filtering\n * @param forceMask whether the whole substree should be expanded\n * @returns Boolean value whether at least one of the categories in the tree has\n * mask set to true.\n */\nconst updateMasks = (treeNode, filter, forceMask) => Object.entries(treeNode).map(([categoryName, node]) => {\n    var _a;\n    const threshold = -50;\n    let categoryMatches = false;\n    const categoryResult = fuzzysort.single(filter, categoryName);\n    if (categoryResult !== null && categoryResult.score > threshold) {\n        node.hitSubstring = (_a = fuzzysort.highlight(categoryResult, '<span>', '</span>')) !== null && _a !== void 0 ? _a : '';\n        categoryMatches = true;\n    }\n    else {\n        node.hitSubstring = categoryName;\n    }\n    let entryMatches = false;\n    if (node.nodes.nodeTypes !== undefined && Object.keys(node.nodes.nodeTypes).length !== 0) {\n        entryMatches = Object.values(node.nodes.nodeTypes)\n            .map((nt) => {\n            var _a;\n            const entryResult = fuzzysort.single(filter, nt.title);\n            nt.mask = (entryResult !== null && entryResult.score > threshold) ||\n                categoryMatches ||\n                forceMask;\n            if (entryResult !== null) {\n                nt.hitSubstring = (_a = fuzzysort.highlight(entryResult, '<span>', '</span>')) !== null && _a !== void 0 ? _a : '';\n            }\n            else {\n                nt.hitSubstring = nt.title;\n            }\n            return nt.mask;\n        })\n            .includes(true);\n    }\n    // The node is expanded if any entry in its subtree is highlighted,\n    // or a node that is part of this category is highlighted,\n    // or the category is highlighted or forceMask is true.\n    node.mask = updateMasks(node.subcategories, filter, categoryMatches || forceMask) ||\n        categoryMatches ||\n        entryMatches ||\n        forceMask;\n    return node.mask;\n}).includes(true);\n/* eslint-enable no-param-reassign */\nlet unWatch;\nexport default function getNodeTree(nameFilterRef) {\n    const { viewModel } = useViewModel();\n    const { editor } = viewModel.value;\n    const nodeTypeEntries = Array.from(editor.nodeTypes.entries());\n    const categoryNames = new Set(nodeTypeEntries.map(([, ni]) => ni.category));\n    const topLevelNodeNames = [DEFAULT_GRAPH_NODE_TYPE];\n    const topLevelCategories = {\n        categoryName: 'TopLevel',\n        nodeTypes: {},\n    };\n    const nodes = [];\n    categoryNames.forEach((c) => {\n        let nodeTypesInCategory = nodeTypeEntries.filter(([, ni]) => ni.category === c);\n        const nodesURLs = Object.fromEntries(nodeTypesInCategory.map((n) => {\n            const [nodeType] = n; // @ts-ignore Editor has an incorrect type. Ignoring for now\n            const URLs = editor.getNodeURLs(nodeType);\n            return [nodeType, URLs];\n        }));\n        const nodesIconPath = Object.fromEntries(nodeTypesInCategory.map((n) => {\n            const [nodeType] = n; // @ts-ignore Editor has an incorrect type. Ignoring for now\n            const iconPath = editor.getNodeIconPath(nodeType);\n            return [nodeType, iconPath];\n        }));\n        const topLevelCategory = nodeTypesInCategory.filter(([name, _]) => topLevelNodeNames.includes(name));\n        nodeTypesInCategory = nodeTypesInCategory.filter(([name, _]) => !topLevelNodeNames.includes(name));\n        if (nodeTypesInCategory.length > 0) {\n            const nodeTypes = nodeTypesInCategory.map(([nodeName, node]) => [nodeName, Object.assign(Object.assign({}, node), { isCategory: node.isCategory, mask: true, hitSubstring: node.title, iconPath: nodesIconPath[nodeName], URLs: nodesURLs[nodeName] })]);\n            nodes.push({\n                categoryName: c,\n                nodeTypes: Object.fromEntries(nodeTypes),\n            });\n        }\n        topLevelCategories.nodeTypes = Object.fromEntries(topLevelCategory.map(([nodeName, node]) => [nodeName, Object.assign(Object.assign({}, node), { isCategory: node.isCategory, mask: true, hitSubstring: node.title, iconPath: nodesIconPath[nodeName], URLs: nodesURLs[nodeName] })]));\n    });\n    const nodeCategories = new Set(nodes.map((c) => c.categoryName));\n    const categoryTree = parseCategories(nodeCategories);\n    const parsedTree = categorizeNodes(categoryTree, nodes);\n    // If specification changes we no longer want to watch it\n    if (unWatch) {\n        unWatch();\n    }\n    const topCategory = {\n        subcategories: parsedTree,\n        nodes: topLevelCategories,\n        categoryNode: undefined,\n        hitSubstring: 'All',\n        mask: true,\n    };\n    const topSubcategory = {\n        All: topCategory,\n    };\n    unWatch = watch(nameFilterRef, (newNameFilter) => {\n        if (newNameFilter === '') {\n            Object.entries(topSubcategory).forEach((subTree) => setDefaultNames(subTree));\n            Object.values(topSubcategory).forEach((subTree) => setMasksToTrue(subTree));\n        }\n        else {\n            updateMasks(topSubcategory, newNameFilter.toLowerCase(), false);\n        }\n    });\n    return topCategory;\n}\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nA single entry representing available node type in the sidebar.\n-->\n<template>\n    <div class=\"__entry __node-entry __dragged\" :style=\"padding\">\n        <img class=\"__title-icon\" v-if=\"nodeIcon !== undefined\" :src=\"nodeIcon\" draggable=\"false\" />\n        <div class=\"__title-label\" v-html=\"title\"></div>\n\n    </div>\n</template>\n\n<script>\nimport { defineComponent, computed } from 'vue';\nimport { useViewModel } from '@baklavajs/renderer-vue';\n\nexport default defineComponent({\n    props: {\n        title: {\n            type: String,\n            required: true,\n        },\n        iconPath: {\n            type: String,\n            required: false,\n        },\n        depth: {\n            type: Number,\n            required: true,\n        },\n    },\n    setup(props) {\n        const { viewModel } = useViewModel();\n        const getIconPath = (name) => viewModel.value.cache[`./${name}`] ?? name;\n        const nodeIcon = computed(() => getIconPath(props.iconPath));\n        const paddingDepth = 20;\n        const minPadding = 10;\n        const padding = computed(\n            () => `padding-left: ${minPadding + props.depth * paddingDepth}px`,\n        );\n\n        return {\n            nodeIcon,\n            padding,\n            getIconPath,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.__dragged {\n    border-radius: var(--baklava-node-border-radius);\n    border-width: 0px;\n}\n</style>\n","import { render } from \"./PaletteEntry.vue?vue&type=template&id=cfa387f2&scoped=true\"\nimport script from \"./PaletteEntry.vue?vue&type=script&lang=js\"\nexport * from \"./PaletteEntry.vue?vue&type=script&lang=js\"\n\nimport \"./PaletteEntry.vue?vue&type=style&index=0&id=cfa387f2&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cfa387f2\"]])\n\nexport default __exports__","import { render } from \"./NodePalette.vue?vue&type=template&id=177ebc72\"\nimport script from \"./NodePalette.vue?vue&type=script&lang=js\"\nexport * from \"./NodePalette.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div class=\"rectangle-selection-border\" :style=\"styles\">\n        <div class=\"rectangle-selection\">\n\n        </div>\n    </div>\n</template>\n\n<script>\nimport { computed, defineComponent, ref } from 'vue'; // eslint-disable-line object-curly-newline\n\nexport default defineComponent({\n    setup() {\n        const selecting = ref(false);\n        const selectionBegin = ref({ x: 0, y: 0 });\n        const selectionEnd = ref({ x: 0, y: 0 });\n        const boundingRect = computed(() => ({\n            xBegin: selectionBegin?.value.x < selectionEnd?.value.x ?\n                selectionBegin?.value.x : selectionEnd?.value.x,\n\n            yBegin: selectionBegin?.value.y < selectionEnd?.value.y ?\n                selectionBegin?.value.y : selectionEnd?.value.y,\n\n            xEnd: selectionBegin?.value.x >= selectionEnd?.value.x ?\n                selectionBegin?.value.x : selectionEnd?.value.x,\n\n            yEnd: selectionBegin?.value.y >= selectionEnd?.value.y ?\n                selectionBegin?.value.y : selectionEnd?.value.y,\n        }));\n\n        const styles = computed(() => ({\n            position: 'absolute',\n            visibility: `${selecting.value ? 'visible' : 'hidden'}`,\n            top: `${boundingRect.value.yBegin}px`,\n            left: `${boundingRect.value.xBegin}px`,\n            width: `${Math.abs(boundingRect.value.xEnd - boundingRect.value.xBegin) ?? 0}px`,\n            height: `${Math.abs(boundingRect.value.yEnd - boundingRect.value.yBegin) ?? 0}px`,\n        }));\n\n        const onPointerDown = (ev) => {\n            selecting.value = true;\n            selectionBegin.value = { x: ev.pageX, y: ev.pageY };\n            selectionEnd.value = { x: ev.pageX, y: ev.pageY };\n        };\n\n        const onPointerMove = (ev) => {\n            if (selecting.value) {\n                selectionEnd.value = { x: ev.pageX, y: ev.pageY };\n            }\n        };\n\n        const onPointerUp = () => {\n            selecting.value = false;\n\n            selectionBegin.value = { x: 0, y: 0 };\n            selectionEnd.value = { x: 0, y: 0 };\n        };\n\n        return {\n            styles,\n            onPointerDown,\n            onPointerMove,\n            onPointerUp,\n            selecting,\n            boundingRect,\n        };\n    },\n});\n\n</script>\n","import { render } from \"./RectangleSelection.vue?vue&type=template&id=176c206a\"\nimport script from \"./RectangleSelection.vue?vue&type=script&lang=js\"\nexport * from \"./RectangleSelection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Checks if node is present inside selection rectangle\n * @returns\n */\nexport default function nodeInsideSelection(graph, node, boundingRect) {\n    const nodeHTMLelement = document.getElementById(node.id);\n    const selectionBoundingRect = boundingRect;\n\n    const navBarHeight = 60;\n    const panningX = graph.panning.x;\n    const panningY = graph.panning.y;\n    const { scaling } = graph;\n\n    const nodeX = scaling * (panningX + node.position.x);\n    const nodeY = scaling * (panningY + node.position.y + navBarHeight);\n    const nodeWidth = nodeHTMLelement.offsetWidth;\n    const nodeHeight = nodeHTMLelement.offsetHeight;\n\n    // reduce node dimensions by this coeff so that they are easier to select\n    const nodeDimCoefficient = 0.9;\n\n    if (nodeX + nodeX * (1 - nodeDimCoefficient) > selectionBoundingRect.xBegin\n    && nodeX + nodeWidth * scaling - nodeX * (1 - nodeDimCoefficient) < selectionBoundingRect.xEnd\n    && nodeY + nodeY * (1 - nodeDimCoefficient) > selectionBoundingRect.yBegin\n    && nodeY + nodeHeight * scaling\n        - nodeY * (1 - nodeDimCoefficient) < selectionBoundingRect.yEnd) {\n        return true;\n    }\n    return false;\n}\n","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { computed } from 'vue';\nimport { useGraph } from '@baklavajs/renderer-vue';\nimport useDragMove from './useDragMove';\n\nexport default function usePanZoom() {\n    const { graph } = useGraph();\n\n    // State needed for pinch-zoom\n    let pointerCache = [];\n    let prevDiff = -1;\n    let midpoint = { x: 0, y: 0 };\n\n    // Limit for zooming that does not allow for zomming if\n    // `zoomLimit` number of graphs would fit into the editor\n    // vertically or horizontally\n    const zoomLimit = 2;\n\n    const panningRef = computed(() => graph.value.panning);\n    const dragMove = useDragMove(panningRef);\n\n    const applyZoom = (centerX, centerY, newScale) => {\n        if (newScale <= 0) {\n            return;\n        }\n\n        const currentPoint = [\n            centerX / graph.value.scaling - graph.value.panning.x,\n            centerY / graph.value.scaling - graph.value.panning.y,\n        ];\n        const newPoint = [\n            centerX / newScale - graph.value.panning.x,\n            centerY / newScale - graph.value.panning.y,\n        ];\n        const diff = [newPoint[0] - currentPoint[0], newPoint[1] - currentPoint[1]];\n\n        const editorHeight = window.innerHeight;\n        const editorWidth = window.innerWidth;\n\n        const allowZoomOut = (zoomLimit * graph.value.size().graphWidth > editorWidth / newScale ||\n            zoomLimit * graph.value.size().graphHeight > editorHeight / newScale);\n\n        if (\n            (allowZoomOut) ||\n            (newScale > graph.value.scaling && graph.value.size().graphHeight !== -Infinity)\n        ) {\n            graph.value.scaling = newScale;\n            graph.value.panning.x += diff[0];\n            graph.value.panning.y += diff[1];\n        }\n    };\n\n    const onMouseWheel = (ev) => {\n        ev.preventDefault();\n        let scrollAmount = ev.deltaY;\n        if (ev.deltaMode === 1) {\n            scrollAmount *= 32; // Firefox fix, multiplier is trial & error\n        }\n        // Limit the zooming to 1.5x of the original size\n        const newScale = Math.min(graph.value.scaling * (1 - scrollAmount / 3000), 1.5);\n        applyZoom(ev.clientX, ev.clientY, newScale);\n    };\n\n    const getCoordsFromCache = () => ({\n        ax: pointerCache[0].clientX,\n        ay: pointerCache[0].clientY,\n        bx: pointerCache[1].clientX,\n        by: pointerCache[1].clientY,\n    });\n\n    const onPointerDown = (ev) => {\n        dragMove.onPointerDown(ev);\n\n        if (pointerCache.length <= 1) {\n            pointerCache.push(ev);\n        }\n\n        if (pointerCache.length === 2) {\n            const { ax, ay, bx, by } = getCoordsFromCache(); // eslint-disable-line object-curly-newline,max-len\n            const dx = ax - bx;\n            const dy = ay - by;\n            prevDiff = Math.sqrt(dx * dx + dy * dy);\n\n            midpoint = {\n                x: ax + (bx - ax) / 2,\n                y: ay + (by - ay) / 2,\n            };\n        }\n    };\n\n    const onPointerMove = (ev) => {\n        if (pointerCache.length === 2) {\n            for (let i = 0; i < pointerCache.length; i += 1) {\n                if (ev.pointerId === pointerCache[i].pointerId) {\n                    pointerCache[i] = ev;\n                    break;\n                }\n            }\n\n            const { ax, ay, bx, by } = getCoordsFromCache(); // eslint-disable-line object-curly-newline,max-len\n            const dx = ax - bx;\n            const dy = ay - by;\n            const curDiff = Math.sqrt(dx * dx + dy * dy);\n\n            if (prevDiff > 0) {\n                const newScale = graph.value.scaling * (1 + (curDiff - prevDiff) / 500);\n                applyZoom(midpoint.x, midpoint.y, newScale);\n            }\n\n            // Cache the distance for the next move event\n            prevDiff = curDiff;\n        } else {\n            dragMove.onPointerMove(ev);\n        }\n    };\n\n    const onPointerUp = (ev) => {\n        dragMove.onPointerUp();\n\n        pointerCache = pointerCache.filter((p) => p.pointerId !== ev.pointerId);\n        prevDiff = -1;\n    };\n\n    return {\n        ...dragMove,\n        onPointerDown,\n        onPointerMove,\n        onPointerUp,\n        onMouseWheel,\n    };\n}\n","import { render } from \"./Editor.vue?vue&type=template&id=85acdf9a\"\nimport script from \"./Editor.vue?vue&type=script&lang=js\"\nexport * from \"./Editor.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 11562;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 58896;\nmodule.exports = webpackEmptyContext;","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Implements additional functions for CustomNode\n */\n\nimport { useViewModel, useGraph } from '@baklavajs/renderer-vue';\nimport { GRAPH_NODE_TYPE_PREFIX } from '@baklavajs/core';\n\n/**\n * The function decides whether a name for the option should be displayed.\n *\n * @param optionType Name of the option component\n * @returns True if the name should be displayed, false otherwise.\n */\nexport function getOptionName(optionType) {\n    switch (optionType) {\n        case 'InputInterface':\n        case 'SelectInterface':\n        case 'ListInterface':\n        case 'TextInterface':\n        case 'HexInterface':\n            return true;\n        case 'NumberInterface':\n        case 'IntegerInterface':\n        case 'CheckboxInterface':\n        case 'SliderInterface':\n        case 'NodeInterface':\n        default:\n            return false;\n    }\n}\n\n/**\n * Updates a side and optionally a sidePosition of an interface\n *\n * @param node in which the interface is updated\n * @param intf interface to update\n * @param newSide new side of the interface\n * @param newSidePosition new position of the interface. If it is occupied\n * @param swap if true then if an interface is found in 'newSidePosition' then they\n * are swapped\n * then an old interface is moved.\n */\n/* eslint-disable no-param-reassign */\nexport function updateInterfacePosition(\n    node,\n    intf,\n    newSide,\n    newSidePosition = undefined,\n    swap = false,\n) {\n    const oldSidePosition = intf.sidePosition;\n\n    intf.side = newSide;\n    if (newSidePosition !== undefined) {\n        intf.sidePosition = newSidePosition;\n    }\n\n    const found = [\n        ...Object.values(node.inputs),\n        ...Object.values(node.outputs),\n    ].find(\n        (io) => io.id !== intf.id &&\n            io.sidePosition === intf.sidePosition &&\n            io.side === intf.side,\n    );\n\n    if (found !== undefined) {\n        if (newSidePosition !== undefined && swap) {\n            found.sidePosition = oldSidePosition;\n        } else {\n            const intfToMove = newSidePosition === undefined ? intf : found;\n\n            // Finding the first non occupied side position on that side\n            const sameSide = [\n                ...Object.values(node.inputs),\n                ...Object.values(node.outputs),\n            ].filter((io) => io.side === intfToMove.side && !io.hidden);\n            const occupiedPositions = sameSide.map((io) => io.sidePosition);\n\n            let proposedPosition = 0;\n            while (occupiedPositions.includes(proposedPosition)) {\n                proposedPosition += 1;\n            }\n\n            intfToMove.sidePosition = proposedPosition;\n        }\n    }\n}\n\n/**\n * Wrapper for nodes removal\n *\n * @param node node to remove. Can be either a graph node or a regular node\n * @param unwrapGraph determines whether to unwrap the graph node contents\n * into the current graph. Can be used only when removing a graph node\n */\nexport function removeNode(node, unwrapGraph = false) {\n    if (node.type.startsWith(GRAPH_NODE_TYPE_PREFIX) && unwrapGraph) {\n        const { viewModel } = useViewModel();\n        viewModel.value.editor.unwrapSubgraph(node);\n    } else {\n        const { graph } = useGraph();\n        graph.value.removeNode(node);\n    }\n}\n","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\n\n/*\n * Custom pipeline editor - Implements logic for adding, removing, editing nodes and\n * connections between them.\n * Inherits from baklavajs/core/src/editor.ts\n */\n\n/* eslint-disable max-classes-per-file */\n\nimport { Editor, GRAPH_NODE_TYPE_PREFIX } from '@baklavajs/core';\n\nimport { useGraph } from '@baklavajs/renderer-vue';\n\nimport { toRaw, nextTick } from 'vue';\nimport createPipelineManagerGraph from './CustomGraph.js';\nimport LayoutManager from '../core/LayoutManager.js';\nimport { suppressHistoryLogging } from '../core/History.ts';\nimport CreateCustomGraphNodeType from './CustomGraphNode.js';\nimport { ir } from '../core/interfaceRegistry.ts';\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\nexport default class PipelineManagerEditor extends Editor {\n    preview = false;\n\n    _hideHud = false;\n\n    get hideHud() {\n        return this._hideHud || this.preview;\n    }\n\n    set hideHud(val) {\n        this._hideHud = val;\n    }\n\n    _readonly = false;\n\n    get readonly() {\n        return this._readonly || this.preview;\n    }\n\n    set readonly(val) {\n        this._readonly = val;\n    }\n\n    allowLoopbacks = false;\n\n    nodeIcons = new Map();\n\n    baseURLs = new Map();\n\n    baseIconUrls = new Map();\n\n    nodeURLs = new Map();\n\n    layoutManager = new LayoutManager();\n\n    subgraphStack = [];\n\n    registerGraph(graph) {\n        const customGraph = createPipelineManagerGraph(graph);\n        super.registerGraph(customGraph);\n    }\n\n    save() {\n        // Save all changes done to subgraphs before saving\n        const currentGraphId = this._graph.id;\n        const stackCopy = Array.from(toRaw(this.subgraphStack));\n        stackCopy.forEach(this.backFromSubgraph.bind(this));\n\n        const currentGraphState = this.graph.save();\n\n        currentGraphState.panning = this._graph.panning;\n        currentGraphState.scaling = this._graph.scaling;\n\n        const dataflowState = { graphs: [] };\n\n        // subgraphs are stored in state.subgraphs, there is no need to store it\n        // in nodes itself\n        const recurrentSubgraphSave = (node) => {\n            if (node.subgraph !== undefined) {\n                dataflowState.graphs.push(node.graphState);\n                node.graphState.nodes.forEach(recurrentSubgraphSave);\n            }\n            delete node.graphState;\n        };\n        currentGraphState.nodes.forEach(recurrentSubgraphSave);\n\n        if (dataflowState.graphs.length) {\n            dataflowState.entryGraph = currentGraphId;\n        }\n\n        dataflowState.graphs = [currentGraphState, ...dataflowState.graphs];\n\n        /* eslint-disable no-unused-vars */\n        stackCopy.forEach(([_, subgraphNode]) => {\n            const errors = this.switchToSubgraph(subgraphNode);\n            if (Array.isArray(errors) && errors.length) {\n                throw new Error(errors);\n            }\n        });\n        /* eslint-enable no-unused-vars */\n        return dataflowState;\n    }\n\n    /**\n     * Cleans all graphs in the editor.\n     * @param Determines whether the cleaning process should be stored in history\n     */\n    deepCleanEditor(suppressHistory = true) {\n        this.subgraphStack.forEach(this.backFromSubgraph.bind(this));\n        this.cleanEditor(suppressHistory);\n        this.graphName = undefined;\n    }\n\n    /**\n     * Cleans up the current graph current graph editor.\n     * @param Determines whether the cleaning process should be stored in history\n     */\n    cleanEditor(suppressHistory = true) {\n        const graphInstance = this._graph;\n\n        suppressHistoryLogging(suppressHistory);\n        for (let i = graphInstance.connections.length - 1; i >= 0; i -= 1) {\n            graphInstance.removeConnection(graphInstance.connections[i]);\n        }\n        for (let i = graphInstance.nodes.length - 1; i >= 0; i -= 1) {\n            graphInstance.removeNode(graphInstance.nodes[i]);\n        }\n        suppressHistoryLogging(false);\n    }\n\n    unregisterGraphs() {\n        [...this.graphs]\n            .filter((graph) => graph.id !== this._graph.id)\n            .forEach((graph) => this.unregisterGraph(graph));\n        this.subgraphStack = [];\n    }\n\n    unregisterNodes() {\n        this.nodeTypes.forEach((_, nodeKey) => {\n            this.unregisterNodeType(nodeKey);\n        });\n    }\n\n    registerNodeType(type, options) {\n        if (this.events.beforeRegisterNodeType.emit({ type, options }).prevented) {\n            return;\n        }\n        const nodeInstance = new type(); // eslint-disable-line new-cap\n        this._nodeTypes.set(nodeInstance.type, {\n            type,\n            category: options?.category ?? 'default',\n            title: options?.title ?? nodeInstance.title,\n            isCategory: options?.isCategory ?? false,\n        });\n        this.events.registerNodeType.emit({ type, options });\n    }\n\n    /**\n     * Loads the dataflow into the editor.\n     *\n     * @param state dataflow to load\n     * @param preventCentering determines whether to center the graph after loading\n     * @param loadOnly determines whether to load the graph only without adjusting\n     * the graph rendering. Can be used when validating graphs without their browser\n     * representation.\n     * @returns list of errors that occurred during loading\n     */\n    async load(state, preventCentering = false, loadOnly = false) {\n        // All subgraphs should be unregistered to avoid conflicts later when trying to\n        // load into subgraph (in that case there may be two subgraphs with the same ID, one\n        // of them from the previous session).\n        this.unregisterGraphs();\n        ir.clearRegistry();\n\n        // There can be only one subgraph node matching to a particular subgraphs\n        const usedInstances = new Set();\n\n        const recurrentSubgraphLoad = (node) => {\n            const errors = [];\n            if (node.subgraph !== undefined) {\n                const fittingTemplate = state.graphs.filter(\n                    (template) => template.id === node.subgraph,\n                );\n                if (fittingTemplate.length !== 1) {\n                    return [`Expected exactly one template with ID ${node.name}, got ${fittingTemplate.length}`];\n                }\n                if (usedInstances.has(node.subgraph)) {\n                    return [`Subgraph ${node.subgraph} has multiple nodes pointing to it - only unique IDs are allowed`];\n                }\n                usedInstances.add(node.subgraph);\n                node.graphState = structuredClone(fittingTemplate[0]);\n\n                node.graphState.nodes.forEach((n) => {\n                    errors.push(...recurrentSubgraphLoad(n));\n                });\n            }\n            return errors;\n        };\n\n        // Load the node state as it is, wait until vue renders new nodes so that\n        // node dimensions can be retrieved from DOM elements and then update the\n        // location based on autolayout results. The editor is set to readonly\n        // during loading to prevent any changes that may happen between graph load\n        // and layout computation\n        const readonlySetting = this.readonly;\n        this.readonly = true;\n        let errors = [];\n\n        if (!state.graphs.length) {\n            return ['No graphs found'];\n        }\n\n        let entryGraph;\n        if (state.entryGraph) {\n            entryGraph = state.graphs.find(\n                (graph) => graph.id === state.entryGraph,\n            );\n\n            if (!entryGraph) {\n                return [`No entry graph found of id '${state.entryGraph}'`];\n            }\n        } else {\n            entryGraph = state.graphs[0]; // eslint-disable-line prefer-destructuring\n        }\n        const { panning, scaling } = entryGraph;\n\n        const usedGraphs = new Set();\n\n        state.graphs.forEach((graph) => {\n            graph.nodes.forEach((n) => {\n                if (n.subgraph !== undefined) {\n                    usedGraphs.add(n.subgraph);\n                }\n            });\n        });\n        // Finding a root graph by checking which graph is not referenced by any other\n        const rootGraph = state.graphs.find((graph) =>\n            !usedGraphs.has(graph.id),\n        );\n        if (rootGraph === undefined) {\n            return ['No root graph found. Make sure you graph does not have any reccurency'];\n        }\n\n        try {\n            rootGraph.nodes.forEach((n) => {\n                errors.push(...recurrentSubgraphLoad(n));\n            });\n\n            if (errors.length) {\n                return errors;\n            }\n\n            state = this.hooks.load.execute(state);\n            errors = this._graph.load(rootGraph);\n        } catch (err) {\n            // If anything goes wrong during dataflow loading, the editor is cleaned and an\n            // appropriate error is returned.\n            this.cleanEditor();\n            this.readonly = readonlySetting;\n            return [err.toString()];\n        }\n        if (Array.isArray(errors) && errors.length && process.env.VUE_APP_GRAPH_DEVELOPMENT_MODE !== 'true') {\n            this.cleanEditor();\n            this.readonly = readonlySetting;\n            return errors;\n        }\n        this.events.loaded.emit();\n        this.graphName = entryGraph.name;\n        this.readonly = readonlySetting;\n\n        // If the editor is run outside of a browser, then\n        // all functionality that is after this line will fail,\n        // as it changes the way the graph is rendered in the browser\n        if (typeof window === 'undefined' || loadOnly) return errors;\n\n        const dfs = (subgraph, path) => {\n            if (subgraph?.nodes !== undefined) {\n                for (let i = 0; i < subgraph.nodes.length; i += 1) {\n                    if (subgraph.nodes[i].subgraph !== undefined) {\n                        if (subgraph.nodes[i].subgraph.id === entryGraph.id) {\n                            return [...path, subgraph.nodes[i]];\n                        }\n                        const returnedPath = dfs(\n                            subgraph.nodes[i].subgraph,\n                            [...path, subgraph.nodes[i]],\n                        );\n                        if (returnedPath.length) {\n                            return returnedPath;\n                        }\n                    }\n                }\n            }\n            return [];\n        };\n\n        // Finding a path to the defined entry and switching to it sequentially\n        const path = dfs(this._graph, []);\n\n        path.forEach((node) => {\n            this.switchToSubgraph(node);\n        });\n\n        if (this.layoutManager.layoutEngine.activeAlgorithm !== 'NoLayout') {\n            await nextTick();\n            await this.applyAutolayout(false);\n        }\n\n        // We need graph switched and sidebar rendered for autozoom\n        await nextTick();\n        if (panning !== undefined) {\n            this._graph.panning = panning;\n        }\n        if (scaling !== undefined) {\n            this._graph.scaling = scaling;\n        }\n        if (!preventCentering && scaling === undefined && panning === undefined) {\n            this.centerZoom();\n        }\n        return errors;\n    }\n\n    privatizeInterface(graphId, intf) {\n        let graph = [...this.graphs].find((g) => g.id === graphId);\n        let graphNode = graph.graphNode; // eslint-disable-line prefer-destructuring\n\n        intf.externalName = undefined;\n        if (graphNode === undefined) return;\n\n        const { graphIds, sharedInterface } = ir.getRegisteredInterface(intf.id);\n        const graphIdIdx = graphIds.findIndex((id) => id === graphNode.graph.id);\n        graphIds.splice(graphIdIdx, graphIds.length - graphIdIdx);\n\n        graphNode.updateExposedInterfaces();\n\n        // Update all graphs that used this exposed interface\n        for (let i = graphIdIdx + 1; i < graphIds.length; i += 1) {\n            graph = [...this.graphs].find((g) => g.id === graphIds[graphIdIdx]);\n            graphNode = graph.graphNode; // eslint-disable-line prefer-destructuring\n            graphNode.updateExposedInterfaces();\n        }\n\n        // If sharedInterface is the same as the interface that is privatized, it means\n        // that the interface is not shared anymore and its entry should be deleted.\n        if (sharedInterface === intf) {\n            ir.deleteRegisteredInterface(intf.id);\n        }\n    }\n\n    /**\n     * Exposes passed interface under the `name` name. The node that has the interface has to\n     * be in the graph with the `graphId` ID.\n     *\n     * @param {string} graphId graph which has the node with the interface\n     * @param {Object} intf interface to expose\n     * @param {string} name name under which the interface will be exposed. If set to `undefined`,\n     * external name will be inferred from the name of the interface.\n     */\n    exposeInterface(graphId, intf, name = undefined) {\n        const graph = [...this.graphs].find((g) => g.id === graphId);\n        const graphNode = graph.graphNode; // eslint-disable-line prefer-destructuring\n        intf.externalName = name ?? graph.resolveNewExposedName(intf.name);\n        if (graphNode === undefined) return;\n        // After changing the external name, the interface has to be updated in the\n        // graph node to reflect the changes in the graph.\n        graphNode.updateExposedInterfaces();\n    }\n\n    /**\n     * Calculates the width, height of the editor and the width of the sidebar.\n     * It is assumed that the view is rendered in the browser,\n     * otherwise an error will be thrown.\n     *\n     * @returns {Object} object with calculated sizes\n     */\n    static editorSize() {\n        if (typeof document === 'undefined') {\n            throw new Error('The editor is in browserless mode. Cannot obtain editor size.');\n        }\n\n        const terminalHeight =\n            document.getElementsByClassName('terminal-wrapper')[0]?.offsetHeight ?? 0;\n        const navbarHeight = document.getElementsByClassName('wrapper')[0]?.offsetHeight ?? 0;\n        const nodePalette = document.getElementsByClassName('baklava-node-palette');\n        let sideBarWidth = 0;\n        if (nodePalette.length !== 0) {\n            const paletteRect = nodePalette[0].getBoundingClientRect();\n            sideBarWidth = Math.max(paletteRect.right, 0);\n        }\n\n        const editorHeight = window.innerHeight - terminalHeight - navbarHeight;\n        const editorWidth = window.innerWidth - sideBarWidth;\n\n        return {\n            editorWidth,\n            editorHeight,\n            sideBarWidth,\n        };\n    }\n\n    /**\n     * Centers the currently displayed graph in the editor.\n     * The function calculates the scaling and panning values to center the graph\n     * in the editor and sets them in the graph.\n     * The function assumes that the editor is rendered in the browser,\n     * otherwise an error will be thrown.\n     */\n    centerZoom() {\n        if (!Array.isArray(this._graph.nodes) || this._graph.nodes.length === 0) return;\n        if (typeof document === 'undefined') {\n            throw new Error('The editor is in browserless mode. Cannot obtain editor size.');\n        }\n\n        const {\n            editorWidth,\n            editorHeight,\n            sideBarWidth,\n        } = PipelineManagerEditor.editorSize();\n\n        const {\n            graphHeight,\n            graphWidth,\n            leftmostX,\n            topmostY,\n        } = this._graph.size();\n\n        const margin = 100;\n\n        const scalingY = editorHeight / (graphHeight + 2 * margin);\n        const scalingX = editorWidth / (graphWidth + 2 * margin);\n\n        if (scalingX > scalingY) {\n            const graphCenter = (graphWidth + 2 * margin) / 2;\n            const editorCenter = (editorWidth / 2) * (1 / scalingY);\n\n            const translationX = editorCenter - graphCenter;\n\n            this._graph.panning = {\n                x: -(leftmostX - margin - translationX - sideBarWidth / scalingY),\n                y: -(topmostY - margin),\n            };\n            this._graph.scaling = scalingY;\n        } else {\n            const graphCenter = (graphHeight + 2 * margin) / 2;\n            const editorCenter = (editorHeight / 2) * (1 / scalingX);\n\n            const translationY = editorCenter - graphCenter;\n\n            this._graph.panning = {\n                x: -(leftmostX - margin - sideBarWidth / scalingX),\n                y: -(topmostY - margin - translationY),\n            };\n            this._graph.scaling = scalingX;\n        }\n    }\n\n    nodeURLsEmpty() {\n        return this.nodeURLs.size === 0;\n    }\n\n    getNodeURLs(nodeName) {\n        const urls = this.nodeURLs.get(nodeName) || {};\n\n        const fullUrls = [];\n        Object.entries(urls).forEach(([urlName, url]) => {\n            const t = { ...this.baseURLs.get(urlName) };\n            t.url += url;\n            fullUrls.push(t);\n        });\n\n        return fullUrls;\n    }\n\n    getNodeIconPath(nodeName) {\n        return this.nodeIcons.get(nodeName) || undefined;\n    }\n\n    addGraphTemplate(template, category, type, isCategory = false) {\n        if (this.events.beforeAddGraphTemplate.emit(template).prevented) {\n            return;\n        }\n        if (this.nodeTypes.has(`${GRAPH_NODE_TYPE_PREFIX}${template.id}`)) {\n            return;\n        }\n        this._graphTemplates.push(template);\n        this.graphTemplateEvents.addTarget(template.events);\n        this.graphTemplateHooks.addTarget(template.hooks);\n\n        const customGraphNodeType = CreateCustomGraphNodeType(template, type);\n        this.registerNodeType(customGraphNodeType, {\n            category,\n            title: template.name,\n            isCategory,\n        });\n\n        this.events.addGraphTemplate.emit(template);\n    }\n\n    switchGraph(subgraphNode) {\n        if (this._switchGraph === undefined) {\n            const { switchGraph } = useGraph();\n            this._switchGraph = switchGraph;\n        }\n        // disable history logging for the switch - don't push nodes being created here\n        suppressHistoryLogging(true);\n\n        this._graph = subgraphNode.subgraph;\n        this._switchGraph(subgraphNode.subgraph);\n        this.graphName = this._graph.name;\n\n        suppressHistoryLogging(false);\n        nextTick().then(() => {\n            const graph = this.graph.save();\n            this.layoutManager.registerGraph(graph);\n            this.layoutManager.computeLayout(graph).then(this.updateNodesPosition.bind(this));\n        });\n    }\n\n    switchToSubgraph(subgraphNode) {\n        // Obtaining the current graph from the graph node and pushing it to the stack\n        this.subgraphStack.push(subgraphNode.graph);\n        this.switchGraph(subgraphNode);\n    }\n\n    /**\n     * Switches back from a displayed graph.\n     * The function changes the currently displayed graph and propagates changes in interfaces\n     * back to the graph node.\n     *\n     * It also updates the graph node's interfaces to match the ones in the graph.\n     * It checks for existing interface nodes, checks which were added, removed and changed\n     * and updates the graph node's interfaces accordingly.\n     */\n    backFromSubgraph() {\n        const newGraph = this.subgraphStack.pop(); // eslint-disable-line no-unused-vars\n\n        suppressHistoryLogging(true);\n\n        this._graph = newGraph;\n        this._switchGraph(this._graph);\n        this.graphName = this._graph.name;\n\n        suppressHistoryLogging(false);\n    }\n\n    findInterface(intfId) {\n        for (let i = 0; i < this.graph.nodes.length; i += 1) {\n            const foundIntf = Object.values(this.graph.nodes[i].inputs).concat(\n                Object.values(this.graph.nodes[i].outputs),\n            ).find(\n                (intf) => intf.id === intfId,\n            );\n            if (foundIntf) return foundIntf;\n        }\n        return null;\n    }\n\n    unwrapSubgraph(node) {\n        const subgraphNodes = Object.values(node.subgraph._nodes);\n        // Calculate center point of subgraph nodes\n        const meanX = subgraphNodes.map((n) => n.position.x).reduce(\n            (sum, value) => sum + value, 0,\n        ) / subgraphNodes.length;\n        const meanY = subgraphNodes.map((n) => n.position.y).reduce(\n            (sum, value) => sum + value, 0,\n        ) / subgraphNodes.length;\n        // Remove selections\n        this.graph.selectedNodes = [];\n        // Create, reposition and select subgraph nodes\n        subgraphNodes.forEach((subgraphNode) => {\n            const state = subgraphNode.save();\n            const addedNode = this.graph.addNode(subgraphNode);\n            if (addedNode) {\n                // Set position relative to removed node\n                addedNode.position.x += node.position.x - meanX;\n                addedNode.position.y += node.position.y - meanY;\n                this.graph.selectedNodes.push(addedNode);\n                // Reset connections count\n                Object.values(addedNode.inputs).concat(\n                    Object.values(addedNode.outputs),\n                ).forEach(\n                    (intf) => { intf.connectionCount = 0; },\n                );\n                addedNode.load(state);\n            }\n        });\n\n        const subgraphNodeConnections = this.graph.connections.filter(\n            (c) => c.from.nodeId === node.id || c.to.nodeId === node.id,\n        );\n        this.graph.removeNode(node);\n        Object.values(node.subgraph.connections).concat(\n            subgraphNodeConnections,\n        ).forEach((connection) => {\n            if (connection.from.name === 'Connection' || connection.to.name === 'Connection') { return; }\n\n            // Finding interfaces in newly added nodes that correspond to the ones in the connection\n            const fromInterface = this.findInterface(connection.from.id);\n            const toInterface = this.findInterface(connection.to.id);\n\n            if (fromInterface && toInterface) {\n                const createdConnection = this.graph.addConnection(fromInterface, toInterface);\n                (connection.anchors ?? []).forEach((anchor, index) => {\n                    let newAnchor;\n                    // Only anchors from within the graph node should be shifted\n                    if (node.subgraph.connections.includes(connection)) {\n                        newAnchor = {\n                            x: anchor.x + node.position.x - meanX,\n                            y: anchor.y + node.position.y - meanY,\n                        };\n                    } else {\n                        newAnchor = {\n                            x: anchor.x,\n                            y: anchor.y,\n                        };\n                    }\n\n                    this.graph.addAnchor(newAnchor, createdConnection, index);\n                });\n            }\n        });\n    }\n\n    isInSubgraph() {\n        return this.subgraphStack.length > 0;\n    }\n\n    async applyAutolayout(resetLocations = true) {\n        const state = this.graph.save();\n        if (resetLocations) {\n            state.nodes.forEach((node) => {\n                node.position = undefined;\n            });\n        }\n        this.layoutManager.registerGraph(state);\n        const updatedGraph = await this.layoutManager.computeLayout(state);\n        this.updateNodesPosition(updatedGraph);\n    }\n\n    updateNodesPosition(updatedGraph) {\n        updatedGraph.nodes.forEach((updatedState) => {\n            const node = this.graph.nodes.filter(\n                (nodeInstance) => updatedState.id === nodeInstance.id,\n            )[0];\n            node.position = updatedState.position;\n        });\n    }\n\n    updateCurrentSubgraphName(name) {\n        this._graph.name = name;\n    }\n}\n","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Implements custom version of baklava's Graph object\n */\n\nimport {\n    GraphTemplate, DummyConnection, Connection, GRAPH_NODE_TYPE_PREFIX,\n} from '@baklavajs/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BaklavaEvent } from '@baklavajs/events';\nimport { startTransaction, commitTransaction } from '../core/History.ts';\nimport { updateInterfacePosition } from './CustomNode.js';\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\nexport default function createPipelineManagerGraph(graph) {\n    // Add an event for adding an anchor to the graph\n    graph.events.addAnchor = new BaklavaEvent();\n    graph.events.removeAnchor = new BaklavaEvent();\n\n    // Graph node that represents the graph itself. Root graph does not have a node graph assigned.\n    graph.graphNode = undefined;\n\n    graph.checkConnection = function checkConnection(from, to) {\n        if (!from || !to) {\n            return { connectionAllowed: false, error: 'Invalid from and to references.' };\n        }\n\n        const fromNode = this.findNodeById(from.nodeId);\n        const toNode = this.findNodeById(to.nodeId);\n\n        if (fromNode && toNode && fromNode === toNode && !this.editor.allowLoopbacks) {\n            return { connectionAllowed: false, error: 'Loopbacks are not allowed.' };\n        }\n\n        // reverse connection so that 'from' is input and 'to' is output\n        if (\n            (from.direction === 'input' && to.direction === 'output') ||\n            (from.direction === 'input' && to.direction === 'inout') ||\n            (from.direction === 'inout' && to.direction === 'output')\n        ) {\n            const tmp = from;\n            from = to;\n            to = tmp;\n        }\n\n        if (from.isInput && from.direction !== 'inout') {\n            return {\n                connectionAllowed: false,\n                error: 'Connections are only allowed from output or inout interfaces.',\n            };\n        }\n\n        if (!to.isInput) {\n            return {\n                connectionAllowed: false,\n                error: 'Connections are only allowed to input or inout interfaces.',\n            };\n        }\n\n        if (this.connections.some((c) => c.from === from && c.to === to)) {\n            return { connectionAllowed: false, error: 'Duplicate connections are not allowed.' };\n        }\n\n        if (from.maxConnectionsCount > 0 && from.connectionCount + 1 > from.maxConnectionsCount) {\n            return {\n                connectionAllowed: false,\n                error: `Too many connections from an input interface '${from.id}', maximum of '${from.maxConnectionsCount}' are allowed.`,\n            };\n        }\n\n        if (\n            (to.maxConnectionsCount === 0 || to.maxConnectionsCount === undefined) &&\n            to.connectionCount > 0\n        ) {\n            return {\n                connectionAllowed: false,\n                error: `By default only one connection to an input interface '${to.id}' allowed.`,\n            };\n        }\n\n        if (to.maxConnectionsCount > 0 && to.connectionCount + 1 > to.maxConnectionsCount) {\n            return {\n                connectionAllowed: false,\n                error: `Too many connections to an output interface '${to.id}', maximum of '${to.maxConnectionsCount}' are allowed.`,\n            };\n        }\n\n        if (from.type && to.type) {\n            const fromTypes =\n                typeof from.type === 'string' || from.type instanceof String\n                    ? [from.type]\n                    : from.type;\n            const toTypes =\n                typeof to.type === 'string' || to.type instanceof String ? [to.type] : to.type;\n\n            const commonType = fromTypes.find((t) => toTypes.includes(t));\n\n            if (commonType === undefined) {\n                return {\n                    connectionAllowed: false,\n                    error: `No common types between interfaces. Interface '${from.id}' supports types '${fromTypes}' and interface '${to.id}' supports types '${toTypes}'.`,\n                };\n            }\n        }\n\n        if (this.events.checkConnection.emit({ from, to }).prevented) {\n            return {\n                connectionAllowed: false,\n                error: `Connection between an input interface '${from.id}' and an output interface '${to.id}' was prevented`,\n            };\n        }\n\n        const hookResults = this.hooks.checkConnection.execute({ from, to });\n        if (hookResults.some((hr) => !hr.connectionAllowed)) {\n            return {\n                connectionAllowed: false,\n                errors: `Connection between an input interface '${from.id}' and an output interface '${to.id}' was prevented`,\n            };\n        }\n\n        // List of connections that are removed once the dummyConnection is created\n        const connectionsInDanger = [];\n        return {\n            connectionAllowed: true,\n            dummyConnection: new DummyConnection(from, to),\n            connectionsInDanger,\n        };\n    };\n\n    /**\n     * Adds an anchor to the connection and creates an event that\n     * the anchor was added, which is used by history system.\n     *\n     * @param anchor anchor to be added\n     * @param connection connection to which the anchor is added\n     * @param position position of the anchor in the connection\n     */\n    graph.addAnchor = function addAnchor(anchor, connection, position) {\n        const anchorToAdd = {\n            x: anchor.x,\n            y: anchor.y,\n            id: uuidv4(),\n        };\n        if (connection.anchors === undefined) connection.anchors = [];\n\n        connection.anchors.splice(position, 0, anchorToAdd);\n        graph.events.addAnchor.emit([connection, (position * 3 + 1)]);\n    };\n\n    // Replaces given instance of a node with a node of type `newNodeName`\n    // All properties that are common preserve their values\n    // All connections that were connected to the interfaces that are common\n    // for those two nodes are preserved as well.\n    graph.replaceNode = function replaceNode(oldNode, newNodeName) {\n        const oldPosition = oldNode.position;\n        const newNode = this.editor.nodeTypes.get(newNodeName);\n        const newNodeInstance = new newNode.type(); // eslint-disable-line new-cap\n\n        // Restoring a custom title of the node\n        if (oldNode.title !== oldNode.type) {\n            newNodeInstance.title = oldNode.title;\n        }\n\n        // Restoring properties and interfaces\n        Object.entries({ ...oldNode.inputs, ...oldNode.outputs }).forEach(([name, intf]) => {\n            if (intf.direction !== undefined) {\n                if (Object.prototype.hasOwnProperty.call(newNodeInstance.inputs, name)) {\n                    updateInterfacePosition(\n                        newNodeInstance,\n                        newNodeInstance.inputs[name],\n                        intf.side,\n                        intf.sidePosition,\n                    );\n                }\n                if (Object.prototype.hasOwnProperty.call(newNodeInstance.outputs, name)) {\n                    updateInterfacePosition(\n                        newNodeInstance,\n                        newNodeInstance.outputs[name],\n                        intf.side,\n                        intf.sidePosition,\n                    );\n                }\n                // If the new node has the same property of the same type as it could be overridden\n            } else if (\n                Object.prototype.hasOwnProperty.call(newNodeInstance.inputs, name) &&\n                newNodeInstance.inputs[name].componentName === intf.componentName\n            ) {\n                newNodeInstance.inputs[name].value = intf.value;\n            }\n        });\n\n        // Restoring connections\n        const interfaces = [...Object.values(oldNode.inputs), ...Object.values(oldNode.outputs)];\n        const connections = this.connections.filter(\n            (c) => interfaces.includes(c.from) || interfaces.includes(c.to),\n        );\n\n        const connectionsToRestore = [];\n\n        Object.entries({ ...oldNode.inputs, ...oldNode.outputs }).forEach(([name, intf]) => {\n            if (intf.direction === undefined) return;\n\n            // Rewiring connections to new interfaces\n            connections.forEach((conn) => {\n                if (Object.prototype.hasOwnProperty.call(newNodeInstance.inputs, name)) {\n                    if (conn.from === intf) {\n                        const newConn = new Connection(newNodeInstance.inputs[name], conn.to);\n                        newConn.anchors = conn.anchors;\n                        connectionsToRestore.push(newConn);\n                    } else if (conn.to === intf) {\n                        const newConn = new Connection(conn.from, newNodeInstance.inputs[name]);\n                        newConn.anchors = conn.anchors;\n                        connectionsToRestore.push(newConn);\n                    }\n                }\n\n                if (Object.prototype.hasOwnProperty.call(newNodeInstance.outputs, name)) {\n                    if (conn.from === intf) {\n                        const newConn = new Connection(newNodeInstance.outputs[name], conn.to);\n                        newConn.anchors = conn.anchors;\n                        connectionsToRestore.push(newConn);\n                    } else if (conn.to === intf) {\n                        const newConn = new Connection(conn.from, newNodeInstance.outputs[name]);\n                        newConn.anchors = conn.anchors;\n                        connectionsToRestore.push(newConn);\n                    }\n                }\n            });\n        });\n\n        newNodeInstance.position = oldPosition;\n\n        startTransaction();\n\n        this.removeNode(oldNode);\n        this.addNode(newNodeInstance);\n        connectionsToRestore.forEach((conn) => this.internalAddConnection(conn));\n\n        commitTransaction();\n\n        return newNodeInstance;\n    };\n\n    graph.addNode = function addNode(node) {\n        if (this.events.beforeAddNode.emit(node).prevented) {\n            return;\n        }\n        this.nodeEvents.addTarget(node.events);\n        this.nodeHooks.addTarget(node.hooks);\n        node.registerGraph(this);\n\n        if (node.template !== undefined) {\n            const newState = JSON.parse(JSON.stringify(node.template.save()));\n            newState.id ??= uuidv4();\n            node.template = new GraphTemplate(newState, this.editor);\n        }\n\n        this._nodes.push(node);\n        // when adding the node to the array, it will be made reactive by Vue.\n        // However, our current reference is the non-reactive version.\n        // Therefore, we need to get the reactive version from the array.\n        node = this.nodes.find((n) => n.id === node.id);\n        node.onPlaced();\n        this.events.addNode.emit(node);\n        return node; // eslint-disable-line consistent-return\n    };\n\n    graph.destroy = function destroy() {\n        // Remove possibility of removing graphs - this ignores changes made by\n        // default switchGraph (unregistering from editor and removing nodes) and\n        // allows to later reuse this instance\n\n        // TODO: This causes memory leaks, as when reloading a graph, all non-destroyed\n        // graphs linger are are completely unnaccessible\n    };\n\n    graph.load = function load(state) {\n        const errors = [];\n\n        // Clear current state\n        for (let i = this.connections.length - 1; i >= 0; i -= 1) {\n            this.removeConnection(this.connections[i]);\n        }\n        for (let i = this.nodes.length - 1; i >= 0; i -= 1) {\n            this.removeNode(this.nodes[i]);\n        }\n\n        // Load state\n        this.id = state.id ?? uuidv4();\n        this.name = state.name ?? undefined;\n\n        state.nodes.forEach((n) => {\n            const isSubgraphNode = n.subgraph !== undefined;\n            if (isSubgraphNode) {\n                n.name = `${GRAPH_NODE_TYPE_PREFIX}${n.name}`;\n            }\n\n            const nodeInformation = this.editor.nodeTypes.get(n.name);\n            if (!nodeInformation) {\n                errors.push(`Node type ${n.name} is not registered`);\n            } else {\n                const node = new nodeInformation.type(); // eslint-disable-line new-cap\n                const nodeId = node.id;\n                this.addNode(node);\n                const nodeErrors = node.load(n);\n                if (Array.isArray(nodeErrors) && nodeErrors.length) {\n                    errors.push(...nodeErrors);\n                }\n\n                // The node state may not have an id, so we it has to be assigned manually\n                // if needed\n                node.id ??= nodeId;\n            }\n        });\n\n        // Assigning ids to connections that do not have them\n        state.connections.forEach((c) => {\n            c.id ??= uuidv4();\n        });\n\n        state.connections.forEach((c) => {\n            const fromIf = this.findNodeInterface(c.from);\n            const toIf = this.findNodeInterface(c.to);\n            if (!fromIf) {\n                errors.push(\n                    `Connection of id '${c.id}' invalid. Could not find interface with id '${c.from}'`,\n                );\n            } else if (!fromIf.port) {\n                errors.push(\n                    `Connection of id '${c.id}' invalid. Source of the connection is not an Interface`,\n                );\n            } else if (!toIf) {\n                errors.push(\n                    `Connection of id '${c.id}' invalid. Could not find interface with id '${c.to}'`,\n                );\n            } else if (!toIf.port) {\n                errors.push(\n                    `Connection of id '${c.id}' invalid. Destination of the connection is not an Interface`,\n                );\n            } else if (\n                state.connections.some(\n                    (conn) => conn.id === c.id && (conn.from !== c.from || conn.to !== c.to),\n                )\n            ) {\n                errors.push(`Connection of id '${c.id}' invalid. ID is already taken.`);\n            } else {\n                // Manually adding connections instead of using `addConnection` from baklavajs\n                // as we want to get a feedback message from `checkConnection` function\n                // which is suppressed in baklavajs functionality\n                const checkConnectionResult = this.checkConnection(fromIf, toIf);\n                if (!checkConnectionResult.connectionAllowed) {\n                    errors.push(\n                        `Could not create connection of id '${c.id}'. ${checkConnectionResult.error}`,\n                    );\n                } else {\n                    checkConnectionResult.connectionsInDanger.forEach((connectionToRemove) => {\n                        const instance = this.connections.find(\n                            (conn) => conn.id === connectionToRemove.id,\n                        );\n                        if (instance) {\n                            this.removeConnection(instance);\n                        }\n                    });\n\n                    const conn = new Connection(\n                        checkConnectionResult.dummyConnection.from,\n                        checkConnectionResult.dummyConnection.to,\n                    );\n\n                    c.anchors?.forEach((anchor, index) => {\n                        graph.addAnchor(anchor, conn, index);\n                    });\n                    this.internalAddConnection(conn);\n                }\n            }\n        });\n\n        this.hooks.load.execute(state);\n        return errors;\n    };\n\n    graph.size = function size() {\n        const sizes = this.nodes.map((node) => {\n            const HTMLelement = document.getElementById(node.id);\n            return {\n                width: HTMLelement.offsetWidth,\n                height: HTMLelement.offsetHeight,\n                position: node.position,\n            };\n        });\n        const margin = 100;\n\n        const rightmostX = Math.max(...sizes.map((node) => node.position.x + node.width)) + margin;\n        const leftmostX = Math.min(...sizes.map((node) => node.position.x)) - margin;\n\n        const bottommostY =\n            Math.max(...sizes.map((node) => node.position.y + node.height)) + margin;\n        const topmostY = Math.min(...sizes.map((node) => node.position.y)) - margin;\n\n        const graphWidth = rightmostX - leftmostX;\n        const graphHeight = bottommostY - topmostY;\n\n        return {\n            graphHeight,\n            graphWidth,\n            rightmostX,\n            leftmostX,\n            bottommostY,\n            topmostY,\n        };\n    };\n\n    graph.save = function save() {\n        const state = {\n            id: this.id,\n            name: this.name,\n            nodes: this.nodes.map((n) => n.save()),\n            connections: this.connections.map((c) => ({\n                id: c.id,\n                from: c.from.id,\n                to: c.to.id,\n                anchors: c.anchors?.map((anchor) => ({\n                    x: anchor.x,\n                    y: anchor.y,\n                })),\n            })),\n            scaling: this.scaling,\n            panning: this.panning,\n        };\n        return this.hooks.save.execute(state);\n    };\n\n    graph.removeSelectedNodes = function removeSelectedNodes() {\n        for (let i = this.selectedNodes.length - 1; i >= 0; i -= 1) {\n            this.removeNode(this.selectedNodes[i]);\n        }\n    };\n\n    graph.removeNode = function removeNode(node) {\n        if (this.nodes.includes(node)) {\n            if (this.events.beforeRemoveNode.emit(node).prevented) {\n                return;\n            }\n\n            const interfaces = [...Object.values(node.inputs), ...Object.values(node.outputs)];\n            interfaces.forEach((intf) => {\n                if (intf.externalName) {\n                    this.editor.privatizeInterface(\n                        this.id,\n                        intf,\n                    );\n                }\n            });\n\n            this.connections\n                .filter((c) => interfaces.includes(c.from) || interfaces.includes(c.to))\n                .forEach((c) => this.removeConnection(c));\n            this._nodes.splice(this.nodes.indexOf(node), 1);\n            this.events.removeNode.emit(node);\n            node.onDestroy();\n            this.nodeEvents.removeTarget(node.events);\n            this.nodeHooks.removeTarget(node.hooks);\n        }\n    };\n\n    graph.removeNodeOnly = function removeNodeOnly(node) {\n        this._nodes.splice(this.nodes.indexOf(node), 1);\n        this.events.removeNode.emit(node);\n        node.onDestroy();\n        this.nodeEvents.removeTarget(node);\n        this.nodeHooks.removeTarget(node);\n    };\n\n    graph.obtainExposedNames = function obtainExposedNames() {\n        const exposedNames = [];\n        this._nodes.forEach((node) => {\n            Object.values({ ...node.inputs, ...node.outputs }).forEach((intf) => {\n                if (intf.externalName !== undefined) {\n                    exposedNames.push(intf.externalName);\n                }\n            });\n        });\n        return exposedNames;\n    };\n\n    graph.isIncorrectExternalName = function isIncorrectExternalName(name, exposedNames) {\n        const sameNames = exposedNames.filter((n) => n === name).length;\n        return name.length === 0 || sameNames !== 0;\n    };\n\n    graph.resolveNewExposedName = function resolveNewExposedName(name) {\n        const exposedNames = this.obtainExposedNames();\n\n        // Check if the external name is taken and add a suffix if it is\n        let suffix = 1;\n        let tmpName = name;\n        while (this.isIncorrectExternalName(tmpName, exposedNames)) {\n            tmpName = `${name}_${suffix}`;\n            suffix += 1;\n        }\n        return tmpName;\n    };\n\n    return graph;\n}\n","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n */\n\nimport {\n    createGraphNodeType,\n    GRAPH_NODE_TYPE_PREFIX,\n    NodeInterface,\n    Graph,\n} from '@baklavajs/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { parseInterfaces } from '../core/interfaceParser.js';\nimport { updateSubgraphInterfaces } from '../core/NodeFactory.js';\nimport { ir } from '../core/interfaceRegistry.ts';\n\nexport default function CreateCustomGraphNodeType(template, type) {\n    const nt = createGraphNodeType(template);\n\n    return class customGraphNodeType extends nt {\n        type = `${GRAPH_NODE_TYPE_PREFIX}${type}`;\n\n        title = type;\n\n        save() {\n            const state = super.save();\n\n            const newInterfaces = [];\n            const thisInterfaces = Object.values(this.inputs).concat(Object.values(this.outputs));\n            thisInterfaces.forEach((io) => {\n                newInterfaces.push({\n                    name: io.name,\n                    externalName: io.externalName,\n                    id: io.id,\n                    direction: io.direction,\n                    side: io.side,\n                    sidePosition: io.sidePosition,\n                });\n            });\n\n            state.interfaces = newInterfaces;\n            delete state.inputs;\n            delete state.outputs;\n\n            state.subgraph = state.graphState.id;\n\n            state.name = state.type;\n            state.name = state.name.slice(GRAPH_NODE_TYPE_PREFIX.length);\n\n            delete state.type;\n\n            state.instanceName = state.title === '' ? undefined : state.title;\n            delete state.title;\n\n            return state;\n        }\n\n        /* eslint-disable no-param-reassign */\n        load(state) {\n            this.hooks.beforeLoad.execute(state);\n\n            const out = parseInterfaces(state.interfaces ?? [], [], []);\n            if (Array.isArray(out) && out.length) {\n                return out;\n            }\n            let { inputs, outputs } = out;\n\n            inputs = Object.values(inputs);\n            outputs = Object.values(outputs);\n\n            delete state.graphState.interfaces;\n            delete state.subgraph;\n\n            // Loading the subgraph of the graph node first, before creating\n            // interfaces based on the nodes in the subgraph. Thanks to that\n            // the originally exposed interfaces (coming from regular nodes)\n            // are found first.\n            const errors = this.subgraph.load(state.graphState);\n            if (errors.length) {\n                return errors;\n            }\n\n            this.updateExposedInterfaces(inputs, outputs);\n\n            if (!this.subgraph) {\n                errors.push('Cannot load a graph node without a graph');\n            }\n            if (!this.template) {\n                errors.push('Unable to load graph node without graph template');\n            }\n            if (errors.length) {\n                return errors;\n            }\n\n            // Default position should be undefined instead of (0, 0) so that it can be set\n            // by autolayout\n            this.position = state.position;\n            this.title = state.instanceName ?? '';\n\n            this.events.loaded.emit(this);\n            return [];\n        }\n\n        /**\n         * Function used to update exposed interfaces of the graph node based on the\n         * nodes inside the graph, their interfaces and their external names.\n         *\n         * @param {Array} inputs inputs of the graph node. If not provided, the function\n         * will use the current inputs of the graph node.\n         * @param {Array} outputs outputs of the graph node. If not provided, the function\n         * will use the current outputs of the graph node.\n         */\n        updateExposedInterfaces(inputs = undefined, outputs = undefined) {\n            // Update interfaces based on subgraph interfaces and their external names\n            const evaluatedIntf = updateSubgraphInterfaces(\n                this.subgraph.nodes,\n                inputs ?? Object.values(this.inputs),\n                outputs ?? Object.values(this.outputs),\n            );\n            if (Array.isArray(evaluatedIntf) && evaluatedIntf.length) {\n                throw new Error(\n                    `Internal error occurred while exposing an interface.\\n` +\n                    `Reason: ${evaluatedIntf.join('. ')}`,\n                );\n            }\n\n            // After resolving exposed interfaces, the graph node is updated accordingly.\n            this.updateInterfaces(evaluatedIntf.inputs, evaluatedIntf.outputs);\n        }\n\n        /**\n         * Function called when the node is created using the nodePalette\n         */\n        onPlaced() {\n            this.initialize();\n        }\n\n        /**\n         * Creates a new graph node instance based on the template, loads its graph state\n         * and updates exposed interfaces based on the nodes in the subgraph.\n         */\n        initialize() {\n            if (this.subgraph) {\n                this.subgraph.destroy();\n            }\n            const graph = new Graph(this.template.editor);\n\n            const state = this.prepareSubgraphInstance();\n            const errors = graph.load(state);\n            if (errors.length) {\n                throw new Error(\n                    `Internal error occurred while initializing ${graph.type} graph. ` +\n                    `Reason: ${errors.join('. ')}`,\n                );\n            }\n\n            graph.template = this.template;\n            this.subgraph = graph;\n            graph.graphNode = this;\n\n            this.updateExposedInterfaces([], []);\n\n            this._title = this.template.name; // eslint-disable-line no-underscore-dangle\n            this.events.update.emit(null);\n        }\n\n        /**\n         * Function used to update interfaces of the graph node. It makes use of InterfaceRegistry\n         * object to create interfaces that share part of the state of the exposed interfaces.\n         *\n         * @param {Array} newInputs inputs to be added to the graph node\n         * @param {Array} newOutputs outputs to be added to the graph node\n         */\n        updateInterfaces(newInputs, newOutputs) {\n            const newInterfaces = [...newInputs, ...newOutputs];\n            const currentInterfaces = { ...this.inputs, ...this.outputs };\n\n            Object.entries(currentInterfaces).forEach(([nodeKey, nodeIntf]) => {\n                // If current interface cannot be found in `newInterfaces`, it means that\n                // it was removed.\n                if (newInterfaces.find((intf) => intf.id === nodeIntf.id) === undefined) {\n                    const container = nodeIntf.direction === 'output' ? 'output' : 'input';\n                    this.removeInterface(container, nodeKey);\n                }\n            });\n\n            newInterfaces.forEach((nodeIntf) => {\n                // If new interface cannot be found in the current interfaces, it means that\n                // it has to be created\n                const foundIntf = Object.values(currentInterfaces).find(\n                    (intf) => intf.id === nodeIntf.id,\n                );\n\n                if (foundIntf === undefined) {\n                    const ni = new NodeInterface(nodeIntf.name);\n                    Object.assign(ni, nodeIntf);\n                    ir.pushGraphIdToRegistry(ni.id, this.graph.id);\n                    ir.createSharedInterface(ni);\n\n                    const container = nodeIntf.direction === 'output' ? 'output' : 'input';\n                    this.addInterface(container, `${nodeIntf.direction}_${nodeIntf.name}`, ni);\n                } else {\n                    Object.assign(foundIntf, nodeIntf);\n                }\n            });\n        }\n\n        /**\n         * The function uses its internal static template to create a new graph state\n         * based on the template. It creates a new graph node ID and maps all interfaces\n         * to new IDs. The function is used to create a new graph state that can be loaded\n         * by the graph node.\n         *\n         * @returns graph state ready to be loaded\n         */\n        prepareSubgraphInstance() {\n            const idMap = new Map();\n\n            const createNewId = (oldId) => {\n                const newId = uuidv4();\n                idMap.set(oldId, newId);\n                return newId;\n            };\n\n            const getNewId = (oldId) => {\n                const newId = idMap.get(oldId);\n                if (!newId) {\n                    throw new Error(`Unable to create graph from template: Could not map old id ${oldId} to new id`);\n                }\n                return newId;\n            };\n\n            const mapValues = (obj, fn) =>\n                Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, fn(v)]));\n\n            const mapNodeInterfaceIds = (interfaceStates) => mapValues(\n                interfaceStates, (intf) => {\n                    const clonedIntf = {\n                        ...intf,\n                        id: createNewId(intf.id),\n                    };\n                    return clonedIntf;\n                },\n            );\n\n            const newGraphNodeId = uuidv4();\n\n            const nodes = this.template.nodes.map((n) => ({\n                ...n,\n                id: createNewId(n.id),\n                inputs: mapNodeInterfaceIds(n.inputs),\n                outputs: mapNodeInterfaceIds(n.outputs),\n            }));\n\n            const connections = this.template.connections.map((c) => ({\n                id: createNewId(c.id),\n                from: getNewId(c.from),\n                to: getNewId(c.to),\n            }));\n\n            const clonedState = {\n                id: newGraphNodeId,\n                nodes,\n                connections,\n            };\n\n            return clonedState;\n        }\n    };\n}\n","/*\n * Copyright (c) 2022-2023 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst elListeners = {};\n\nconst longPressFactory = (pointerDownAction, pointerUpAction) => ({\n    beforeMount: (el, binding) => {\n        const data = {\n            timeout: null,\n            newEvent: null,\n            longPress: false,\n            moveEvents: 0,\n        };\n        elListeners[el] = {\n            pointerdown: (ev) => {\n                if (ev.pointerType === 'touch' && data.timeout === null) {\n                    data.moveEvents = 0;\n                    data.longPress = false;\n                    pointerDownAction(el, binding, ev, data);\n                    data.timeout = setTimeout(() => { data.longPress = true; }, binding.arg ?? 500);\n                }\n            },\n            pointermove: () => { data.moveEvents += 1; },\n            pointerup: (ev) => {\n                if (ev.pointerType !== 'touch') return;\n                // If long press is valid send right click to element\n                if (data.longPress && data.moveEvents < 10) {\n                    pointerUpAction(el, binding, ev, data);\n                }\n                if (data.timeout) {\n                    clearTimeout(data.timeout);\n                    data.timeout = null;\n                }\n            },\n        };\n        el.addEventListener('pointerdown', elListeners[el].pointerdown);\n        el.addEventListener('pointermove', elListeners[el].pointermove);\n        el.addEventListener('pointerup', elListeners[el].pointerup);\n    },\n    unmounted: (el) => {\n        el.removeEventListener('pointerdown', elListeners[el].pointerdown);\n        el.removeEventListener('pointermove', elListeners[el].pointermove);\n        el.removeEventListener('pointerup', elListeners[el].pointerup);\n    },\n});\n\nexport const longPress = longPressFactory(\n    // eslint-disable-next-line no-param-reassign\n    (_el, _binding, ev, data) => { data.newEvent = ev; },\n    (_el, binding, _ev, data) => { setTimeout(() => binding.value(data.newEvent), 50); },\n);\n\nexport const longPressToRight = longPressFactory(\n    (_el, _binding, ev, data) => {\n        // eslint-disable-next-line no-param-reassign\n        data.newEvent = new PointerEvent('pointerdown', {\n            button: 2, // Right click\n            clientX: ev.clientX,\n            clientY: ev.clientY,\n            screenX: ev.screenX,\n            screenY: ev.screenY,\n            pointerType: 'mouse',\n            relatedTarget: ev.relatedTarget,\n        });\n    },\n    (el, _binding, _ev, data) => { setTimeout(() => { el.dispatchEvent(data.newEvent); }, 50); },\n);\n"],"names":["useDragMove","positionRef","gridSnapperInstance","undefined","nodeId","graph","viewModel","calculateSnappedPosition","gridSize","value","settings","background","backgroundGridSnapper","nodeSnappers","x","n","y","draggingStartPoint","draggingStartPosition","movementStepEnabled","dragging","calculatePosition","pos","kind","align","gridSnap","alignedCoord","selectedNodes","map","node","id","onPointerDown","ev","shiftKey","pageX","pageY","onPointerMove","ctrlKey","dx","dy","scaling","onPointerUp","extends","props","highlighted","Boolean","picked","switchSides","toggleGroup","default","required","tabindexValue","components","Arrow","setup","el","isConnected","showComponent","startHover","endHover","openSidebar","intf","events","beforeSetValue","unsubscribe","subscribe","_","prevent","editor","readonly","group","setValue","hovered","onMouseDown","doubleClick","displayArrow","port","direction","arrowRotation","side","newClasses","__readonly","isExposed","externalName","setPort","componentName","editExternalName","externalNameInputIncorrect","externalNameInput","externalNames","inputExternalName","enableExternalNameEdit","e","splice","length","push","obtainExposedNames","indexOf","preventDefault","then","focus","select","isIncorrectExternalName","endHoverWrapper","externalNameInputCallback","target","externalNameFocusOutCallback","newExternalName","resolveNewExposedName","exposeInterface","startHoverWrapper","ref","class","type","spellcheck","autocomplete","placeholder","blur","stopPropagation","noninteractable","color","scale","rotate","component","tabindex","name","Cross","CustomInterface","CheckboxInterface","Tooltip","emits","_props","emit","editorManager","EditorManager","baklavaView","displayedGraph","converter","smartIndentationFix","simpleLineBreaks","width","sidebar","nodes","find","category","nodeTypes","get","prettyCategory","split","join","desc","html","makeHtml","description","match","forEach","hrefParts","newEnd","newHref","replace","nodeIcon","getNodeIconPath","nodeURLs","getNodeURLs","getIconPath","cache","nodeIconPath","sidebarVisible","visible","newValue","tooltipRef","tooltip","sidebarRef","top","left","text","styles","onMouseMove","movementX","displayedInputs","Object","values","inputs","filter","ni","hidden","displayedProperties","interfaceGroups","outputs","interfaces","interfaceGroupsOutput","interfaceGroupsButtonClasses","interfaceGroupsCheckboxes","checkboxes","intfG","checkbox","this","errors","enabledInterfaceGroups","parsedIntfName","intfDirection","groupName","enabledInterfaceGroupsCheckboxes","interfaceGroupsButton","toggleInterfaceGroup","replacementButtons","list","buttons","eName","button","newNode","replaceNode","replacementParents","replacementChildren","extending","replacementSiblings","siblings","displayedName","title","startsWith","slice","startResize","offsetWidth","window","addEventListener","removeEventListener","once","close","onPointerOver","right","clientX","offsetX","currentTarget","$el","clientWidth","clientY","offsetY","offsetHeight","innerWidth","onPointerLeave","getOptionName","style","src","url","key","href","draggable","icon","alt","parent","child","sibling","input","output","urls","context","classes","itemsWithHoverProperty","justOpened","closeContextMenu","modelValue","document","elementsFromPoint","includes","onClick","item","index","submenu","disabled","label","movementStep","contextMenuStyle","transform","nodeRef","titleRef","renaming","renameField","tempName","displayNoResources","nodeURLsEmpty","displayedOutputs","externalApplicationManager","entries","backendAvailable","firstWatch","async","notifyWhenChanged","data","graph_id","graphInstance","node_id","properties","new_value","notifyAboutChange","notifyPositionChanged","position","startPositionWatcher","stopPositionWatcher","showContextMenuTitle","contextMenuTitleX","contextMenuTitleY","contextMenuTitleItems","items","icons","at","endSection","onContextMenuTitleClick","action","concat","connections","c","i","from","to","removeConnection","switchToSubgraph","Array","isArray","canOpenContextMenu","openContextMenuTitle","groupDragMove","dragRootNodePosition","dragRootNodeId","groupPointerMove","groupPositionCoords","useGroupDragMove","selected","twoColumn","greyedOut","nodeTitle","highlightedTitle","highlightedType","event","abortDrag","stopDrag","cleanEvents","doneRenaming","findNodeById","onRender","hooks","renderNode","execute","openDoubleClick","displayedLeftSockets","sort","intf1","intf2","sidePosition","displayedRightSockets","getRows","sockets","numOfLines","Math","max","numOfSocket","rows","displayedRightRows","displayedLeftRows","prop","setComponent","InputInterface","ListInterface","SliderInterface","HexInterface","path","iconPath","newSocketIndex","chosenInterface","leftSocketsRefs","rightSocketsRefs","interfaceCursorStyle","display","nodeTitleStyle","cursor","isPickedInterface","dragInterface","socket","children","findIndex","socketRef","getBoundingClientRect","bottom","offsetTop","dropInterface","pickInterface","showContextMenuInterface","contextMenuInterfaceX","contextMenuInterfaceY","createContextMenuInterfaceItems","intfMode","contextMenuInterfaceItems","onContextMenuInterfaceClick","privatizeInterface","comparison","a","b","openContextMenuInterface","offsetLeft","startDrag","isHighlighted","connection","Anchor","interfaceTypes","connectionStyle","getConnectionStyle","cssClasses","interfaceConnectionPattern","interfaceConnectionColor","panning","newD","tx1","ty1","x1","y1","tx2","ty2","x2","y2","connectionRenderer","render","parsedNewD","d","parsedArray","onMouseCtrlDown","newAnchor","Date","now","addAnchor","trunc","hasAnchors","anchors","removeAnchor","idx","pointerType","anchor","rightclickCallback","getDomElements","interfaceDOM","getElementById","portDOM","getElementsByClassName","closest","interface","ConnectionView","conn","resizeObserver","state","isInDanger","fromNodePosition","toNodePosition","fromNode","toNode","fromNodeInterfacesSide","io","toNodeInterfacesSide","getPortCoordinates","resolved","clientHeight","updateCoords","ResizeObserver","observe","deep","disconnect","containsPoint","elements","firstChild","status","swappedD","isInput","URLs","LinkMenu","VerticalEllipsis","nodeTree","onDragStart","depth","Number","defaultCollapse","nodeSearch","String","notEmptyCategory","keys","subcategories","mask","fill","storedMask","oldValue","showMenu","specificationLoaded","isDefaultGraphNodeType","padding","forceZero","getRotation","sortedEntries","obj","sortSubcategories","aNode","bNode","toLowerCase","localeCompare","isCategoryNode","categoryNode","showMenuClick","menu","hitSubstring","closeMenu","nodeEntryClasses","__entry","nt","role","parseCategories","categoriesNames","categoryTree","toParse","rest","Set","setDefaultNames","nodeType","subTree","setMasksToTrue","categorizeNodes","prefix","_a","hitNodes","categoryName","categoryNames","nameNodeType","isCategory","allNames","nonCategoryNodes","nodeName","updateMasks","treeNode","forceMask","categoryMatches","categoryResult","score","entryMatches","entryResult","unWatch","PaletteCategory","PaletteEntry","Magnifier","mouseX","mouseY","paletteRef","editorEl","draggedNode","draggedNodeStyles","dragEndPlaceNode","instance","nodeInformation","addNode","rect","dragEndDeselectNode","scroll","nameFilterRef","nodeTypeEntries","topLevelNodeNames","topLevelCategories","nodeTypesInCategory","nodesURLs","fromEntries","nodesIconPath","topLevelCategory","assign","nodeCategories","parsedTree","topCategory","topSubcategory","All","newNameFilter","getNodeTree","collapse","collapseSidebar","querySelector","scrollTop","iconMenus","translate","toString","$isMobile","isDragged","selecting","selectionBegin","selectionEnd","boundingRect","xBegin","yBegin","xEnd","yEnd","visibility","abs","height","nodeInsideSelection","nodeHTMLelement","selectionBoundingRect","panningX","panningY","nodeX","nodeY","nodeWidth","nodeHeight","CustomNode","PipelineManagerConnection","TemporaryConnection","NodePalette","RectangleSelection","counter","nodeContainerStyle","keyDown","keyUp","connRefs","panZoom","pointerCache","prevDiff","midpoint","panningRef","dragMove","applyZoom","centerX","centerY","newScale","currentPoint","newPoint","diff","editorHeight","innerHeight","editorWidth","size","graphWidth","graphHeight","getCoordsFromCache","ax","ay","bx","by","sqrt","pointerId","curDiff","p","onMouseWheel","scrollAmount","deltaY","deltaMode","min","usePanZoom","temporaryConnection","hoveringOver","hoveringOverElement","checkConnectionResult","checkConnection","connectionAllowed","ids","connectionsInDanger","element","elementFromPoint","dispatchEvent","PointerEvent","classList","contains","mx","my","onMouseUp","addConnection","useTemporaryConnection","highlightConnections","highlightInterfaces","hideHud","rectangleSelection","selectedNodesCtrlBackup","searchQuery","greyedOutNodes","pressStartTime","editorStyle","unselectAllNodes","appendSelectMultipleNodes","pointersDown","onRightPointerUp","onRightPointerUpCtrl","onRightPointerDownCtrl","onRightPointerDown","clearHighlight","it","ignoredLayers","ignorableLayers","layers","ignoredInterfacesTypes","temp","layer","nodeInterfaces","has","add","ignoredNodesTypes","nodeLayers","visibleNodes","ignoredNodes","ignoredNodesId","visibleConnections","some","t","old","newIds","oldIds","nodesAdded","save","nodesDeleted","added","deleted","connectionsAdded","connectionsDeleted","nodeTitles","matchingNodes","query","isGraphNode","resultTitle","resultType","filterNodes","nonMatchingNodes","defaultSpecification","VUE_APP_SPECIFICATION_PATH","defaultDataflow","VUE_APP_DATAFLOW_PATH","updateMetadata","escapedsearch","location","search","urlParams","URLSearchParams","setting","preview","specText","ret","include","dataflow","specification","warnings","updateEditorSpecification","loadDataflow","messageTitle","onDrop","dataTransfer","dropEffect","files","getAsFile","reader","FileReader","file","result","JSON","parse","SyntaxError","specErrors","graphs","onerror","er","message","readAsText","selectNode","commandHandler","pressedKeys","mouseWheel","changeHoveredConnections","hoveredHtml","htmlEl","hov","removeHighlight","$event","oncontextmenu","webpackEmptyContext","req","Error","code","resolve","module","exports","optionType","updateInterfacePosition","newSide","newSidePosition","swap","oldSidePosition","found","intfToMove","occupiedPositions","proposedPosition","removeNode","unwrapGraph","unwrapSubgraph","PipelineManagerEditor","_hideHud","val","_readonly","allowLoopbacks","nodeIcons","Map","baseURLs","baseIconUrls","layoutManager","LayoutManager","subgraphStack","registerGraph","customGraph","graphNode","error","tmp","maxConnectionsCount","connectionCount","fromTypes","toTypes","prevented","hr","dummyConnection","anchorToAdd","oldNode","newNodeName","oldPosition","newNodeInstance","prototype","hasOwnProperty","call","connectionsToRestore","newConn","internalAddConnection","beforeAddNode","nodeEvents","addTarget","nodeHooks","template","newState","stringify","_nodes","onPlaced","destroy","load","subgraph","nodeErrors","fromIf","findNodeInterface","toIf","connectionToRemove","sizes","HTMLelement","margin","rightmostX","leftmostX","bottommostY","topmostY","removeSelectedNodes","beforeRemoveNode","onDestroy","removeTarget","removeNodeOnly","exposedNames","sameNames","suffix","tmpName","createPipelineManagerGraph","super","currentGraphId","_graph","stackCopy","backFromSubgraph","bind","currentGraphState","dataflowState","recurrentSubgraphSave","graphState","entryGraph","subgraphNode","deepCleanEditor","suppressHistory","cleanEditor","graphName","unregisterGraphs","unregisterGraph","unregisterNodes","nodeKey","unregisterNodeType","registerNodeType","options","beforeRegisterNodeType","nodeInstance","_nodeTypes","set","preventCentering","loadOnly","ir","usedInstances","recurrentSubgraphLoad","fittingTemplate","structuredClone","readonlySetting","usedGraphs","rootGraph","err","loaded","dfs","returnedPath","layoutEngine","activeAlgorithm","applyAutolayout","centerZoom","graphId","g","graphIds","sharedInterface","graphIdIdx","updateExposedInterfaces","static","terminalHeight","navbarHeight","nodePalette","sideBarWidth","paletteRect","editorSize","scalingY","scalingX","translationX","translationY","fullUrls","urlName","addGraphTemplate","beforeAddGraphTemplate","_graphTemplates","graphTemplateEvents","graphTemplateHooks","customGraphNodeType","newInterfaces","instanceName","beforeLoad","out","evaluatedIntf","updateInterfaces","initialize","prepareSubgraphInstance","_title","update","newInputs","newOutputs","currentInterfaces","nodeIntf","container","removeInterface","foundIntf","addInterface","idMap","createNewId","oldId","newId","getNewId","mapNodeInterfaceIds","interfaceStates","mapValues","fn","k","v","CreateCustomGraphNodeType","switchGraph","_switchGraph","computeLayout","updateNodesPosition","newGraph","pop","findInterface","intfId","subgraphNodes","meanX","reduce","sum","meanY","addedNode","subgraphNodeConnections","fromInterface","toInterface","createdConnection","isInSubgraph","resetLocations","updatedGraph","updatedState","updateCurrentSubgraphName","elListeners","longPressFactory","pointerDownAction","pointerUpAction","beforeMount","binding","timeout","newEvent","longPress","moveEvents","pointerdown","setTimeout","arg","pointermove","pointerup","clearTimeout","unmounted","_el","_binding","_ev","longPressToRight","screenX","screenY","relatedTarget"],"sourceRoot":""}