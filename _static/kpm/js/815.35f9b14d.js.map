{"version":3,"file":"js/815.35f9b14d.js","mappings":"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","sources":["webpack://pipeline-manager/./node_modules/ajv/dist/2019.js","webpack://pipeline-manager/./node_modules/ajv/dist/ajv.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/codegen/code.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/codegen/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/codegen/scope.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/errors.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/names.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/ref_error.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/resolve.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/rules.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/util.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/applicability.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/boolSchema.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/dataType.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/defaults.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/keyword.js","webpack://pipeline-manager/./node_modules/ajv/dist/compile/validate/subschema.js","webpack://pipeline-manager/./node_modules/ajv/dist/core.js","webpack://pipeline-manager/./node_modules/ajv/dist/refs/json-schema-2019-09/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/runtime/equal.js","webpack://pipeline-manager/./node_modules/ajv/dist/runtime/ucs2length.js","webpack://pipeline-manager/./node_modules/ajv/dist/runtime/uri.js","webpack://pipeline-manager/./node_modules/ajv/dist/runtime/validation_error.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/additionalItems.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/additionalProperties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/allOf.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/anyOf.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/contains.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/dependencies.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/dependentSchemas.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/if.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/items.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/items2020.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/not.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/oneOf.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/patternProperties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/prefixItems.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/properties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/propertyNames.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/applicator/thenElse.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/code.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/core/id.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/core/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/core/ref.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/discriminator/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/discriminator/types.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/draft7.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/dynamicAnchor.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/dynamicRef.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/recursiveAnchor.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/dynamic/recursiveRef.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/format/format.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/format/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/metadata.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/next.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/unevaluated/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/unevaluated/unevaluatedItems.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/unevaluated/unevaluatedProperties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/const.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/dependentRequired.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/enum.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/index.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitContains.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitItems.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitLength.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitNumber.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/limitProperties.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/multipleOf.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/pattern.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/required.js","webpack://pipeline-manager/./node_modules/ajv/dist/vocabularies/validation/uniqueItems.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingRefError = exports.ValidationError = exports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst dynamic_1 = require(\"./vocabularies/dynamic\");\nconst next_1 = require(\"./vocabularies/next\");\nconst unevaluated_1 = require(\"./vocabularies/unevaluated\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst json_schema_2019_09_1 = require(\"./refs/json-schema-2019-09\");\nconst META_SCHEMA_ID = \"https://json-schema.org/draft/2019-09/schema\";\nclass Ajv2019 extends core_1.default {\n    constructor(opts = {}) {\n        super({\n            ...opts,\n            dynamicRef: true,\n            next: true,\n            unevaluated: true,\n        });\n    }\n    _addVocabularies() {\n        super._addVocabularies();\n        this.addVocabulary(dynamic_1.default);\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        this.addVocabulary(next_1.default);\n        this.addVocabulary(unevaluated_1.default);\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        const { $data, meta } = this.opts;\n        if (!meta)\n            return;\n        json_schema_2019_09_1.default.call(this, $data);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nmodule.exports = exports = Ajv2019;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv2019;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nvar validation_error_1 = require(\"./runtime/validation_error\");\nObject.defineProperty(exports, \"ValidationError\", { enumerable: true, get: function () { return validation_error_1.default; } });\nvar ref_error_1 = require(\"./compile/ref_error\");\nObject.defineProperty(exports, \"MissingRefError\", { enumerable: true, get: function () { return ref_error_1.default; } });\n//# sourceMappingURL=2019.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingRefError = exports.ValidationError = exports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst draft7MetaSchema = require(\"./refs/json-schema-draft-07.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\";\nclass Ajv extends core_1.default {\n    _addVocabularies() {\n        super._addVocabularies();\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        if (!this.opts.meta)\n            return;\n        const metaSchema = this.opts.$data\n            ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n            : draft7MetaSchema;\n        this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nmodule.exports = exports = Ajv;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nvar validation_error_1 = require(\"./runtime/validation_error\");\nObject.defineProperty(exports, \"ValidationError\", { enumerable: true, get: function () { return validation_error_1.default; } });\nvar ref_error_1 = require(\"./compile/ref_error\");\nObject.defineProperty(exports, \"MissingRefError\", { enumerable: true, get: function () { return ref_error_1.default; } });\n//# sourceMappingURL=ajv.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\nclass _CodeOrName {\n}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n    constructor(s) {\n        super();\n        if (!exports.IDENTIFIER.test(s))\n            throw new Error(\"CodeGen: name must be a valid identifier\");\n        this.str = s;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        return false;\n    }\n    get names() {\n        return { [this.str]: 1 };\n    }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n    constructor(code) {\n        super();\n        this._items = typeof code === \"string\" ? [code] : code;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        if (this._items.length > 1)\n            return false;\n        const item = this._items[0];\n        return item === \"\" || item === '\"\"';\n    }\n    get str() {\n        var _a;\n        return ((_a = this._str) !== null && _a !== void 0 ? _a : (this._str = this._items.reduce((s, c) => `${s}${c}`, \"\")));\n    }\n    get names() {\n        var _a;\n        return ((_a = this._names) !== null && _a !== void 0 ? _a : (this._names = this._items.reduce((names, c) => {\n            if (c instanceof Name)\n                names[c.str] = (names[c.str] || 0) + 1;\n            return names;\n        }, {})));\n    }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n    const code = [strs[0]];\n    let i = 0;\n    while (i < args.length) {\n        addCodeArg(code, args[i]);\n        code.push(strs[++i]);\n    }\n    return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n    const expr = [safeStringify(strs[0])];\n    let i = 0;\n    while (i < args.length) {\n        expr.push(plus);\n        addCodeArg(expr, args[i]);\n        expr.push(plus, safeStringify(strs[++i]));\n    }\n    optimize(expr);\n    return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n    if (arg instanceof _Code)\n        code.push(...arg._items);\n    else if (arg instanceof Name)\n        code.push(arg);\n    else\n        code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n    let i = 1;\n    while (i < expr.length - 1) {\n        if (expr[i] === plus) {\n            const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n            if (res !== undefined) {\n                expr.splice(i - 1, 3, res);\n                continue;\n            }\n            expr[i++] = \"+\";\n        }\n        i++;\n    }\n}\nfunction mergeExprItems(a, b) {\n    if (b === '\"\"')\n        return a;\n    if (a === '\"\"')\n        return b;\n    if (typeof a == \"string\") {\n        if (b instanceof Name || a[a.length - 1] !== '\"')\n            return;\n        if (typeof b != \"string\")\n            return `${a.slice(0, -1)}${b}\"`;\n        if (b[0] === '\"')\n            return a.slice(0, -1) + b.slice(1);\n        return;\n    }\n    if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name))\n        return `\"${a}${b.slice(1)}`;\n    return;\n}\nfunction strConcat(c1, c2) {\n    return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str `${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n    return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n        ? x\n        : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n    return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n    return JSON.stringify(x)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n    return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _ `[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n    if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n        return new _Code(`${key}`);\n    }\n    throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n    return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.or = exports.and = exports.not = exports.CodeGen = exports.operators = exports.varKinds = exports.ValueScopeName = exports.ValueScope = exports.Scope = exports.Name = exports.regexpCode = exports.stringify = exports.getProperty = exports.nil = exports.strConcat = exports.str = exports._ = void 0;\nconst code_1 = require(\"./code\");\nconst scope_1 = require(\"./scope\");\nvar code_2 = require(\"./code\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return code_2._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return code_2.str; } });\nObject.defineProperty(exports, \"strConcat\", { enumerable: true, get: function () { return code_2.strConcat; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return code_2.nil; } });\nObject.defineProperty(exports, \"getProperty\", { enumerable: true, get: function () { return code_2.getProperty; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return code_2.stringify; } });\nObject.defineProperty(exports, \"regexpCode\", { enumerable: true, get: function () { return code_2.regexpCode; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return code_2.Name; } });\nvar scope_2 = require(\"./scope\");\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return scope_2.Scope; } });\nObject.defineProperty(exports, \"ValueScope\", { enumerable: true, get: function () { return scope_2.ValueScope; } });\nObject.defineProperty(exports, \"ValueScopeName\", { enumerable: true, get: function () { return scope_2.ValueScopeName; } });\nObject.defineProperty(exports, \"varKinds\", { enumerable: true, get: function () { return scope_2.varKinds; } });\nexports.operators = {\n    GT: new code_1._Code(\">\"),\n    GTE: new code_1._Code(\">=\"),\n    LT: new code_1._Code(\"<\"),\n    LTE: new code_1._Code(\"<=\"),\n    EQ: new code_1._Code(\"===\"),\n    NEQ: new code_1._Code(\"!==\"),\n    NOT: new code_1._Code(\"!\"),\n    OR: new code_1._Code(\"||\"),\n    AND: new code_1._Code(\"&&\"),\n    ADD: new code_1._Code(\"+\"),\n};\nclass Node {\n    optimizeNodes() {\n        return this;\n    }\n    optimizeNames(_names, _constants) {\n        return this;\n    }\n}\nclass Def extends Node {\n    constructor(varKind, name, rhs) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.rhs = rhs;\n    }\n    render({ es5, _n }) {\n        const varKind = es5 ? scope_1.varKinds.var : this.varKind;\n        const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`;\n        return `${varKind} ${this.name}${rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (!names[this.name.str])\n            return;\n        if (this.rhs)\n            this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        return this.rhs instanceof code_1._CodeOrName ? this.rhs.names : {};\n    }\n}\nclass Assign extends Node {\n    constructor(lhs, rhs, sideEffects) {\n        super();\n        this.lhs = lhs;\n        this.rhs = rhs;\n        this.sideEffects = sideEffects;\n    }\n    render({ _n }) {\n        return `${this.lhs} = ${this.rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (this.lhs instanceof code_1.Name && !names[this.lhs.str] && !this.sideEffects)\n            return;\n        this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        const names = this.lhs instanceof code_1.Name ? {} : { ...this.lhs.names };\n        return addExprNames(names, this.rhs);\n    }\n}\nclass AssignOp extends Assign {\n    constructor(lhs, op, rhs, sideEffects) {\n        super(lhs, rhs, sideEffects);\n        this.op = op;\n    }\n    render({ _n }) {\n        return `${this.lhs} ${this.op}= ${this.rhs};` + _n;\n    }\n}\nclass Label extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        return `${this.label}:` + _n;\n    }\n}\nclass Break extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        const label = this.label ? ` ${this.label}` : \"\";\n        return `break${label};` + _n;\n    }\n}\nclass Throw extends Node {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render({ _n }) {\n        return `throw ${this.error};` + _n;\n    }\n    get names() {\n        return this.error.names;\n    }\n}\nclass AnyCode extends Node {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    render({ _n }) {\n        return `${this.code};` + _n;\n    }\n    optimizeNodes() {\n        return `${this.code}` ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        this.code = optimizeExpr(this.code, names, constants);\n        return this;\n    }\n    get names() {\n        return this.code instanceof code_1._CodeOrName ? this.code.names : {};\n    }\n}\nclass ParentNode extends Node {\n    constructor(nodes = []) {\n        super();\n        this.nodes = nodes;\n    }\n    render(opts) {\n        return this.nodes.reduce((code, n) => code + n.render(opts), \"\");\n    }\n    optimizeNodes() {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            const n = nodes[i].optimizeNodes();\n            if (Array.isArray(n))\n                nodes.splice(i, 1, ...n);\n            else if (n)\n                nodes[i] = n;\n            else\n                nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            // iterating backwards improves 1-pass optimization\n            const n = nodes[i];\n            if (n.optimizeNames(names, constants))\n                continue;\n            subtractNames(names, n.names);\n            nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    get names() {\n        return this.nodes.reduce((names, n) => addNames(names, n.names), {});\n    }\n}\nclass BlockNode extends ParentNode {\n    render(opts) {\n        return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n;\n    }\n}\nclass Root extends ParentNode {\n}\nclass Else extends BlockNode {\n}\nElse.kind = \"else\";\nclass If extends BlockNode {\n    constructor(condition, nodes) {\n        super(nodes);\n        this.condition = condition;\n    }\n    render(opts) {\n        let code = `if(${this.condition})` + super.render(opts);\n        if (this.else)\n            code += \"else \" + this.else.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        super.optimizeNodes();\n        const cond = this.condition;\n        if (cond === true)\n            return this.nodes; // else is ignored here\n        let e = this.else;\n        if (e) {\n            const ns = e.optimizeNodes();\n            e = this.else = Array.isArray(ns) ? new Else(ns) : ns;\n        }\n        if (e) {\n            if (cond === false)\n                return e instanceof If ? e : e.nodes;\n            if (this.nodes.length)\n                return this;\n            return new If(not(cond), e instanceof If ? [e] : e.nodes);\n        }\n        if (cond === false || !this.nodes.length)\n            return undefined;\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a;\n        this.else = (_a = this.else) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        if (!(super.optimizeNames(names, constants) || this.else))\n            return;\n        this.condition = optimizeExpr(this.condition, names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        addExprNames(names, this.condition);\n        if (this.else)\n            addNames(names, this.else.names);\n        return names;\n    }\n}\nIf.kind = \"if\";\nclass For extends BlockNode {\n}\nFor.kind = \"for\";\nclass ForLoop extends For {\n    constructor(iteration) {\n        super();\n        this.iteration = iteration;\n    }\n    render(opts) {\n        return `for(${this.iteration})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iteration = optimizeExpr(this.iteration, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iteration.names);\n    }\n}\nclass ForRange extends For {\n    constructor(varKind, name, from, to) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.from = from;\n        this.to = to;\n    }\n    render(opts) {\n        const varKind = opts.es5 ? scope_1.varKinds.var : this.varKind;\n        const { name, from, to } = this;\n        return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts);\n    }\n    get names() {\n        const names = addExprNames(super.names, this.from);\n        return addExprNames(names, this.to);\n    }\n}\nclass ForIter extends For {\n    constructor(loop, varKind, name, iterable) {\n        super();\n        this.loop = loop;\n        this.varKind = varKind;\n        this.name = name;\n        this.iterable = iterable;\n    }\n    render(opts) {\n        return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iterable = optimizeExpr(this.iterable, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iterable.names);\n    }\n}\nclass Func extends BlockNode {\n    constructor(name, args, async) {\n        super();\n        this.name = name;\n        this.args = args;\n        this.async = async;\n    }\n    render(opts) {\n        const _async = this.async ? \"async \" : \"\";\n        return `${_async}function ${this.name}(${this.args})` + super.render(opts);\n    }\n}\nFunc.kind = \"func\";\nclass Return extends ParentNode {\n    render(opts) {\n        return \"return \" + super.render(opts);\n    }\n}\nReturn.kind = \"return\";\nclass Try extends BlockNode {\n    render(opts) {\n        let code = \"try\" + super.render(opts);\n        if (this.catch)\n            code += this.catch.render(opts);\n        if (this.finally)\n            code += this.finally.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        var _a, _b;\n        super.optimizeNodes();\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNodes();\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNodes();\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a, _b;\n        super.optimizeNames(names, constants);\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNames(names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        if (this.catch)\n            addNames(names, this.catch.names);\n        if (this.finally)\n            addNames(names, this.finally.names);\n        return names;\n    }\n}\nclass Catch extends BlockNode {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render(opts) {\n        return `catch(${this.error})` + super.render(opts);\n    }\n}\nCatch.kind = \"catch\";\nclass Finally extends BlockNode {\n    render(opts) {\n        return \"finally\" + super.render(opts);\n    }\n}\nFinally.kind = \"finally\";\nclass CodeGen {\n    constructor(extScope, opts = {}) {\n        this._values = {};\n        this._blockStarts = [];\n        this._constants = {};\n        this.opts = { ...opts, _n: opts.lines ? \"\\n\" : \"\" };\n        this._extScope = extScope;\n        this._scope = new scope_1.Scope({ parent: extScope });\n        this._nodes = [new Root()];\n    }\n    toString() {\n        return this._root.render(this.opts);\n    }\n    // returns unique name in the internal scope\n    name(prefix) {\n        return this._scope.name(prefix);\n    }\n    // reserves unique name in the external scope\n    scopeName(prefix) {\n        return this._extScope.name(prefix);\n    }\n    // reserves unique name in the external scope and assigns value to it\n    scopeValue(prefixOrName, value) {\n        const name = this._extScope.value(prefixOrName, value);\n        const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set());\n        vs.add(name);\n        return name;\n    }\n    getScopeValue(prefix, keyOrRef) {\n        return this._extScope.getValue(prefix, keyOrRef);\n    }\n    // return code that assigns values in the external scope to the names that are used internally\n    // (same names that were returned by gen.scopeName or gen.scopeValue)\n    scopeRefs(scopeName) {\n        return this._extScope.scopeRefs(scopeName, this._values);\n    }\n    scopeCode() {\n        return this._extScope.scopeCode(this._values);\n    }\n    _def(varKind, nameOrPrefix, rhs, constant) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (rhs !== undefined && constant)\n            this._constants[name.str] = rhs;\n        this._leafNode(new Def(varKind, name, rhs));\n        return name;\n    }\n    // `const` declaration (`var` in es5 mode)\n    const(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.const, nameOrPrefix, rhs, _constant);\n    }\n    // `let` declaration with optional assignment (`var` in es5 mode)\n    let(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.let, nameOrPrefix, rhs, _constant);\n    }\n    // `var` declaration with optional assignment\n    var(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.var, nameOrPrefix, rhs, _constant);\n    }\n    // assignment code\n    assign(lhs, rhs, sideEffects) {\n        return this._leafNode(new Assign(lhs, rhs, sideEffects));\n    }\n    // `+=` code\n    add(lhs, rhs) {\n        return this._leafNode(new AssignOp(lhs, exports.operators.ADD, rhs));\n    }\n    // appends passed SafeExpr to code or executes Block\n    code(c) {\n        if (typeof c == \"function\")\n            c();\n        else if (c !== code_1.nil)\n            this._leafNode(new AnyCode(c));\n        return this;\n    }\n    // returns code for object literal for the passed argument list of key-value pairs\n    object(...keyValues) {\n        const code = [\"{\"];\n        for (const [key, value] of keyValues) {\n            if (code.length > 1)\n                code.push(\",\");\n            code.push(key);\n            if (key !== value || this.opts.es5) {\n                code.push(\":\");\n                (0, code_1.addCodeArg)(code, value);\n            }\n        }\n        code.push(\"}\");\n        return new code_1._Code(code);\n    }\n    // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n    if(condition, thenBody, elseBody) {\n        this._blockNode(new If(condition));\n        if (thenBody && elseBody) {\n            this.code(thenBody).else().code(elseBody).endIf();\n        }\n        else if (thenBody) {\n            this.code(thenBody).endIf();\n        }\n        else if (elseBody) {\n            throw new Error('CodeGen: \"else\" body without \"then\" body');\n        }\n        return this;\n    }\n    // `else if` clause - invalid without `if` or after `else` clauses\n    elseIf(condition) {\n        return this._elseNode(new If(condition));\n    }\n    // `else` clause - only valid after `if` or `else if` clauses\n    else() {\n        return this._elseNode(new Else());\n    }\n    // end `if` statement (needed if gen.if was used only with condition)\n    endIf() {\n        return this._endBlockNode(If, Else);\n    }\n    _for(node, forBody) {\n        this._blockNode(node);\n        if (forBody)\n            this.code(forBody).endFor();\n        return this;\n    }\n    // a generic `for` clause (or statement if `forBody` is passed)\n    for(iteration, forBody) {\n        return this._for(new ForLoop(iteration), forBody);\n    }\n    // `for` statement for a range of values\n    forRange(nameOrPrefix, from, to, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.let) {\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForRange(varKind, name, from, to), () => forBody(name));\n    }\n    // `for-of` statement (in es5 mode replace with a normal for loop)\n    forOf(nameOrPrefix, iterable, forBody, varKind = scope_1.varKinds.const) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (this.opts.es5) {\n            const arr = iterable instanceof code_1.Name ? iterable : this.var(\"_arr\", iterable);\n            return this.forRange(\"_i\", 0, (0, code_1._) `${arr}.length`, (i) => {\n                this.var(name, (0, code_1._) `${arr}[${i}]`);\n                forBody(name);\n            });\n        }\n        return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name));\n    }\n    // `for-in` statement.\n    // With option `ownProperties` replaced with a `for-of` loop for object keys\n    forIn(nameOrPrefix, obj, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.const) {\n        if (this.opts.ownProperties) {\n            return this.forOf(nameOrPrefix, (0, code_1._) `Object.keys(${obj})`, forBody);\n        }\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name));\n    }\n    // end `for` loop\n    endFor() {\n        return this._endBlockNode(For);\n    }\n    // `label` statement\n    label(label) {\n        return this._leafNode(new Label(label));\n    }\n    // `break` statement\n    break(label) {\n        return this._leafNode(new Break(label));\n    }\n    // `return` statement\n    return(value) {\n        const node = new Return();\n        this._blockNode(node);\n        this.code(value);\n        if (node.nodes.length !== 1)\n            throw new Error('CodeGen: \"return\" should have one node');\n        return this._endBlockNode(Return);\n    }\n    // `try` statement\n    try(tryBody, catchCode, finallyCode) {\n        if (!catchCode && !finallyCode)\n            throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"');\n        const node = new Try();\n        this._blockNode(node);\n        this.code(tryBody);\n        if (catchCode) {\n            const error = this.name(\"e\");\n            this._currNode = node.catch = new Catch(error);\n            catchCode(error);\n        }\n        if (finallyCode) {\n            this._currNode = node.finally = new Finally();\n            this.code(finallyCode);\n        }\n        return this._endBlockNode(Catch, Finally);\n    }\n    // `throw` statement\n    throw(error) {\n        return this._leafNode(new Throw(error));\n    }\n    // start self-balancing block\n    block(body, nodeCount) {\n        this._blockStarts.push(this._nodes.length);\n        if (body)\n            this.code(body).endBlock(nodeCount);\n        return this;\n    }\n    // end the current self-balancing block\n    endBlock(nodeCount) {\n        const len = this._blockStarts.pop();\n        if (len === undefined)\n            throw new Error(\"CodeGen: not in self-balancing block\");\n        const toClose = this._nodes.length - len;\n        if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n            throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`);\n        }\n        this._nodes.length = len;\n        return this;\n    }\n    // `function` heading (or definition if funcBody is passed)\n    func(name, args = code_1.nil, async, funcBody) {\n        this._blockNode(new Func(name, args, async));\n        if (funcBody)\n            this.code(funcBody).endFunc();\n        return this;\n    }\n    // end function definition\n    endFunc() {\n        return this._endBlockNode(Func);\n    }\n    optimize(n = 1) {\n        while (n-- > 0) {\n            this._root.optimizeNodes();\n            this._root.optimizeNames(this._root.names, this._constants);\n        }\n    }\n    _leafNode(node) {\n        this._currNode.nodes.push(node);\n        return this;\n    }\n    _blockNode(node) {\n        this._currNode.nodes.push(node);\n        this._nodes.push(node);\n    }\n    _endBlockNode(N1, N2) {\n        const n = this._currNode;\n        if (n instanceof N1 || (N2 && n instanceof N2)) {\n            this._nodes.pop();\n            return this;\n        }\n        throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`);\n    }\n    _elseNode(node) {\n        const n = this._currNode;\n        if (!(n instanceof If)) {\n            throw new Error('CodeGen: \"else\" without \"if\"');\n        }\n        this._currNode = n.else = node;\n        return this;\n    }\n    get _root() {\n        return this._nodes[0];\n    }\n    get _currNode() {\n        const ns = this._nodes;\n        return ns[ns.length - 1];\n    }\n    set _currNode(node) {\n        const ns = this._nodes;\n        ns[ns.length - 1] = node;\n    }\n}\nexports.CodeGen = CodeGen;\nfunction addNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) + (from[n] || 0);\n    return names;\n}\nfunction addExprNames(names, from) {\n    return from instanceof code_1._CodeOrName ? addNames(names, from.names) : names;\n}\nfunction optimizeExpr(expr, names, constants) {\n    if (expr instanceof code_1.Name)\n        return replaceName(expr);\n    if (!canOptimize(expr))\n        return expr;\n    return new code_1._Code(expr._items.reduce((items, c) => {\n        if (c instanceof code_1.Name)\n            c = replaceName(c);\n        if (c instanceof code_1._Code)\n            items.push(...c._items);\n        else\n            items.push(c);\n        return items;\n    }, []));\n    function replaceName(n) {\n        const c = constants[n.str];\n        if (c === undefined || names[n.str] !== 1)\n            return n;\n        delete names[n.str];\n        return c;\n    }\n    function canOptimize(e) {\n        return (e instanceof code_1._Code &&\n            e._items.some((c) => c instanceof code_1.Name && names[c.str] === 1 && constants[c.str] !== undefined));\n    }\n}\nfunction subtractNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) - (from[n] || 0);\n}\nfunction not(x) {\n    return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : (0, code_1._) `!${par(x)}`;\n}\nexports.not = not;\nconst andCode = mappend(exports.operators.AND);\n// boolean AND (&&) expression with the passed arguments\nfunction and(...args) {\n    return args.reduce(andCode);\n}\nexports.and = and;\nconst orCode = mappend(exports.operators.OR);\n// boolean OR (||) expression with the passed arguments\nfunction or(...args) {\n    return args.reduce(orCode);\n}\nexports.or = or;\nfunction mappend(op) {\n    return (x, y) => (x === code_1.nil ? y : y === code_1.nil ? x : (0, code_1._) `${par(x)} ${op} ${par(y)}`);\n}\nfunction par(x) {\n    return x instanceof code_1.Name ? x : (0, code_1._) `(${x})`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\nconst code_1 = require(\"./code\");\nclass ValueError extends Error {\n    constructor(name) {\n        super(`CodeGen: \"code\" for ${name} not defined`);\n        this.value = name.value;\n    }\n}\nvar UsedValueState;\n(function (UsedValueState) {\n    UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n    UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState = exports.UsedValueState || (exports.UsedValueState = {}));\nexports.varKinds = {\n    const: new code_1.Name(\"const\"),\n    let: new code_1.Name(\"let\"),\n    var: new code_1.Name(\"var\"),\n};\nclass Scope {\n    constructor({ prefixes, parent } = {}) {\n        this._names = {};\n        this._prefixes = prefixes;\n        this._parent = parent;\n    }\n    toName(nameOrPrefix) {\n        return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n    name(prefix) {\n        return new code_1.Name(this._newName(prefix));\n    }\n    _newName(prefix) {\n        const ng = this._names[prefix] || this._nameGroup(prefix);\n        return `${prefix}${ng.index++}`;\n    }\n    _nameGroup(prefix) {\n        var _a, _b;\n        if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || (this._prefixes && !this._prefixes.has(prefix))) {\n            throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`);\n        }\n        return (this._names[prefix] = { prefix, index: 0 });\n    }\n}\nexports.Scope = Scope;\nclass ValueScopeName extends code_1.Name {\n    constructor(prefix, nameStr) {\n        super(nameStr);\n        this.prefix = prefix;\n    }\n    setValue(value, { property, itemIndex }) {\n        this.value = value;\n        this.scopePath = (0, code_1._) `.${new code_1.Name(property)}[${itemIndex}]`;\n    }\n}\nexports.ValueScopeName = ValueScopeName;\nconst line = (0, code_1._) `\\n`;\nclass ValueScope extends Scope {\n    constructor(opts) {\n        super(opts);\n        this._values = {};\n        this._scope = opts.scope;\n        this.opts = { ...opts, _n: opts.lines ? line : code_1.nil };\n    }\n    get() {\n        return this._scope;\n    }\n    name(prefix) {\n        return new ValueScopeName(prefix, this._newName(prefix));\n    }\n    value(nameOrPrefix, value) {\n        var _a;\n        if (value.ref === undefined)\n            throw new Error(\"CodeGen: ref must be passed in value\");\n        const name = this.toName(nameOrPrefix);\n        const { prefix } = name;\n        const valueKey = (_a = value.key) !== null && _a !== void 0 ? _a : value.ref;\n        let vs = this._values[prefix];\n        if (vs) {\n            const _name = vs.get(valueKey);\n            if (_name)\n                return _name;\n        }\n        else {\n            vs = this._values[prefix] = new Map();\n        }\n        vs.set(valueKey, name);\n        const s = this._scope[prefix] || (this._scope[prefix] = []);\n        const itemIndex = s.length;\n        s[itemIndex] = value.ref;\n        name.setValue(value, { property: prefix, itemIndex });\n        return name;\n    }\n    getValue(prefix, keyOrRef) {\n        const vs = this._values[prefix];\n        if (!vs)\n            return;\n        return vs.get(keyOrRef);\n    }\n    scopeRefs(scopeName, values = this._values) {\n        return this._reduceValues(values, (name) => {\n            if (name.scopePath === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return (0, code_1._) `${scopeName}${name.scopePath}`;\n        });\n    }\n    scopeCode(values = this._values, usedValues, getCode) {\n        return this._reduceValues(values, (name) => {\n            if (name.value === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return name.value.code;\n        }, usedValues, getCode);\n    }\n    _reduceValues(values, valueCode, usedValues = {}, getCode) {\n        let code = code_1.nil;\n        for (const prefix in values) {\n            const vs = values[prefix];\n            if (!vs)\n                continue;\n            const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map());\n            vs.forEach((name) => {\n                if (nameSet.has(name))\n                    return;\n                nameSet.set(name, UsedValueState.Started);\n                let c = valueCode(name);\n                if (c) {\n                    const def = this.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n                    code = (0, code_1._) `${code}${def} ${name} = ${c};${this.opts._n}`;\n                }\n                else if ((c = getCode === null || getCode === void 0 ? void 0 : getCode(name))) {\n                    code = (0, code_1._) `${code}${c}${this.opts._n}`;\n                }\n                else {\n                    throw new ValueError(name);\n                }\n                nameSet.set(name, UsedValueState.Completed);\n            });\n        }\n        return code;\n    }\n}\nexports.ValueScope = ValueScope;\n//# sourceMappingURL=scope.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst util_1 = require(\"./util\");\nconst names_1 = require(\"./names\");\nexports.keywordError = {\n    message: ({ keyword }) => (0, codegen_1.str) `must pass \"${keyword}\" keyword validation`,\n};\nexports.keyword$DataError = {\n    message: ({ keyword, schemaType }) => schemaType\n        ? (0, codegen_1.str) `\"${keyword}\" keyword must be ${schemaType} ($data)`\n        : (0, codegen_1.str) `\"${keyword}\" keyword is invalid ($data)`,\n};\nfunction reportError(cxt, error = exports.keywordError, errorPaths, overrideAllErrors) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : (compositeRule || allErrors)) {\n        addError(gen, errObj);\n    }\n    else {\n        returnErrors(it, (0, codegen_1._) `[${errObj}]`);\n    }\n}\nexports.reportError = reportError;\nfunction reportExtraError(cxt, error = exports.keywordError, errorPaths) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    addError(gen, errObj);\n    if (!(compositeRule || allErrors)) {\n        returnErrors(it, names_1.default.vErrors);\n    }\n}\nexports.reportExtraError = reportExtraError;\nfunction resetErrorsCount(gen, errsCount) {\n    gen.assign(names_1.default.errors, errsCount);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} !== null`, () => gen.if(errsCount, () => gen.assign((0, codegen_1._) `${names_1.default.vErrors}.length`, errsCount), () => gen.assign(names_1.default.vErrors, null)));\n}\nexports.resetErrorsCount = resetErrorsCount;\nfunction extendErrors({ gen, keyword, schemaValue, data, errsCount, it, }) {\n    /* istanbul ignore if */\n    if (errsCount === undefined)\n        throw new Error(\"ajv implementation error\");\n    const err = gen.name(\"err\");\n    gen.forRange(\"i\", errsCount, names_1.default.errors, (i) => {\n        gen.const(err, (0, codegen_1._) `${names_1.default.vErrors}[${i}]`);\n        gen.if((0, codegen_1._) `${err}.instancePath === undefined`, () => gen.assign((0, codegen_1._) `${err}.instancePath`, (0, codegen_1.strConcat)(names_1.default.instancePath, it.errorPath)));\n        gen.assign((0, codegen_1._) `${err}.schemaPath`, (0, codegen_1.str) `${it.errSchemaPath}/${keyword}`);\n        if (it.opts.verbose) {\n            gen.assign((0, codegen_1._) `${err}.schema`, schemaValue);\n            gen.assign((0, codegen_1._) `${err}.data`, data);\n        }\n    });\n}\nexports.extendErrors = extendErrors;\nfunction addError(gen, errObj) {\n    const err = gen.const(\"err\", errObj);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} === null`, () => gen.assign(names_1.default.vErrors, (0, codegen_1._) `[${err}]`), (0, codegen_1._) `${names_1.default.vErrors}.push(${err})`);\n    gen.code((0, codegen_1._) `${names_1.default.errors}++`);\n}\nfunction returnErrors(it, errs) {\n    const { gen, validateName, schemaEnv } = it;\n    if (schemaEnv.$async) {\n        gen.throw((0, codegen_1._) `new ${it.ValidationError}(${errs})`);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, errs);\n        gen.return(false);\n    }\n}\nconst E = {\n    keyword: new codegen_1.Name(\"keyword\"),\n    schemaPath: new codegen_1.Name(\"schemaPath\"),\n    params: new codegen_1.Name(\"params\"),\n    propertyName: new codegen_1.Name(\"propertyName\"),\n    message: new codegen_1.Name(\"message\"),\n    schema: new codegen_1.Name(\"schema\"),\n    parentSchema: new codegen_1.Name(\"parentSchema\"),\n};\nfunction errorObjectCode(cxt, error, errorPaths) {\n    const { createErrors } = cxt.it;\n    if (createErrors === false)\n        return (0, codegen_1._) `{}`;\n    return errorObject(cxt, error, errorPaths);\n}\nfunction errorObject(cxt, error, errorPaths = {}) {\n    const { gen, it } = cxt;\n    const keyValues = [\n        errorInstancePath(it, errorPaths),\n        errorSchemaPath(cxt, errorPaths),\n    ];\n    extraErrorProps(cxt, error, keyValues);\n    return gen.object(...keyValues);\n}\nfunction errorInstancePath({ errorPath }, { instancePath }) {\n    const instPath = instancePath\n        ? (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(instancePath, util_1.Type.Str)}`\n        : errorPath;\n    return [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, instPath)];\n}\nfunction errorSchemaPath({ keyword, it: { errSchemaPath } }, { schemaPath, parentSchema }) {\n    let schPath = parentSchema ? errSchemaPath : (0, codegen_1.str) `${errSchemaPath}/${keyword}`;\n    if (schemaPath) {\n        schPath = (0, codegen_1.str) `${schPath}${(0, util_1.getErrorPath)(schemaPath, util_1.Type.Str)}`;\n    }\n    return [E.schemaPath, schPath];\n}\nfunction extraErrorProps(cxt, { params, message }, keyValues) {\n    const { keyword, data, schemaValue, it } = cxt;\n    const { opts, propertyName, topSchemaRef, schemaPath } = it;\n    keyValues.push([E.keyword, keyword], [E.params, typeof params == \"function\" ? params(cxt) : params || (0, codegen_1._) `{}`]);\n    if (opts.messages) {\n        keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n    }\n    if (opts.verbose) {\n        keyValues.push([E.schema, schemaValue], [E.parentSchema, (0, codegen_1._) `${topSchemaRef}${schemaPath}`], [names_1.default.data, data]);\n    }\n    if (propertyName)\n        keyValues.push([E.propertyName, propertyName]);\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSchema = exports.getCompilingSchema = exports.resolveRef = exports.compileSchema = exports.SchemaEnv = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst validation_error_1 = require(\"../runtime/validation_error\");\nconst names_1 = require(\"./names\");\nconst resolve_1 = require(\"./resolve\");\nconst util_1 = require(\"./util\");\nconst validate_1 = require(\"./validate\");\nclass SchemaEnv {\n    constructor(env) {\n        var _a;\n        this.refs = {};\n        this.dynamicAnchors = {};\n        let schema;\n        if (typeof env.schema == \"object\")\n            schema = env.schema;\n        this.schema = env.schema;\n        this.schemaId = env.schemaId;\n        this.root = env.root || this;\n        this.baseId = (_a = env.baseId) !== null && _a !== void 0 ? _a : (0, resolve_1.normalizeId)(schema === null || schema === void 0 ? void 0 : schema[env.schemaId || \"$id\"]);\n        this.schemaPath = env.schemaPath;\n        this.localRefs = env.localRefs;\n        this.meta = env.meta;\n        this.$async = schema === null || schema === void 0 ? void 0 : schema.$async;\n        this.refs = {};\n    }\n}\nexports.SchemaEnv = SchemaEnv;\n// let codeSize = 0\n// let nodeCount = 0\n// Compiles schema in SchemaEnv\nfunction compileSchema(sch) {\n    // TODO refactor - remove compilations\n    const _sch = getCompilingSchema.call(this, sch);\n    if (_sch)\n        return _sch;\n    const rootId = (0, resolve_1.getFullPath)(this.opts.uriResolver, sch.root.baseId); // TODO if getFullPath removed 1 tests fails\n    const { es5, lines } = this.opts.code;\n    const { ownProperties } = this.opts;\n    const gen = new codegen_1.CodeGen(this.scope, { es5, lines, ownProperties });\n    let _ValidationError;\n    if (sch.$async) {\n        _ValidationError = gen.scopeValue(\"Error\", {\n            ref: validation_error_1.default,\n            code: (0, codegen_1._) `require(\"ajv/dist/runtime/validation_error\").default`,\n        });\n    }\n    const validateName = gen.scopeName(\"validate\");\n    sch.validateName = validateName;\n    const schemaCxt = {\n        gen,\n        allErrors: this.opts.allErrors,\n        data: names_1.default.data,\n        parentData: names_1.default.parentData,\n        parentDataProperty: names_1.default.parentDataProperty,\n        dataNames: [names_1.default.data],\n        dataPathArr: [codegen_1.nil],\n        dataLevel: 0,\n        dataTypes: [],\n        definedProperties: new Set(),\n        topSchemaRef: gen.scopeValue(\"schema\", this.opts.code.source === true\n            ? { ref: sch.schema, code: (0, codegen_1.stringify)(sch.schema) }\n            : { ref: sch.schema }),\n        validateName,\n        ValidationError: _ValidationError,\n        schema: sch.schema,\n        schemaEnv: sch,\n        rootId,\n        baseId: sch.baseId || rootId,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n        errorPath: (0, codegen_1._) `\"\"`,\n        opts: this.opts,\n        self: this,\n    };\n    let sourceCode;\n    try {\n        this._compilations.add(sch);\n        (0, validate_1.validateFunctionCode)(schemaCxt);\n        gen.optimize(this.opts.code.optimize);\n        // gen.optimize(1)\n        const validateCode = gen.toString();\n        sourceCode = `${gen.scopeRefs(names_1.default.scope)}return ${validateCode}`;\n        // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n        if (this.opts.code.process)\n            sourceCode = this.opts.code.process(sourceCode, sch);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n        const makeValidate = new Function(`${names_1.default.self}`, `${names_1.default.scope}`, sourceCode);\n        const validate = makeValidate(this, this.scope.get());\n        this.scope.value(validateName, { ref: validate });\n        validate.errors = null;\n        validate.schema = sch.schema;\n        validate.schemaEnv = sch;\n        if (sch.$async)\n            validate.$async = true;\n        if (this.opts.code.source === true) {\n            validate.source = { validateName, validateCode, scopeValues: gen._values };\n        }\n        if (this.opts.unevaluated) {\n            const { props, items } = schemaCxt;\n            validate.evaluated = {\n                props: props instanceof codegen_1.Name ? undefined : props,\n                items: items instanceof codegen_1.Name ? undefined : items,\n                dynamicProps: props instanceof codegen_1.Name,\n                dynamicItems: items instanceof codegen_1.Name,\n            };\n            if (validate.source)\n                validate.source.evaluated = (0, codegen_1.stringify)(validate.evaluated);\n        }\n        sch.validate = validate;\n        return sch;\n    }\n    catch (e) {\n        delete sch.validate;\n        delete sch.validateName;\n        if (sourceCode)\n            this.logger.error(\"Error compiling schema, function code:\", sourceCode);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n        throw e;\n    }\n    finally {\n        this._compilations.delete(sch);\n    }\n}\nexports.compileSchema = compileSchema;\nfunction resolveRef(root, baseId, ref) {\n    var _a;\n    ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, ref);\n    const schOrFunc = root.refs[ref];\n    if (schOrFunc)\n        return schOrFunc;\n    let _sch = resolve.call(this, root, ref);\n    if (_sch === undefined) {\n        const schema = (_a = root.localRefs) === null || _a === void 0 ? void 0 : _a[ref]; // TODO maybe localRefs should hold SchemaEnv\n        const { schemaId } = this.opts;\n        if (schema)\n            _sch = new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    if (_sch === undefined)\n        return;\n    return (root.refs[ref] = inlineOrCompile.call(this, _sch));\n}\nexports.resolveRef = resolveRef;\nfunction inlineOrCompile(sch) {\n    if ((0, resolve_1.inlineRef)(sch.schema, this.opts.inlineRefs))\n        return sch.schema;\n    return sch.validate ? sch : compileSchema.call(this, sch);\n}\n// Index of schema compilation in the currently compiled list\nfunction getCompilingSchema(schEnv) {\n    for (const sch of this._compilations) {\n        if (sameSchemaEnv(sch, schEnv))\n            return sch;\n    }\n}\nexports.getCompilingSchema = getCompilingSchema;\nfunction sameSchemaEnv(s1, s2) {\n    return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId;\n}\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(root, // information about the root schema for the current schema\nref // reference to resolve\n) {\n    let sch;\n    while (typeof (sch = this.refs[ref]) == \"string\")\n        ref = sch;\n    return sch || this.schemas[ref] || resolveSchema.call(this, root, ref);\n}\n// Resolve schema, its root and baseId\nfunction resolveSchema(root, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\nref // reference to resolve\n) {\n    const p = this.opts.uriResolver.parse(ref);\n    const refPath = (0, resolve_1._getFullPath)(this.opts.uriResolver, p);\n    let baseId = (0, resolve_1.getFullPath)(this.opts.uriResolver, root.baseId, undefined);\n    // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n    if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n        return getJsonPointer.call(this, p, root);\n    }\n    const id = (0, resolve_1.normalizeId)(refPath);\n    const schOrRef = this.refs[id] || this.schemas[id];\n    if (typeof schOrRef == \"string\") {\n        const sch = resolveSchema.call(this, root, schOrRef);\n        if (typeof (sch === null || sch === void 0 ? void 0 : sch.schema) !== \"object\")\n            return;\n        return getJsonPointer.call(this, p, sch);\n    }\n    if (typeof (schOrRef === null || schOrRef === void 0 ? void 0 : schOrRef.schema) !== \"object\")\n        return;\n    if (!schOrRef.validate)\n        compileSchema.call(this, schOrRef);\n    if (id === (0, resolve_1.normalizeId)(ref)) {\n        const { schema } = schOrRef;\n        const { schemaId } = this.opts;\n        const schId = schema[schemaId];\n        if (schId)\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        return new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    return getJsonPointer.call(this, p, schOrRef);\n}\nexports.resolveSchema = resolveSchema;\nconst PREVENT_SCOPE_CHANGE = new Set([\n    \"properties\",\n    \"patternProperties\",\n    \"enum\",\n    \"dependencies\",\n    \"definitions\",\n]);\nfunction getJsonPointer(parsedRef, { baseId, schema, root }) {\n    var _a;\n    if (((_a = parsedRef.fragment) === null || _a === void 0 ? void 0 : _a[0]) !== \"/\")\n        return;\n    for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n        if (typeof schema === \"boolean\")\n            return;\n        const partSchema = schema[(0, util_1.unescapeFragment)(part)];\n        if (partSchema === undefined)\n            return;\n        schema = partSchema;\n        // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n        const schId = typeof schema === \"object\" && schema[this.opts.schemaId];\n        if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        }\n    }\n    let env;\n    if (typeof schema != \"boolean\" && schema.$ref && !(0, util_1.schemaHasRulesButRef)(schema, this.RULES)) {\n        const $ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schema.$ref);\n        env = resolveSchema.call(this, root, $ref);\n    }\n    // even though resolution failed we need to return SchemaEnv to throw exception\n    // so that compileAsync loads missing schema.\n    const { schemaId } = this.opts;\n    env = env || new SchemaEnv({ schema, schemaId, root, baseId });\n    if (env.schema !== env.root.schema)\n        return env;\n    return undefined;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"./codegen\");\nconst names = {\n    // validation function arguments\n    data: new codegen_1.Name(\"data\"),\n    // args passed from referencing schema\n    valCxt: new codegen_1.Name(\"valCxt\"),\n    instancePath: new codegen_1.Name(\"instancePath\"),\n    parentData: new codegen_1.Name(\"parentData\"),\n    parentDataProperty: new codegen_1.Name(\"parentDataProperty\"),\n    rootData: new codegen_1.Name(\"rootData\"),\n    dynamicAnchors: new codegen_1.Name(\"dynamicAnchors\"),\n    // function scoped variables\n    vErrors: new codegen_1.Name(\"vErrors\"),\n    errors: new codegen_1.Name(\"errors\"),\n    this: new codegen_1.Name(\"this\"),\n    // \"globals\"\n    self: new codegen_1.Name(\"self\"),\n    scope: new codegen_1.Name(\"scope\"),\n    // JTD serialize/parse name for JSON string and position\n    json: new codegen_1.Name(\"json\"),\n    jsonPos: new codegen_1.Name(\"jsonPos\"),\n    jsonLen: new codegen_1.Name(\"jsonLen\"),\n    jsonPart: new codegen_1.Name(\"jsonPart\"),\n};\nexports.default = names;\n//# sourceMappingURL=names.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(resolver, baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n//# sourceMappingURL=ref_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaRefs = exports.resolveUrl = exports.normalizeId = exports._getFullPath = exports.getFullPath = exports.inlineRef = void 0;\nconst util_1 = require(\"./util\");\nconst equal = require(\"fast-deep-equal\");\nconst traverse = require(\"json-schema-traverse\");\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n    \"type\",\n    \"format\",\n    \"pattern\",\n    \"maxLength\",\n    \"minLength\",\n    \"maxProperties\",\n    \"minProperties\",\n    \"maxItems\",\n    \"minItems\",\n    \"maximum\",\n    \"minimum\",\n    \"uniqueItems\",\n    \"multipleOf\",\n    \"required\",\n    \"enum\",\n    \"const\",\n]);\nfunction inlineRef(schema, limit = true) {\n    if (typeof schema == \"boolean\")\n        return true;\n    if (limit === true)\n        return !hasRef(schema);\n    if (!limit)\n        return false;\n    return countKeys(schema) <= limit;\n}\nexports.inlineRef = inlineRef;\nconst REF_KEYWORDS = new Set([\n    \"$ref\",\n    \"$recursiveRef\",\n    \"$recursiveAnchor\",\n    \"$dynamicRef\",\n    \"$dynamicAnchor\",\n]);\nfunction hasRef(schema) {\n    for (const key in schema) {\n        if (REF_KEYWORDS.has(key))\n            return true;\n        const sch = schema[key];\n        if (Array.isArray(sch) && sch.some(hasRef))\n            return true;\n        if (typeof sch == \"object\" && hasRef(sch))\n            return true;\n    }\n    return false;\n}\nfunction countKeys(schema) {\n    let count = 0;\n    for (const key in schema) {\n        if (key === \"$ref\")\n            return Infinity;\n        count++;\n        if (SIMPLE_INLINED.has(key))\n            continue;\n        if (typeof schema[key] == \"object\") {\n            (0, util_1.eachItem)(schema[key], (sch) => (count += countKeys(sch)));\n        }\n        if (count === Infinity)\n            return Infinity;\n    }\n    return count;\n}\nfunction getFullPath(resolver, id = \"\", normalize) {\n    if (normalize !== false)\n        id = normalizeId(id);\n    const p = resolver.parse(id);\n    return _getFullPath(resolver, p);\n}\nexports.getFullPath = getFullPath;\nfunction _getFullPath(resolver, p) {\n    const serialized = resolver.serialize(p);\n    return serialized.split(\"#\")[0] + \"#\";\n}\nexports._getFullPath = _getFullPath;\nconst TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n    return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\";\n}\nexports.normalizeId = normalizeId;\nfunction resolveUrl(resolver, baseId, id) {\n    id = normalizeId(id);\n    return resolver.resolve(baseId, id);\n}\nexports.resolveUrl = resolveUrl;\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i;\nfunction getSchemaRefs(schema, baseId) {\n    if (typeof schema == \"boolean\")\n        return {};\n    const { schemaId, uriResolver } = this.opts;\n    const schId = normalizeId(schema[schemaId] || baseId);\n    const baseIds = { \"\": schId };\n    const pathPrefix = getFullPath(uriResolver, schId, false);\n    const localRefs = {};\n    const schemaRefs = new Set();\n    traverse(schema, { allKeys: true }, (sch, jsonPtr, _, parentJsonPtr) => {\n        if (parentJsonPtr === undefined)\n            return;\n        const fullPath = pathPrefix + jsonPtr;\n        let baseId = baseIds[parentJsonPtr];\n        if (typeof sch[schemaId] == \"string\")\n            baseId = addRef.call(this, sch[schemaId]);\n        addAnchor.call(this, sch.$anchor);\n        addAnchor.call(this, sch.$dynamicAnchor);\n        baseIds[jsonPtr] = baseId;\n        function addRef(ref) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            const _resolve = this.opts.uriResolver.resolve;\n            ref = normalizeId(baseId ? _resolve(baseId, ref) : ref);\n            if (schemaRefs.has(ref))\n                throw ambiguos(ref);\n            schemaRefs.add(ref);\n            let schOrRef = this.refs[ref];\n            if (typeof schOrRef == \"string\")\n                schOrRef = this.refs[schOrRef];\n            if (typeof schOrRef == \"object\") {\n                checkAmbiguosRef(sch, schOrRef.schema, ref);\n            }\n            else if (ref !== normalizeId(fullPath)) {\n                if (ref[0] === \"#\") {\n                    checkAmbiguosRef(sch, localRefs[ref], ref);\n                    localRefs[ref] = sch;\n                }\n                else {\n                    this.refs[ref] = fullPath;\n                }\n            }\n            return ref;\n        }\n        function addAnchor(anchor) {\n            if (typeof anchor == \"string\") {\n                if (!ANCHOR.test(anchor))\n                    throw new Error(`invalid anchor \"${anchor}\"`);\n                addRef.call(this, `#${anchor}`);\n            }\n        }\n    });\n    return localRefs;\n    function checkAmbiguosRef(sch1, sch2, ref) {\n        if (sch2 !== undefined && !equal(sch1, sch2))\n            throw ambiguos(ref);\n    }\n    function ambiguos(ref) {\n        return new Error(`reference \"${ref}\" resolves to more than one schema`);\n    }\n}\nexports.getSchemaRefs = getSchemaRefs;\n//# sourceMappingURL=resolve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n//# sourceMappingURL=rules.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldUseRule = exports.shouldUseGroup = exports.schemaHasRulesForType = void 0;\nfunction schemaHasRulesForType({ schema, self }, type) {\n    const group = self.RULES.types[type];\n    return group && group !== true && shouldUseGroup(schema, group);\n}\nexports.schemaHasRulesForType = schemaHasRulesForType;\nfunction shouldUseGroup(schema, group) {\n    return group.rules.some((rule) => shouldUseRule(schema, rule));\n}\nexports.shouldUseGroup = shouldUseGroup;\nfunction shouldUseRule(schema, rule) {\n    var _a;\n    return (schema[rule.keyword] !== undefined ||\n        ((_a = rule.definition.implements) === null || _a === void 0 ? void 0 : _a.some((kwd) => schema[kwd] !== undefined)));\n}\nexports.shouldUseRule = shouldUseRule;\n//# sourceMappingURL=applicability.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolOrEmptySchema = exports.topBoolOrEmptySchema = void 0;\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst boolError = {\n    message: \"boolean schema is false\",\n};\nfunction topBoolOrEmptySchema(it) {\n    const { gen, schema, validateName } = it;\n    if (schema === false) {\n        falseSchemaError(it, false);\n    }\n    else if (typeof schema == \"object\" && schema.$async === true) {\n        gen.return(names_1.default.data);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, null);\n        gen.return(true);\n    }\n}\nexports.topBoolOrEmptySchema = topBoolOrEmptySchema;\nfunction boolOrEmptySchema(it, valid) {\n    const { gen, schema } = it;\n    if (schema === false) {\n        gen.var(valid, false); // TODO var\n        falseSchemaError(it);\n    }\n    else {\n        gen.var(valid, true); // TODO var\n    }\n}\nexports.boolOrEmptySchema = boolOrEmptySchema;\nfunction falseSchemaError(it, overrideAllErrors) {\n    const { gen, data } = it;\n    // TODO maybe some other interface should be used for non-keyword validation errors...\n    const cxt = {\n        gen,\n        keyword: \"false schema\",\n        data,\n        schema: false,\n        schemaCode: false,\n        schemaValue: false,\n        params: {},\n        it,\n    };\n    (0, errors_1.reportError)(cxt, boolError, undefined, overrideAllErrors);\n}\n//# sourceMappingURL=boolSchema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getData = exports.KeywordCxt = exports.validateFunctionCode = void 0;\nconst boolSchema_1 = require(\"./boolSchema\");\nconst dataType_1 = require(\"./dataType\");\nconst applicability_1 = require(\"./applicability\");\nconst dataType_2 = require(\"./dataType\");\nconst defaults_1 = require(\"./defaults\");\nconst keyword_1 = require(\"./keyword\");\nconst subschema_1 = require(\"./subschema\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst resolve_1 = require(\"../resolve\");\nconst util_1 = require(\"../util\");\nconst errors_1 = require(\"../errors\");\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nfunction validateFunctionCode(it) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            topSchemaObjCode(it);\n            return;\n        }\n    }\n    validateFunction(it, () => (0, boolSchema_1.topBoolOrEmptySchema)(it));\n}\nexports.validateFunctionCode = validateFunctionCode;\nfunction validateFunction({ gen, validateName, schema, schemaEnv, opts }, body) {\n    if (opts.code.es5) {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${names_1.default.valCxt}`, schemaEnv.$async, () => {\n            gen.code((0, codegen_1._) `\"use strict\"; ${funcSourceUrl(schema, opts)}`);\n            destructureValCxtES5(gen, opts);\n            gen.code(body);\n        });\n    }\n    else {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () => gen.code(funcSourceUrl(schema, opts)).code(body));\n    }\n}\nfunction destructureValCxt(opts) {\n    return (0, codegen_1._) `{${names_1.default.instancePath}=\"\", ${names_1.default.parentData}, ${names_1.default.parentDataProperty}, ${names_1.default.rootData}=${names_1.default.data}${opts.dynamicRef ? (0, codegen_1._) `, ${names_1.default.dynamicAnchors}={}` : codegen_1.nil}}={}`;\n}\nfunction destructureValCxtES5(gen, opts) {\n    gen.if(names_1.default.valCxt, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.instancePath}`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentData}`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentDataProperty}`);\n        gen.var(names_1.default.rootData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.rootData}`);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.dynamicAnchors}`);\n    }, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `\"\"`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.rootData, names_1.default.data);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `{}`);\n    });\n}\nfunction topSchemaObjCode(it) {\n    const { schema, opts, gen } = it;\n    validateFunction(it, () => {\n        if (opts.$comment && schema.$comment)\n            commentKeyword(it);\n        checkNoDefault(it);\n        gen.let(names_1.default.vErrors, null);\n        gen.let(names_1.default.errors, 0);\n        if (opts.unevaluated)\n            resetEvaluated(it);\n        typeAndKeywords(it);\n        returnResults(it);\n    });\n    return;\n}\nfunction resetEvaluated(it) {\n    // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n    const { gen, validateName } = it;\n    it.evaluated = gen.const(\"evaluated\", (0, codegen_1._) `${validateName}.evaluated`);\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicProps`, () => gen.assign((0, codegen_1._) `${it.evaluated}.props`, (0, codegen_1._) `undefined`));\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicItems`, () => gen.assign((0, codegen_1._) `${it.evaluated}.items`, (0, codegen_1._) `undefined`));\n}\nfunction funcSourceUrl(schema, opts) {\n    const schId = typeof schema == \"object\" && schema[opts.schemaId];\n    return schId && (opts.code.source || opts.code.process) ? (0, codegen_1._) `/*# sourceURL=${schId} */` : codegen_1.nil;\n}\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it, valid) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            subSchemaObjCode(it, valid);\n            return;\n        }\n    }\n    (0, boolSchema_1.boolOrEmptySchema)(it, valid);\n}\nfunction schemaCxtHasRules({ schema, self }) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (self.RULES.all[key])\n            return true;\n    return false;\n}\nfunction isSchemaObj(it) {\n    return typeof it.schema != \"boolean\";\n}\nfunction subSchemaObjCode(it, valid) {\n    const { schema, gen, opts } = it;\n    if (opts.$comment && schema.$comment)\n        commentKeyword(it);\n    updateContext(it);\n    checkAsyncSchema(it);\n    const errsCount = gen.const(\"_errs\", names_1.default.errors);\n    typeAndKeywords(it, errsCount);\n    // TODO var\n    gen.var(valid, (0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n}\nfunction checkKeywords(it) {\n    (0, util_1.checkUnknownRules)(it);\n    checkRefsAndKeywords(it);\n}\nfunction typeAndKeywords(it, errsCount) {\n    if (it.opts.jtd)\n        return schemaKeywords(it, [], false, errsCount);\n    const types = (0, dataType_1.getSchemaTypes)(it.schema);\n    const checkedTypes = (0, dataType_1.coerceAndCheckDataType)(it, types);\n    schemaKeywords(it, types, !checkedTypes, errsCount);\n}\nfunction checkRefsAndKeywords(it) {\n    const { schema, errSchemaPath, opts, self } = it;\n    if (schema.$ref && opts.ignoreKeywordsWithRef && (0, util_1.schemaHasRulesButRef)(schema, self.RULES)) {\n        self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`);\n    }\n}\nfunction checkNoDefault(it) {\n    const { schema, opts } = it;\n    if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n        (0, util_1.checkStrictMode)(it, \"default is ignored in the schema root\");\n    }\n}\nfunction updateContext(it) {\n    const schId = it.schema[it.opts.schemaId];\n    if (schId)\n        it.baseId = (0, resolve_1.resolveUrl)(it.opts.uriResolver, it.baseId, schId);\n}\nfunction checkAsyncSchema(it) {\n    if (it.schema.$async && !it.schemaEnv.$async)\n        throw new Error(\"async schema in sync schema\");\n}\nfunction commentKeyword({ gen, schemaEnv, schema, errSchemaPath, opts }) {\n    const msg = schema.$comment;\n    if (opts.$comment === true) {\n        gen.code((0, codegen_1._) `${names_1.default.self}.logger.log(${msg})`);\n    }\n    else if (typeof opts.$comment == \"function\") {\n        const schemaPath = (0, codegen_1.str) `${errSchemaPath}/$comment`;\n        const rootName = gen.scopeValue(\"root\", { ref: schemaEnv.root });\n        gen.code((0, codegen_1._) `${names_1.default.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`);\n    }\n}\nfunction returnResults(it) {\n    const { gen, schemaEnv, validateName, ValidationError, opts } = it;\n    if (schemaEnv.$async) {\n        // TODO assign unevaluated\n        gen.if((0, codegen_1._) `${names_1.default.errors} === 0`, () => gen.return(names_1.default.data), () => gen.throw((0, codegen_1._) `new ${ValidationError}(${names_1.default.vErrors})`));\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, names_1.default.vErrors);\n        if (opts.unevaluated)\n            assignEvaluated(it);\n        gen.return((0, codegen_1._) `${names_1.default.errors} === 0`);\n    }\n}\nfunction assignEvaluated({ gen, evaluated, props, items }) {\n    if (props instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.props`, props);\n    if (items instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.items`, items);\n}\nfunction schemaKeywords(it, types, typeErrors, errsCount) {\n    const { gen, schema, data, allErrors, opts, self } = it;\n    const { RULES } = self;\n    if (schema.$ref && (opts.ignoreKeywordsWithRef || !(0, util_1.schemaHasRulesButRef)(schema, RULES))) {\n        gen.block(() => keywordCode(it, \"$ref\", RULES.all.$ref.definition)); // TODO typecast\n        return;\n    }\n    if (!opts.jtd)\n        checkStrictTypes(it, types);\n    gen.block(() => {\n        for (const group of RULES.rules)\n            groupKeywords(group);\n        groupKeywords(RULES.post);\n    });\n    function groupKeywords(group) {\n        if (!(0, applicability_1.shouldUseGroup)(schema, group))\n            return;\n        if (group.type) {\n            gen.if((0, dataType_2.checkDataType)(group.type, data, opts.strictNumbers));\n            iterateKeywords(it, group);\n            if (types.length === 1 && types[0] === group.type && typeErrors) {\n                gen.else();\n                (0, dataType_2.reportTypeError)(it);\n            }\n            gen.endIf();\n        }\n        else {\n            iterateKeywords(it, group);\n        }\n        // TODO make it \"ok\" call?\n        if (!allErrors)\n            gen.if((0, codegen_1._) `${names_1.default.errors} === ${errsCount || 0}`);\n    }\n}\nfunction iterateKeywords(it, group) {\n    const { gen, schema, opts: { useDefaults }, } = it;\n    if (useDefaults)\n        (0, defaults_1.assignDefaults)(it, group.type);\n    gen.block(() => {\n        for (const rule of group.rules) {\n            if ((0, applicability_1.shouldUseRule)(schema, rule)) {\n                keywordCode(it, rule.keyword, rule.definition, group.type);\n            }\n        }\n    });\n}\nfunction checkStrictTypes(it, types) {\n    if (it.schemaEnv.meta || !it.opts.strictTypes)\n        return;\n    checkContextTypes(it, types);\n    if (!it.opts.allowUnionTypes)\n        checkMultipleTypes(it, types);\n    checkKeywordTypes(it, it.dataTypes);\n}\nfunction checkContextTypes(it, types) {\n    if (!types.length)\n        return;\n    if (!it.dataTypes.length) {\n        it.dataTypes = types;\n        return;\n    }\n    types.forEach((t) => {\n        if (!includesType(it.dataTypes, t)) {\n            strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`);\n        }\n    });\n    narrowSchemaTypes(it, types);\n}\nfunction checkMultipleTypes(it, ts) {\n    if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n        strictTypesError(it, \"use allowUnionTypes to allow union type keyword\");\n    }\n}\nfunction checkKeywordTypes(it, ts) {\n    const rules = it.self.RULES.all;\n    for (const keyword in rules) {\n        const rule = rules[keyword];\n        if (typeof rule == \"object\" && (0, applicability_1.shouldUseRule)(it.schema, rule)) {\n            const { type } = rule.definition;\n            if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n                strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`);\n            }\n        }\n    }\n}\nfunction hasApplicableType(schTs, kwdT) {\n    return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"));\n}\nfunction includesType(ts, t) {\n    return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"));\n}\nfunction narrowSchemaTypes(it, withTypes) {\n    const ts = [];\n    for (const t of it.dataTypes) {\n        if (includesType(withTypes, t))\n            ts.push(t);\n        else if (withTypes.includes(\"integer\") && t === \"number\")\n            ts.push(\"integer\");\n    }\n    it.dataTypes = ts;\n}\nfunction strictTypesError(it, msg) {\n    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n    msg += ` at \"${schemaPath}\" (strictTypes)`;\n    (0, util_1.checkStrictMode)(it, msg, it.opts.strictTypes);\n}\nclass KeywordCxt {\n    constructor(it, def, keyword) {\n        (0, keyword_1.validateKeywordUsage)(it, def, keyword);\n        this.gen = it.gen;\n        this.allErrors = it.allErrors;\n        this.keyword = keyword;\n        this.data = it.data;\n        this.schema = it.schema[keyword];\n        this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data;\n        this.schemaValue = (0, util_1.schemaRefOrVal)(it, this.schema, keyword, this.$data);\n        this.schemaType = def.schemaType;\n        this.parentSchema = it.schema;\n        this.params = {};\n        this.it = it;\n        this.def = def;\n        if (this.$data) {\n            this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it));\n        }\n        else {\n            this.schemaCode = this.schemaValue;\n            if (!(0, keyword_1.validSchemaType)(this.schema, def.schemaType, def.allowUndefined)) {\n                throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`);\n            }\n        }\n        if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n            this.errsCount = it.gen.const(\"_errs\", names_1.default.errors);\n        }\n    }\n    result(condition, successAction, failAction) {\n        this.failResult((0, codegen_1.not)(condition), successAction, failAction);\n    }\n    failResult(condition, successAction, failAction) {\n        this.gen.if(condition);\n        if (failAction)\n            failAction();\n        else\n            this.error();\n        if (successAction) {\n            this.gen.else();\n            successAction();\n            if (this.allErrors)\n                this.gen.endIf();\n        }\n        else {\n            if (this.allErrors)\n                this.gen.endIf();\n            else\n                this.gen.else();\n        }\n    }\n    pass(condition, failAction) {\n        this.failResult((0, codegen_1.not)(condition), undefined, failAction);\n    }\n    fail(condition) {\n        if (condition === undefined) {\n            this.error();\n            if (!this.allErrors)\n                this.gen.if(false); // this branch will be removed by gen.optimize\n            return;\n        }\n        this.gen.if(condition);\n        this.error();\n        if (this.allErrors)\n            this.gen.endIf();\n        else\n            this.gen.else();\n    }\n    fail$data(condition) {\n        if (!this.$data)\n            return this.fail(condition);\n        const { schemaCode } = this;\n        this.fail((0, codegen_1._) `${schemaCode} !== undefined && (${(0, codegen_1.or)(this.invalid$data(), condition)})`);\n    }\n    error(append, errorParams, errorPaths) {\n        if (errorParams) {\n            this.setParams(errorParams);\n            this._error(append, errorPaths);\n            this.setParams({});\n            return;\n        }\n        this._error(append, errorPaths);\n    }\n    _error(append, errorPaths) {\n        ;\n        (append ? errors_1.reportExtraError : errors_1.reportError)(this, this.def.error, errorPaths);\n    }\n    $dataError() {\n        (0, errors_1.reportError)(this, this.def.$dataError || errors_1.keyword$DataError);\n    }\n    reset() {\n        if (this.errsCount === undefined)\n            throw new Error('add \"trackErrors\" to keyword definition');\n        (0, errors_1.resetErrorsCount)(this.gen, this.errsCount);\n    }\n    ok(cond) {\n        if (!this.allErrors)\n            this.gen.if(cond);\n    }\n    setParams(obj, assign) {\n        if (assign)\n            Object.assign(this.params, obj);\n        else\n            this.params = obj;\n    }\n    block$data(valid, codeBlock, $dataValid = codegen_1.nil) {\n        this.gen.block(() => {\n            this.check$data(valid, $dataValid);\n            codeBlock();\n        });\n    }\n    check$data(valid = codegen_1.nil, $dataValid = codegen_1.nil) {\n        if (!this.$data)\n            return;\n        const { gen, schemaCode, schemaType, def } = this;\n        gen.if((0, codegen_1.or)((0, codegen_1._) `${schemaCode} === undefined`, $dataValid));\n        if (valid !== codegen_1.nil)\n            gen.assign(valid, true);\n        if (schemaType.length || def.validateSchema) {\n            gen.elseIf(this.invalid$data());\n            this.$dataError();\n            if (valid !== codegen_1.nil)\n                gen.assign(valid, false);\n        }\n        gen.else();\n    }\n    invalid$data() {\n        const { gen, schemaCode, schemaType, def, it } = this;\n        return (0, codegen_1.or)(wrong$DataType(), invalid$DataSchema());\n        function wrong$DataType() {\n            if (schemaType.length) {\n                /* istanbul ignore if */\n                if (!(schemaCode instanceof codegen_1.Name))\n                    throw new Error(\"ajv implementation error\");\n                const st = Array.isArray(schemaType) ? schemaType : [schemaType];\n                return (0, codegen_1._) `${(0, dataType_2.checkDataTypes)(st, schemaCode, it.opts.strictNumbers, dataType_2.DataType.Wrong)}`;\n            }\n            return codegen_1.nil;\n        }\n        function invalid$DataSchema() {\n            if (def.validateSchema) {\n                const validateSchemaRef = gen.scopeValue(\"validate$data\", { ref: def.validateSchema }); // TODO value.code for standalone\n                return (0, codegen_1._) `!${validateSchemaRef}(${schemaCode})`;\n            }\n            return codegen_1.nil;\n        }\n    }\n    subschema(appl, valid) {\n        const subschema = (0, subschema_1.getSubschema)(this.it, appl);\n        (0, subschema_1.extendSubschemaData)(subschema, this.it, appl);\n        (0, subschema_1.extendSubschemaMode)(subschema, appl);\n        const nextContext = { ...this.it, ...subschema, items: undefined, props: undefined };\n        subschemaCode(nextContext, valid);\n        return nextContext;\n    }\n    mergeEvaluated(schemaCxt, toName) {\n        const { it, gen } = this;\n        if (!it.opts.unevaluated)\n            return;\n        if (it.props !== true && schemaCxt.props !== undefined) {\n            it.props = util_1.mergeEvaluated.props(gen, schemaCxt.props, it.props, toName);\n        }\n        if (it.items !== true && schemaCxt.items !== undefined) {\n            it.items = util_1.mergeEvaluated.items(gen, schemaCxt.items, it.items, toName);\n        }\n    }\n    mergeValidEvaluated(schemaCxt, valid) {\n        const { it, gen } = this;\n        if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n            gen.if(valid, () => this.mergeEvaluated(schemaCxt, codegen_1.Name));\n            return true;\n        }\n    }\n}\nexports.KeywordCxt = KeywordCxt;\nfunction keywordCode(it, keyword, def, ruleType) {\n    const cxt = new KeywordCxt(it, def, keyword);\n    if (\"code\" in def) {\n        def.code(cxt, ruleType);\n    }\n    else if (cxt.$data && def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n    else if (\"macro\" in def) {\n        (0, keyword_1.macroKeywordCode)(cxt, def);\n    }\n    else if (def.compile || def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n}\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, { dataLevel, dataNames, dataPathArr }) {\n    let jsonPointer;\n    let data;\n    if ($data === \"\")\n        return names_1.default.rootData;\n    if ($data[0] === \"/\") {\n        if (!JSON_POINTER.test($data))\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        jsonPointer = $data;\n        data = names_1.default.rootData;\n    }\n    else {\n        const matches = RELATIVE_JSON_POINTER.exec($data);\n        if (!matches)\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        const up = +matches[1];\n        jsonPointer = matches[2];\n        if (jsonPointer === \"#\") {\n            if (up >= dataLevel)\n                throw new Error(errorMsg(\"property/index\", up));\n            return dataPathArr[dataLevel - up];\n        }\n        if (up > dataLevel)\n            throw new Error(errorMsg(\"data\", up));\n        data = dataNames[dataLevel - up];\n        if (!jsonPointer)\n            return data;\n    }\n    let expr = data;\n    const segments = jsonPointer.split(\"/\");\n    for (const segment of segments) {\n        if (segment) {\n            data = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)((0, util_1.unescapeJsonPointer)(segment))}`;\n            expr = (0, codegen_1._) `${expr} && ${data}`;\n        }\n    }\n    return expr;\n    function errorMsg(pointerType, up) {\n        return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`;\n    }\n}\nexports.getData = getData;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n    const { gen, keyword, schema, parentSchema, it } = cxt;\n    const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n    const schemaRef = useKeyword(gen, keyword, macroSchema);\n    if (it.opts.validateSchema !== false)\n        it.self.validateSchema(macroSchema, true);\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n        schema: macroSchema,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        topSchemaRef: schemaRef,\n        compositeRule: true,\n    }, valid);\n    cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n    var _a;\n    const { gen, keyword, schema, parentSchema, $data, it } = cxt;\n    checkAsyncKeyword(it, def);\n    const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n    const validateRef = useKeyword(gen, keyword, validate);\n    const valid = gen.let(\"valid\");\n    cxt.block$data(valid, validateKeyword);\n    cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n    function validateKeyword() {\n        if (def.errors === false) {\n            assignValid();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => cxt.error());\n        }\n        else {\n            const ruleErrs = def.async ? validateAsync() : validateSync();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => addErrs(cxt, ruleErrs));\n        }\n    }\n    function validateAsync() {\n        const ruleErrs = gen.let(\"ruleErrs\", null);\n        gen.try(() => assignValid((0, codegen_1._) `await `), (e) => gen.assign(valid, false).if((0, codegen_1._) `${e} instanceof ${it.ValidationError}`, () => gen.assign(ruleErrs, (0, codegen_1._) `${e}.errors`), () => gen.throw(e)));\n        return ruleErrs;\n    }\n    function validateSync() {\n        const validateErrs = (0, codegen_1._) `${validateRef}.errors`;\n        gen.assign(validateErrs, null);\n        assignValid(codegen_1.nil);\n        return validateErrs;\n    }\n    function assignValid(_await = def.async ? (0, codegen_1._) `await ` : codegen_1.nil) {\n        const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n        const passSchema = !((\"compile\" in def && !$data) || def.schema === false);\n        gen.assign(valid, (0, codegen_1._) `${_await}${(0, code_1.callValidateCode)(cxt, validateRef, passCxt, passSchema)}`, def.modifying);\n    }\n    function reportErrs(errors) {\n        var _a;\n        gen.if((0, codegen_1.not)((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n    }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n    const { gen, data, it } = cxt;\n    gen.if(it.parentData, () => gen.assign(data, (0, codegen_1._) `${it.parentData}[${it.parentDataProperty}]`));\n}\nfunction addErrs(cxt, errs) {\n    const { gen } = cxt;\n    gen.if((0, codegen_1._) `Array.isArray(${errs})`, () => {\n        gen\n            .assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`)\n            .assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n        (0, errors_1.extendErrors)(cxt);\n    }, () => cxt.error());\n}\nfunction checkAsyncKeyword({ schemaEnv }, def) {\n    if (def.async && !schemaEnv.$async)\n        throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n    if (result === undefined)\n        throw new Error(`keyword \"${keyword}\" failed to compile`);\n    return gen.scopeValue(\"keyword\", typeof result == \"function\" ? { ref: result } : { ref: result, code: (0, codegen_1.stringify)(result) });\n}\nfunction validSchemaType(schema, schemaType, allowUndefined = false) {\n    // TODO add tests\n    return (!schemaType.length ||\n        schemaType.some((st) => st === \"array\"\n            ? Array.isArray(schema)\n            : st === \"object\"\n                ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n                : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")));\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage({ schema, opts, self, errSchemaPath }, def, keyword) {\n    /* istanbul ignore if */\n    if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n        throw new Error(\"ajv implementation error\");\n    }\n    const deps = def.dependencies;\n    if (deps === null || deps === void 0 ? void 0 : deps.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n        throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`);\n    }\n    if (def.validateSchema) {\n        const valid = def.validateSchema(schema[keyword]);\n        if (!valid) {\n            const msg = `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n                self.errorsText(def.validateSchema.errors);\n            if (opts.validateSchema === \"log\")\n                self.logger.error(msg);\n            else\n                throw new Error(msg);\n        }\n    }\n}\nexports.validateKeywordUsage = validateKeywordUsage;\n//# sourceMappingURL=keyword.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction getSubschema(it, { keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef }) {\n    if (keyword !== undefined && schema !== undefined) {\n        throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n    }\n    if (keyword !== undefined) {\n        const sch = it.schema[keyword];\n        return schemaProp === undefined\n            ? {\n                schema: sch,\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n            }\n            : {\n                schema: sch[schemaProp],\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`,\n            };\n    }\n    if (schema !== undefined) {\n        if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n            throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n        }\n        return {\n            schema,\n            schemaPath,\n            topSchemaRef,\n            errSchemaPath,\n        };\n    }\n    throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\nexports.getSubschema = getSubschema;\nfunction extendSubschemaData(subschema, it, { dataProp, dataPropType: dpType, data, dataTypes, propertyName }) {\n    if (data !== undefined && dataProp !== undefined) {\n        throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n    }\n    const { gen } = it;\n    if (dataProp !== undefined) {\n        const { errorPath, dataPathArr, opts } = it;\n        const nextData = gen.let(\"data\", (0, codegen_1._) `${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n        dataContextProps(nextData);\n        subschema.errorPath = (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n        subschema.parentDataProperty = (0, codegen_1._) `${dataProp}`;\n        subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n    }\n    if (data !== undefined) {\n        const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n        dataContextProps(nextData);\n        if (propertyName !== undefined)\n            subschema.propertyName = propertyName;\n        // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n    }\n    if (dataTypes)\n        subschema.dataTypes = dataTypes;\n    function dataContextProps(_nextData) {\n        subschema.data = _nextData;\n        subschema.dataLevel = it.dataLevel + 1;\n        subschema.dataTypes = [];\n        it.definedProperties = new Set();\n        subschema.parentData = it.data;\n        subschema.dataNames = [...it.dataNames, _nextData];\n    }\n}\nexports.extendSubschemaData = extendSubschemaData;\nfunction extendSubschemaMode(subschema, { jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors }) {\n    if (compositeRule !== undefined)\n        subschema.compositeRule = compositeRule;\n    if (createErrors !== undefined)\n        subschema.createErrors = createErrors;\n    if (allErrors !== undefined)\n        subschema.allErrors = allErrors;\n    subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n    subschema.jtdMetadata = jtdMetadata; // not inherited\n}\nexports.extendSubschemaMode = extendSubschemaMode;\n//# sourceMappingURL=subschema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nconst validation_error_1 = require(\"./runtime/validation_error\");\nconst ref_error_1 = require(\"./compile/ref_error\");\nconst rules_1 = require(\"./compile/rules\");\nconst compile_1 = require(\"./compile\");\nconst codegen_2 = require(\"./compile/codegen\");\nconst resolve_1 = require(\"./compile/resolve\");\nconst dataType_1 = require(\"./compile/validate/dataType\");\nconst util_1 = require(\"./compile/util\");\nconst $dataRefSchema = require(\"./refs/data.json\");\nconst uri_1 = require(\"./runtime/uri\");\nconst defaultRegExp = (str, flags) => new RegExp(str, flags);\ndefaultRegExp.code = \"new RegExp\";\nconst META_IGNORE_OPTIONS = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"];\nconst EXT_SCOPE_NAMES = new Set([\n    \"validate\",\n    \"serialize\",\n    \"parse\",\n    \"wrapper\",\n    \"root\",\n    \"schema\",\n    \"keyword\",\n    \"pattern\",\n    \"formats\",\n    \"validate$data\",\n    \"func\",\n    \"obj\",\n    \"Error\",\n]);\nconst removedOptions = {\n    errorDataPath: \"\",\n    format: \"`validateFormats: false` can be used instead.\",\n    nullable: '\"nullable\" keyword is supported by default.',\n    jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n    extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n    missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n    processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n    sourceCode: \"Use option `code: {source: true}`\",\n    strictDefaults: \"It is default now, see option `strict`.\",\n    strictKeywords: \"It is default now, see option `strict`.\",\n    uniqueItems: '\"uniqueItems\" keyword is always validated.',\n    unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n    cache: \"Map is used as cache, schema object as key.\",\n    serialize: \"Map is used as cache, schema object as key.\",\n    ajvErrors: \"It is default now.\",\n};\nconst deprecatedOptions = {\n    ignoreKeywordsWithRef: \"\",\n    jsPropertySyntax: \"\",\n    unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n};\nconst MAX_EXPRESSION = 200;\n// eslint-disable-next-line complexity\nfunction requiredOptions(o) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n    const s = o.strict;\n    const _optz = (_a = o.code) === null || _a === void 0 ? void 0 : _a.optimize;\n    const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0;\n    const regExp = (_c = (_b = o.code) === null || _b === void 0 ? void 0 : _b.regExp) !== null && _c !== void 0 ? _c : defaultRegExp;\n    const uriResolver = (_d = o.uriResolver) !== null && _d !== void 0 ? _d : uri_1.default;\n    return {\n        strictSchema: (_f = (_e = o.strictSchema) !== null && _e !== void 0 ? _e : s) !== null && _f !== void 0 ? _f : true,\n        strictNumbers: (_h = (_g = o.strictNumbers) !== null && _g !== void 0 ? _g : s) !== null && _h !== void 0 ? _h : true,\n        strictTypes: (_k = (_j = o.strictTypes) !== null && _j !== void 0 ? _j : s) !== null && _k !== void 0 ? _k : \"log\",\n        strictTuples: (_m = (_l = o.strictTuples) !== null && _l !== void 0 ? _l : s) !== null && _m !== void 0 ? _m : \"log\",\n        strictRequired: (_p = (_o = o.strictRequired) !== null && _o !== void 0 ? _o : s) !== null && _p !== void 0 ? _p : false,\n        code: o.code ? { ...o.code, optimize, regExp } : { optimize, regExp },\n        loopRequired: (_q = o.loopRequired) !== null && _q !== void 0 ? _q : MAX_EXPRESSION,\n        loopEnum: (_r = o.loopEnum) !== null && _r !== void 0 ? _r : MAX_EXPRESSION,\n        meta: (_s = o.meta) !== null && _s !== void 0 ? _s : true,\n        messages: (_t = o.messages) !== null && _t !== void 0 ? _t : true,\n        inlineRefs: (_u = o.inlineRefs) !== null && _u !== void 0 ? _u : true,\n        schemaId: (_v = o.schemaId) !== null && _v !== void 0 ? _v : \"$id\",\n        addUsedSchema: (_w = o.addUsedSchema) !== null && _w !== void 0 ? _w : true,\n        validateSchema: (_x = o.validateSchema) !== null && _x !== void 0 ? _x : true,\n        validateFormats: (_y = o.validateFormats) !== null && _y !== void 0 ? _y : true,\n        unicodeRegExp: (_z = o.unicodeRegExp) !== null && _z !== void 0 ? _z : true,\n        int32range: (_0 = o.int32range) !== null && _0 !== void 0 ? _0 : true,\n        uriResolver: uriResolver,\n    };\n}\nclass Ajv {\n    constructor(opts = {}) {\n        this.schemas = {};\n        this.refs = {};\n        this.formats = {};\n        this._compilations = new Set();\n        this._loading = {};\n        this._cache = new Map();\n        opts = this.opts = { ...opts, ...requiredOptions(opts) };\n        const { es5, lines } = this.opts.code;\n        this.scope = new codegen_2.ValueScope({ scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines });\n        this.logger = getLogger(opts.logger);\n        const formatOpt = opts.validateFormats;\n        opts.validateFormats = false;\n        this.RULES = (0, rules_1.getRules)();\n        checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\");\n        checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\");\n        this._metaOpts = getMetaSchemaOptions.call(this);\n        if (opts.formats)\n            addInitialFormats.call(this);\n        this._addVocabularies();\n        this._addDefaultMetaSchema();\n        if (opts.keywords)\n            addInitialKeywords.call(this, opts.keywords);\n        if (typeof opts.meta == \"object\")\n            this.addMetaSchema(opts.meta);\n        addInitialSchemas.call(this);\n        opts.validateFormats = formatOpt;\n    }\n    _addVocabularies() {\n        this.addKeyword(\"$async\");\n    }\n    _addDefaultMetaSchema() {\n        const { $data, meta, schemaId } = this.opts;\n        let _dataRefSchema = $dataRefSchema;\n        if (schemaId === \"id\") {\n            _dataRefSchema = { ...$dataRefSchema };\n            _dataRefSchema.id = _dataRefSchema.$id;\n            delete _dataRefSchema.$id;\n        }\n        if (meta && $data)\n            this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false);\n    }\n    defaultMeta() {\n        const { meta, schemaId } = this.opts;\n        return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined);\n    }\n    validate(schemaKeyRef, // key, ref or schema object\n    data // to be validated\n    ) {\n        let v;\n        if (typeof schemaKeyRef == \"string\") {\n            v = this.getSchema(schemaKeyRef);\n            if (!v)\n                throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`);\n        }\n        else {\n            v = this.compile(schemaKeyRef);\n        }\n        const valid = v(data);\n        if (!(\"$async\" in v))\n            this.errors = v.errors;\n        return valid;\n    }\n    compile(schema, _meta) {\n        const sch = this._addSchema(schema, _meta);\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    compileAsync(schema, meta) {\n        if (typeof this.opts.loadSchema != \"function\") {\n            throw new Error(\"options.loadSchema should be a function\");\n        }\n        const { loadSchema } = this.opts;\n        return runCompileAsync.call(this, schema, meta);\n        async function runCompileAsync(_schema, _meta) {\n            await loadMetaSchema.call(this, _schema.$schema);\n            const sch = this._addSchema(_schema, _meta);\n            return sch.validate || _compileAsync.call(this, sch);\n        }\n        async function loadMetaSchema($ref) {\n            if ($ref && !this.getSchema($ref)) {\n                await runCompileAsync.call(this, { $ref }, true);\n            }\n        }\n        async function _compileAsync(sch) {\n            try {\n                return this._compileSchemaEnv(sch);\n            }\n            catch (e) {\n                if (!(e instanceof ref_error_1.default))\n                    throw e;\n                checkLoaded.call(this, e);\n                await loadMissingSchema.call(this, e.missingSchema);\n                return _compileAsync.call(this, sch);\n            }\n        }\n        function checkLoaded({ missingSchema: ref, missingRef }) {\n            if (this.refs[ref]) {\n                throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`);\n            }\n        }\n        async function loadMissingSchema(ref) {\n            const _schema = await _loadSchema.call(this, ref);\n            if (!this.refs[ref])\n                await loadMetaSchema.call(this, _schema.$schema);\n            if (!this.refs[ref])\n                this.addSchema(_schema, ref, meta);\n        }\n        async function _loadSchema(ref) {\n            const p = this._loading[ref];\n            if (p)\n                return p;\n            try {\n                return await (this._loading[ref] = loadSchema(ref));\n            }\n            finally {\n                delete this._loading[ref];\n            }\n        }\n    }\n    // Adds schema to the instance\n    addSchema(schema, // If array is passed, `key` will be ignored\n    key, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n    ) {\n        if (Array.isArray(schema)) {\n            for (const sch of schema)\n                this.addSchema(sch, undefined, _meta, _validateSchema);\n            return this;\n        }\n        let id;\n        if (typeof schema === \"object\") {\n            const { schemaId } = this.opts;\n            id = schema[schemaId];\n            if (id !== undefined && typeof id != \"string\") {\n                throw new Error(`schema ${schemaId} must be string`);\n            }\n        }\n        key = (0, resolve_1.normalizeId)(key || id);\n        this._checkUnique(key);\n        this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true);\n        return this;\n    }\n    // Add schema that will be used to validate other schemas\n    // options in META_IGNORE_OPTIONS are alway set to false\n    addMetaSchema(schema, key, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n    ) {\n        this.addSchema(schema, key, true, _validateSchema);\n        return this;\n    }\n    //  Validate schema against its meta-schema\n    validateSchema(schema, throwOrLogError) {\n        if (typeof schema == \"boolean\")\n            return true;\n        let $schema;\n        $schema = schema.$schema;\n        if ($schema !== undefined && typeof $schema != \"string\") {\n            throw new Error(\"$schema must be a string\");\n        }\n        $schema = $schema || this.opts.defaultMeta || this.defaultMeta();\n        if (!$schema) {\n            this.logger.warn(\"meta-schema not available\");\n            this.errors = null;\n            return true;\n        }\n        const valid = this.validate($schema, schema);\n        if (!valid && throwOrLogError) {\n            const message = \"schema is invalid: \" + this.errorsText();\n            if (this.opts.validateSchema === \"log\")\n                this.logger.error(message);\n            else\n                throw new Error(message);\n        }\n        return valid;\n    }\n    // Get compiled schema by `key` or `ref`.\n    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n    getSchema(keyRef) {\n        let sch;\n        while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\")\n            keyRef = sch;\n        if (sch === undefined) {\n            const { schemaId } = this.opts;\n            const root = new compile_1.SchemaEnv({ schema: {}, schemaId });\n            sch = compile_1.resolveSchema.call(this, root, keyRef);\n            if (!sch)\n                return;\n            this.refs[keyRef] = sch;\n        }\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    // Remove cached schema(s).\n    // If no parameter is passed all schemas but meta-schemas are removed.\n    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n    removeSchema(schemaKeyRef) {\n        if (schemaKeyRef instanceof RegExp) {\n            this._removeAllSchemas(this.schemas, schemaKeyRef);\n            this._removeAllSchemas(this.refs, schemaKeyRef);\n            return this;\n        }\n        switch (typeof schemaKeyRef) {\n            case \"undefined\":\n                this._removeAllSchemas(this.schemas);\n                this._removeAllSchemas(this.refs);\n                this._cache.clear();\n                return this;\n            case \"string\": {\n                const sch = getSchEnv.call(this, schemaKeyRef);\n                if (typeof sch == \"object\")\n                    this._cache.delete(sch.schema);\n                delete this.schemas[schemaKeyRef];\n                delete this.refs[schemaKeyRef];\n                return this;\n            }\n            case \"object\": {\n                const cacheKey = schemaKeyRef;\n                this._cache.delete(cacheKey);\n                let id = schemaKeyRef[this.opts.schemaId];\n                if (id) {\n                    id = (0, resolve_1.normalizeId)(id);\n                    delete this.schemas[id];\n                    delete this.refs[id];\n                }\n                return this;\n            }\n            default:\n                throw new Error(\"ajv.removeSchema: invalid parameter\");\n        }\n    }\n    // add \"vocabulary\" - a collection of keywords\n    addVocabulary(definitions) {\n        for (const def of definitions)\n            this.addKeyword(def);\n        return this;\n    }\n    addKeyword(kwdOrDef, def // deprecated\n    ) {\n        let keyword;\n        if (typeof kwdOrDef == \"string\") {\n            keyword = kwdOrDef;\n            if (typeof def == \"object\") {\n                this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\");\n                def.keyword = keyword;\n            }\n        }\n        else if (typeof kwdOrDef == \"object\" && def === undefined) {\n            def = kwdOrDef;\n            keyword = def.keyword;\n            if (Array.isArray(keyword) && !keyword.length) {\n                throw new Error(\"addKeywords: keyword must be string or non-empty array\");\n            }\n        }\n        else {\n            throw new Error(\"invalid addKeywords parameters\");\n        }\n        checkKeyword.call(this, keyword, def);\n        if (!def) {\n            (0, util_1.eachItem)(keyword, (kwd) => addRule.call(this, kwd));\n            return this;\n        }\n        keywordMetaschema.call(this, def);\n        const definition = {\n            ...def,\n            type: (0, dataType_1.getJSONTypes)(def.type),\n            schemaType: (0, dataType_1.getJSONTypes)(def.schemaType),\n        };\n        (0, util_1.eachItem)(keyword, definition.type.length === 0\n            ? (k) => addRule.call(this, k, definition)\n            : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t)));\n        return this;\n    }\n    getKeyword(keyword) {\n        const rule = this.RULES.all[keyword];\n        return typeof rule == \"object\" ? rule.definition : !!rule;\n    }\n    // Remove keyword\n    removeKeyword(keyword) {\n        // TODO return type should be Ajv\n        const { RULES } = this;\n        delete RULES.keywords[keyword];\n        delete RULES.all[keyword];\n        for (const group of RULES.rules) {\n            const i = group.rules.findIndex((rule) => rule.keyword === keyword);\n            if (i >= 0)\n                group.rules.splice(i, 1);\n        }\n        return this;\n    }\n    // Add format\n    addFormat(name, format) {\n        if (typeof format == \"string\")\n            format = new RegExp(format);\n        this.formats[name] = format;\n        return this;\n    }\n    errorsText(errors = this.errors, // optional array of validation errors\n    { separator = \", \", dataVar = \"data\" } = {} // optional options with properties `separator` and `dataVar`\n    ) {\n        if (!errors || errors.length === 0)\n            return \"No errors\";\n        return errors\n            .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n            .reduce((text, msg) => text + separator + msg);\n    }\n    $dataMetaSchema(metaSchema, keywordsJsonPointers) {\n        const rules = this.RULES.all;\n        metaSchema = JSON.parse(JSON.stringify(metaSchema));\n        for (const jsonPointer of keywordsJsonPointers) {\n            const segments = jsonPointer.split(\"/\").slice(1); // first segment is an empty string\n            let keywords = metaSchema;\n            for (const seg of segments)\n                keywords = keywords[seg];\n            for (const key in rules) {\n                const rule = rules[key];\n                if (typeof rule != \"object\")\n                    continue;\n                const { $data } = rule.definition;\n                const schema = keywords[key];\n                if ($data && schema)\n                    keywords[key] = schemaOrData(schema);\n            }\n        }\n        return metaSchema;\n    }\n    _removeAllSchemas(schemas, regex) {\n        for (const keyRef in schemas) {\n            const sch = schemas[keyRef];\n            if (!regex || regex.test(keyRef)) {\n                if (typeof sch == \"string\") {\n                    delete schemas[keyRef];\n                }\n                else if (sch && !sch.meta) {\n                    this._cache.delete(sch.schema);\n                    delete schemas[keyRef];\n                }\n            }\n        }\n    }\n    _addSchema(schema, meta, baseId, validateSchema = this.opts.validateSchema, addSchema = this.opts.addUsedSchema) {\n        let id;\n        const { schemaId } = this.opts;\n        if (typeof schema == \"object\") {\n            id = schema[schemaId];\n        }\n        else {\n            if (this.opts.jtd)\n                throw new Error(\"schema must be object\");\n            else if (typeof schema != \"boolean\")\n                throw new Error(\"schema must be object or boolean\");\n        }\n        let sch = this._cache.get(schema);\n        if (sch !== undefined)\n            return sch;\n        baseId = (0, resolve_1.normalizeId)(id || baseId);\n        const localRefs = resolve_1.getSchemaRefs.call(this, schema, baseId);\n        sch = new compile_1.SchemaEnv({ schema, schemaId, meta, baseId, localRefs });\n        this._cache.set(sch.schema, sch);\n        if (addSchema && !baseId.startsWith(\"#\")) {\n            // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n            if (baseId)\n                this._checkUnique(baseId);\n            this.refs[baseId] = sch;\n        }\n        if (validateSchema)\n            this.validateSchema(schema, true);\n        return sch;\n    }\n    _checkUnique(id) {\n        if (this.schemas[id] || this.refs[id]) {\n            throw new Error(`schema with key or id \"${id}\" already exists`);\n        }\n    }\n    _compileSchemaEnv(sch) {\n        if (sch.meta)\n            this._compileMetaSchema(sch);\n        else\n            compile_1.compileSchema.call(this, sch);\n        /* istanbul ignore if */\n        if (!sch.validate)\n            throw new Error(\"ajv implementation error\");\n        return sch.validate;\n    }\n    _compileMetaSchema(sch) {\n        const currentOpts = this.opts;\n        this.opts = this._metaOpts;\n        try {\n            compile_1.compileSchema.call(this, sch);\n        }\n        finally {\n            this.opts = currentOpts;\n        }\n    }\n}\nexports.default = Ajv;\nAjv.ValidationError = validation_error_1.default;\nAjv.MissingRefError = ref_error_1.default;\nfunction checkOptions(checkOpts, options, msg, log = \"error\") {\n    for (const key in checkOpts) {\n        const opt = key;\n        if (opt in options)\n            this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`);\n    }\n}\nfunction getSchEnv(keyRef) {\n    keyRef = (0, resolve_1.normalizeId)(keyRef); // TODO tests fail without this line\n    return this.schemas[keyRef] || this.refs[keyRef];\n}\nfunction addInitialSchemas() {\n    const optsSchemas = this.opts.schemas;\n    if (!optsSchemas)\n        return;\n    if (Array.isArray(optsSchemas))\n        this.addSchema(optsSchemas);\n    else\n        for (const key in optsSchemas)\n            this.addSchema(optsSchemas[key], key);\n}\nfunction addInitialFormats() {\n    for (const name in this.opts.formats) {\n        const format = this.opts.formats[name];\n        if (format)\n            this.addFormat(name, format);\n    }\n}\nfunction addInitialKeywords(defs) {\n    if (Array.isArray(defs)) {\n        this.addVocabulary(defs);\n        return;\n    }\n    this.logger.warn(\"keywords option as map is deprecated, pass array\");\n    for (const keyword in defs) {\n        const def = defs[keyword];\n        if (!def.keyword)\n            def.keyword = keyword;\n        this.addKeyword(def);\n    }\n}\nfunction getMetaSchemaOptions() {\n    const metaOpts = { ...this.opts };\n    for (const opt of META_IGNORE_OPTIONS)\n        delete metaOpts[opt];\n    return metaOpts;\n}\nconst noLogs = { log() { }, warn() { }, error() { } };\nfunction getLogger(logger) {\n    if (logger === false)\n        return noLogs;\n    if (logger === undefined)\n        return console;\n    if (logger.log && logger.warn && logger.error)\n        return logger;\n    throw new Error(\"logger must implement log, warn and error methods\");\n}\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i;\nfunction checkKeyword(keyword, def) {\n    const { RULES } = this;\n    (0, util_1.eachItem)(keyword, (kwd) => {\n        if (RULES.keywords[kwd])\n            throw new Error(`Keyword ${kwd} is already defined`);\n        if (!KEYWORD_NAME.test(kwd))\n            throw new Error(`Keyword ${kwd} has invalid name`);\n    });\n    if (!def)\n        return;\n    if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n        throw new Error('$data keyword must have \"code\" or \"validate\" function');\n    }\n}\nfunction addRule(keyword, definition, dataType) {\n    var _a;\n    const post = definition === null || definition === void 0 ? void 0 : definition.post;\n    if (dataType && post)\n        throw new Error('keyword with \"post\" flag cannot have \"type\"');\n    const { RULES } = this;\n    let ruleGroup = post ? RULES.post : RULES.rules.find(({ type: t }) => t === dataType);\n    if (!ruleGroup) {\n        ruleGroup = { type: dataType, rules: [] };\n        RULES.rules.push(ruleGroup);\n    }\n    RULES.keywords[keyword] = true;\n    if (!definition)\n        return;\n    const rule = {\n        keyword,\n        definition: {\n            ...definition,\n            type: (0, dataType_1.getJSONTypes)(definition.type),\n            schemaType: (0, dataType_1.getJSONTypes)(definition.schemaType),\n        },\n    };\n    if (definition.before)\n        addBeforeRule.call(this, ruleGroup, rule, definition.before);\n    else\n        ruleGroup.rules.push(rule);\n    RULES.all[keyword] = rule;\n    (_a = definition.implements) === null || _a === void 0 ? void 0 : _a.forEach((kwd) => this.addKeyword(kwd));\n}\nfunction addBeforeRule(ruleGroup, rule, before) {\n    const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before);\n    if (i >= 0) {\n        ruleGroup.rules.splice(i, 0, rule);\n    }\n    else {\n        ruleGroup.rules.push(rule);\n        this.logger.warn(`rule ${before} is not defined`);\n    }\n}\nfunction keywordMetaschema(def) {\n    let { metaSchema } = def;\n    if (metaSchema === undefined)\n        return;\n    if (def.$data && this.opts.$data)\n        metaSchema = schemaOrData(metaSchema);\n    def.validateSchema = this.compile(metaSchema, true);\n}\nconst $dataRef = {\n    $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n};\nfunction schemaOrData(schema) {\n    return { anyOf: [schema, $dataRef] };\n}\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst metaSchema = require(\"./schema.json\");\nconst applicator = require(\"./meta/applicator.json\");\nconst content = require(\"./meta/content.json\");\nconst core = require(\"./meta/core.json\");\nconst format = require(\"./meta/format.json\");\nconst metadata = require(\"./meta/meta-data.json\");\nconst validation = require(\"./meta/validation.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nfunction addMetaSchema2019($data) {\n    ;\n    [\n        metaSchema,\n        applicator,\n        content,\n        core,\n        with$data(this, format),\n        metadata,\n        with$data(this, validation),\n    ].forEach((sch) => this.addMetaSchema(sch, undefined, false));\n    return this;\n    function with$data(ajv, sch) {\n        return $data ? ajv.$dataMetaSchema(sch, META_SUPPORT_DATA) : sch;\n    }\n}\nexports.default = addMetaSchema2019;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://github.com/ajv-validator/ajv/issues/889\nconst equal = require(\"fast-deep-equal\");\nequal.code = 'require(\"ajv/dist/runtime/equal\").default';\nexports.default = equal;\n//# sourceMappingURL=equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nfunction ucs2length(str) {\n    const len = str.length;\n    let length = 0;\n    let pos = 0;\n    let value;\n    while (pos < len) {\n        length++;\n        value = str.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n            // high surrogate, and there is a next character\n            value = str.charCodeAt(pos);\n            if ((value & 0xfc00) === 0xdc00)\n                pos++; // low surrogate\n        }\n    }\n    return length;\n}\nexports.default = ucs2length;\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default';\n//# sourceMappingURL=ucs2length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uri = require(\"uri-js\");\nuri.code = 'require(\"ajv/dist/runtime/uri\").default';\nexports.default = uri;\n//# sourceMappingURL=uri.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidationError extends Error {\n    constructor(errors) {\n        super(\"validation failed\");\n        this.errors = errors;\n        this.ajv = this.validation = true;\n    }\n}\nexports.default = ValidationError;\n//# sourceMappingURL=validation_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"additionalItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { parentSchema, it } = cxt;\n        const { items } = parentSchema;\n        if (!Array.isArray(items)) {\n            (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n            return;\n        }\n        validateAdditionalItems(cxt, items);\n    },\n};\nfunction validateAdditionalItems(cxt, items) {\n    const { gen, schema, data, keyword, it } = cxt;\n    it.items = true;\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    if (schema === false) {\n        cxt.setParams({ len: items.length });\n        cxt.pass((0, codegen_1._) `${len} <= ${items.length}`);\n    }\n    else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items.length}`); // TODO var\n        gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n        cxt.ok(valid);\n    }\n    function validateItems(valid) {\n        gen.forRange(\"i\", items.length, len, (i) => {\n            cxt.subschema({ keyword, dataProp: i, dataPropType: util_1.Type.Num }, valid);\n            if (!it.allErrors)\n                gen.if((0, codegen_1.not)(valid), () => gen.break());\n        });\n    }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;\n//# sourceMappingURL=additionalItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"allOf\",\n    schemaType: \"array\",\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        const valid = gen.name(\"valid\");\n        schema.forEach((sch, i) => {\n            if ((0, util_1.alwaysValidSchema)(it, sch))\n                return;\n            const schCxt = cxt.subschema({ keyword: \"allOf\", schemaProp: i }, valid);\n            cxt.ok(valid);\n            cxt.mergeEvaluated(schCxt);\n        });\n    },\n};\nexports.default = def;\n//# sourceMappingURL=allOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"anyOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    code: code_1.validateUnion,\n    error: { message: \"must match a schema in anyOf\" },\n};\nexports.default = def;\n//# sourceMappingURL=anyOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { min, max } }) => max === undefined\n        ? (0, codegen_1.str) `must contain at least ${min} valid item(s)`\n        : (0, codegen_1.str) `must contain at least ${min} and no more than ${max} valid item(s)`,\n    params: ({ params: { min, max } }) => max === undefined ? (0, codegen_1._) `{minContains: ${min}}` : (0, codegen_1._) `{minContains: ${min}, maxContains: ${max}}`,\n};\nconst def = {\n    keyword: \"contains\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        let min;\n        let max;\n        const { minContains, maxContains } = parentSchema;\n        if (it.opts.next) {\n            min = minContains === undefined ? 1 : minContains;\n            max = maxContains;\n        }\n        else {\n            min = 1;\n        }\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        cxt.setParams({ min, max });\n        if (max === undefined && min === 0) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`);\n            return;\n        }\n        if (max !== undefined && min > max) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" > \"maxContains\" is always invalid`);\n            cxt.fail();\n            return;\n        }\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            let cond = (0, codegen_1._) `${len} >= ${min}`;\n            if (max !== undefined)\n                cond = (0, codegen_1._) `${cond} && ${len} <= ${max}`;\n            cxt.pass(cond);\n            return;\n        }\n        it.items = true;\n        const valid = gen.name(\"valid\");\n        if (max === undefined && min === 1) {\n            validateItems(valid, () => gen.if(valid, () => gen.break()));\n        }\n        else if (min === 0) {\n            gen.let(valid, true);\n            if (max !== undefined)\n                gen.if((0, codegen_1._) `${data}.length > 0`, validateItemsWithCount);\n        }\n        else {\n            gen.let(valid, false);\n            validateItemsWithCount();\n        }\n        cxt.result(valid, () => cxt.reset());\n        function validateItemsWithCount() {\n            const schValid = gen.name(\"_valid\");\n            const count = gen.let(\"count\", 0);\n            validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)));\n        }\n        function validateItems(_valid, block) {\n            gen.forRange(\"i\", 0, len, (i) => {\n                cxt.subschema({\n                    keyword: \"contains\",\n                    dataProp: i,\n                    dataPropType: util_1.Type.Num,\n                    compositeRule: true,\n                }, _valid);\n                block();\n            });\n        }\n        function checkLimits(count) {\n            gen.code((0, codegen_1._) `${count}++`);\n            if (max === undefined) {\n                gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true).break());\n            }\n            else {\n                gen.if((0, codegen_1._) `${count} > ${max}`, () => gen.assign(valid, false).break());\n                if (min === 1)\n                    gen.assign(valid, true);\n                else\n                    gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true));\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=contains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dependencies_1 = require(\"./dependencies\");\nconst def = {\n    keyword: \"dependentSchemas\",\n    type: \"object\",\n    schemaType: \"object\",\n    code: (cxt) => (0, dependencies_1.validateSchemaDeps)(cxt),\n};\nexports.default = def;\n//# sourceMappingURL=dependentSchemas.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params }) => (0, codegen_1.str) `must match \"${params.ifClause}\" schema`,\n    params: ({ params }) => (0, codegen_1._) `{failingKeyword: ${params.ifClause}}`,\n};\nconst def = {\n    keyword: \"if\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, parentSchema, it } = cxt;\n        if (parentSchema.then === undefined && parentSchema.else === undefined) {\n            (0, util_1.checkStrictMode)(it, '\"if\" without \"then\" and \"else\" is ignored');\n        }\n        const hasThen = hasSchema(it, \"then\");\n        const hasElse = hasSchema(it, \"else\");\n        if (!hasThen && !hasElse)\n            return;\n        const valid = gen.let(\"valid\", true);\n        const schValid = gen.name(\"_valid\");\n        validateIf();\n        cxt.reset();\n        if (hasThen && hasElse) {\n            const ifClause = gen.let(\"ifClause\");\n            cxt.setParams({ ifClause });\n            gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause));\n        }\n        else if (hasThen) {\n            gen.if(schValid, validateClause(\"then\"));\n        }\n        else {\n            gen.if((0, codegen_1.not)(schValid), validateClause(\"else\"));\n        }\n        cxt.pass(valid, () => cxt.error(true));\n        function validateIf() {\n            const schCxt = cxt.subschema({\n                keyword: \"if\",\n                compositeRule: true,\n                createErrors: false,\n                allErrors: false,\n            }, schValid);\n            cxt.mergeEvaluated(schCxt);\n        }\n        function validateClause(keyword, ifClause) {\n            return () => {\n                const schCxt = cxt.subschema({ keyword }, schValid);\n                gen.assign(valid, schValid);\n                cxt.mergeValidEvaluated(schCxt, valid);\n                if (ifClause)\n                    gen.assign(ifClause, (0, codegen_1._) `${keyword}`);\n                else\n                    cxt.setParams({ ifClause: keyword });\n            };\n        }\n    },\n};\nfunction hasSchema(it, keyword) {\n    const schema = it.schema[keyword];\n    return schema !== undefined && !(0, util_1.alwaysValidSchema)(it, schema);\n}\nexports.default = def;\n//# sourceMappingURL=if.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst additionalItems_1 = require(\"./additionalItems\");\nconst prefixItems_1 = require(\"./prefixItems\");\nconst items_1 = require(\"./items\");\nconst items2020_1 = require(\"./items2020\");\nconst contains_1 = require(\"./contains\");\nconst dependencies_1 = require(\"./dependencies\");\nconst propertyNames_1 = require(\"./propertyNames\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst properties_1 = require(\"./properties\");\nconst patternProperties_1 = require(\"./patternProperties\");\nconst not_1 = require(\"./not\");\nconst anyOf_1 = require(\"./anyOf\");\nconst oneOf_1 = require(\"./oneOf\");\nconst allOf_1 = require(\"./allOf\");\nconst if_1 = require(\"./if\");\nconst thenElse_1 = require(\"./thenElse\");\nfunction getApplicator(draft2020 = false) {\n    const applicator = [\n        // any\n        not_1.default,\n        anyOf_1.default,\n        oneOf_1.default,\n        allOf_1.default,\n        if_1.default,\n        thenElse_1.default,\n        // object\n        propertyNames_1.default,\n        additionalProperties_1.default,\n        dependencies_1.default,\n        properties_1.default,\n        patternProperties_1.default,\n    ];\n    // array\n    if (draft2020)\n        applicator.push(prefixItems_1.default, items2020_1.default);\n    else\n        applicator.push(additionalItems_1.default, items_1.default);\n    applicator.push(contains_1.default);\n    return applicator;\n}\nexports.default = getApplicator;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTuple = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"array\", \"boolean\"],\n    before: \"uniqueItems\",\n    code(cxt) {\n        const { schema, it } = cxt;\n        if (Array.isArray(schema))\n            return validateTuple(cxt, \"additionalItems\", schema);\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n    const { gen, parentSchema, data, keyword, it } = cxt;\n    checkStrictTuple(parentSchema);\n    if (it.opts.unevaluated && schArr.length && it.items !== true) {\n        it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n    }\n    const valid = gen.name(\"valid\");\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    schArr.forEach((sch, i) => {\n        if ((0, util_1.alwaysValidSchema)(it, sch))\n            return;\n        gen.if((0, codegen_1._) `${len} > ${i}`, () => cxt.subschema({\n            keyword,\n            schemaProp: i,\n            dataProp: i,\n        }, valid));\n        cxt.ok(valid);\n    });\n    function checkStrictTuple(sch) {\n        const { opts, errSchemaPath } = it;\n        const l = schArr.length;\n        const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n        if (opts.strictTuples && !fullTuple) {\n            const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n            (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n        }\n    }\n}\nexports.validateTuple = validateTuple;\nexports.default = def;\n//# sourceMappingURL=items.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"not\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            cxt.fail();\n            return;\n        }\n        const valid = gen.name(\"valid\");\n        cxt.subschema({\n            keyword: \"not\",\n            compositeRule: true,\n            createErrors: false,\n            allErrors: false,\n        }, valid);\n        cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n    },\n    error: { message: \"must NOT be valid\" },\n};\nexports.default = def;\n//# sourceMappingURL=not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must match exactly one schema in oneOf\",\n    params: ({ params }) => (0, codegen_1._) `{passingSchemas: ${params.passing}}`,\n};\nconst def = {\n    keyword: \"oneOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        if (it.opts.discriminator && parentSchema.discriminator)\n            return;\n        const schArr = schema;\n        const valid = gen.let(\"valid\", false);\n        const passing = gen.let(\"passing\", null);\n        const schValid = gen.name(\"_valid\");\n        cxt.setParams({ passing });\n        // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n        gen.block(validateOneOf);\n        cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n        function validateOneOf() {\n            schArr.forEach((sch, i) => {\n                let schCxt;\n                if ((0, util_1.alwaysValidSchema)(it, sch)) {\n                    gen.var(schValid, true);\n                }\n                else {\n                    schCxt = cxt.subschema({\n                        keyword: \"oneOf\",\n                        schemaProp: i,\n                        compositeRule: true,\n                    }, schValid);\n                }\n                if (i > 0) {\n                    gen\n                        .if((0, codegen_1._) `${schValid} && ${valid}`)\n                        .assign(valid, false)\n                        .assign(passing, (0, codegen_1._) `[${passing}, ${i}]`)\n                        .else();\n                }\n                gen.if(schValid, () => {\n                    gen.assign(valid, true);\n                    gen.assign(passing, i);\n                    if (schCxt)\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=oneOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst util_2 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"patternProperties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, data, parentSchema, it } = cxt;\n        const { opts } = it;\n        const patterns = (0, code_1.allSchemaProperties)(schema);\n        const alwaysValidPatterns = patterns.filter((p) => (0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (patterns.length === 0 ||\n            (alwaysValidPatterns.length === patterns.length &&\n                (!it.opts.unevaluated || it.props === true))) {\n            return;\n        }\n        const checkProperties = opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties;\n        const valid = gen.name(\"valid\");\n        if (it.props !== true && !(it.props instanceof codegen_1.Name)) {\n            it.props = (0, util_2.evaluatedPropsToName)(gen, it.props);\n        }\n        const { props } = it;\n        validatePatternProperties();\n        function validatePatternProperties() {\n            for (const pat of patterns) {\n                if (checkProperties)\n                    checkMatchingProperties(pat);\n                if (it.allErrors) {\n                    validateProperties(pat);\n                }\n                else {\n                    gen.var(valid, true); // TODO var\n                    validateProperties(pat);\n                    gen.if(valid);\n                }\n            }\n        }\n        function checkMatchingProperties(pat) {\n            for (const prop in checkProperties) {\n                if (new RegExp(pat).test(prop)) {\n                    (0, util_1.checkStrictMode)(it, `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`);\n                }\n            }\n        }\n        function validateProperties(pat) {\n            gen.forIn(\"key\", data, (key) => {\n                gen.if((0, codegen_1._) `${(0, code_1.usePattern)(cxt, pat)}.test(${key})`, () => {\n                    const alwaysValid = alwaysValidPatterns.includes(pat);\n                    if (!alwaysValid) {\n                        cxt.subschema({\n                            keyword: \"patternProperties\",\n                            schemaProp: pat,\n                            dataProp: key,\n                            dataPropType: util_2.Type.Str,\n                        }, valid);\n                    }\n                    if (it.opts.unevaluated && props !== true) {\n                        gen.assign((0, codegen_1._) `${props}[${key}]`, true);\n                    }\n                    else if (!alwaysValid && !it.allErrors) {\n                        // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n                        // or if all properties were evaluated (props === true)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                    }\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=patternProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst items_1 = require(\"./items\");\nconst def = {\n    keyword: \"prefixItems\",\n    type: \"array\",\n    schemaType: [\"array\"],\n    before: \"uniqueItems\",\n    code: (cxt) => (0, items_1.validateTuple)(cxt, \"items\"),\n};\nexports.default = def;\n//# sourceMappingURL=prefixItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=propertyNames.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"then\", \"else\"],\n    schemaType: [\"object\", \"boolean\"],\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.if === undefined)\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"if\" is ignored`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=thenElse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: (0, codegen_1._) `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return (0, codegen_1.or)(...properties.map((prop) => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._) `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: (0, codegen_1._) `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return (0, codegen_1._) `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} !== undefined`;\n    return ownProperties ? (0, codegen_1._) `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} === undefined`;\n    return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? (0, codegen_1._) `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = (0, codegen_1._) `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? (0, codegen_1._) `${func}.call(${context}, ${args})` : (0, codegen_1._) `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._) `new RegExp`;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    const { regExp } = opts.code;\n    const rx = regExp(pattern, u);\n    return gen.scopeValue(\"pattern\", {\n        key: rx.toString(),\n        ref: rx,\n        code: (0, codegen_1._) `${regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp)}(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => (0, util_1.alwaysValidSchema)(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, (0, codegen_1._) `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if((0, codegen_1.not)(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst def = {\n    keyword: \"id\",\n    code() {\n        throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID');\n    },\n};\nexports.default = def;\n//# sourceMappingURL=id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst id_1 = require(\"./id\");\nconst ref_1 = require(\"./ref\");\nconst core = [\n    \"$schema\",\n    \"$id\",\n    \"$defs\",\n    \"$vocabulary\",\n    { keyword: \"$comment\" },\n    \"definitions\",\n    id_1.default,\n    ref_1.default,\n];\nexports.default = core;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRef = exports.getValidate = void 0;\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$ref\",\n    schemaType: \"string\",\n    code(cxt) {\n        const { gen, schema: $ref, it } = cxt;\n        const { baseId, schemaEnv: env, validateName, opts, self } = it;\n        const { root } = env;\n        if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId)\n            return callRootRef();\n        const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n        if (schOrEnv === undefined)\n            throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n        if (schOrEnv instanceof compile_1.SchemaEnv)\n            return callValidate(schOrEnv);\n        return inlineRefSchema(schOrEnv);\n        function callRootRef() {\n            if (env === root)\n                return callRef(cxt, validateName, env, env.$async);\n            const rootName = gen.scopeValue(\"root\", { ref: root });\n            return callRef(cxt, (0, codegen_1._) `${rootName}.validate`, root, root.$async);\n        }\n        function callValidate(sch) {\n            const v = getValidate(cxt, sch);\n            callRef(cxt, v, sch, sch.$async);\n        }\n        function inlineRefSchema(sch) {\n            const schName = gen.scopeValue(\"schema\", opts.code.source === true ? { ref: sch, code: (0, codegen_1.stringify)(sch) } : { ref: sch });\n            const valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({\n                schema: sch,\n                dataTypes: [],\n                schemaPath: codegen_1.nil,\n                topSchemaRef: schName,\n                errSchemaPath: $ref,\n            }, valid);\n            cxt.mergeEvaluated(schCxt);\n            cxt.ok(valid);\n        }\n    },\n};\nfunction getValidate(cxt, sch) {\n    const { gen } = cxt;\n    return sch.validate\n        ? gen.scopeValue(\"validate\", { ref: sch.validate })\n        : (0, codegen_1._) `${gen.scopeValue(\"wrapper\", { ref: sch })}.validate`;\n}\nexports.getValidate = getValidate;\nfunction callRef(cxt, v, sch, $async) {\n    const { gen, it } = cxt;\n    const { allErrors, schemaEnv: env, opts } = it;\n    const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n    if ($async)\n        callAsyncRef();\n    else\n        callSyncRef();\n    function callAsyncRef() {\n        if (!env.$async)\n            throw new Error(\"async schema referenced by sync schema\");\n        const valid = gen.let(\"valid\");\n        gen.try(() => {\n            gen.code((0, codegen_1._) `await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n            addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n            if (!allErrors)\n                gen.assign(valid, true);\n        }, (e) => {\n            gen.if((0, codegen_1._) `!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n            addErrorsFrom(e);\n            if (!allErrors)\n                gen.assign(valid, false);\n        });\n        cxt.ok(valid);\n    }\n    function callSyncRef() {\n        cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n    }\n    function addErrorsFrom(source) {\n        const errs = (0, codegen_1._) `${source}.errors`;\n        gen.assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n        gen.assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n    }\n    function addEvaluatedFrom(source) {\n        var _a;\n        if (!it.opts.unevaluated)\n            return;\n        const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated;\n        // TODO refactor\n        if (it.props !== true) {\n            if (schEvaluated && !schEvaluated.dynamicProps) {\n                if (schEvaluated.props !== undefined) {\n                    it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n                }\n            }\n            else {\n                const props = gen.var(\"props\", (0, codegen_1._) `${source}.evaluated.props`);\n                it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n            }\n        }\n        if (it.items !== true) {\n            if (schEvaluated && !schEvaluated.dynamicItems) {\n                if (schEvaluated.items !== undefined) {\n                    it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n                }\n            }\n            else {\n                const items = gen.var(\"items\", (0, codegen_1._) `${source}.evaluated.items`);\n                it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n            }\n        }\n    }\n}\nexports.callRef = callRef;\nexports.default = def;\n//# sourceMappingURL=ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst types_1 = require(\"../discriminator/types\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { discrError, tagName } }) => discrError === types_1.DiscrError.Tag\n        ? `tag \"${tagName}\" must be string`\n        : `value of tag \"${tagName}\" must be in oneOf`,\n    params: ({ params: { discrError, tag, tagName } }) => (0, codegen_1._) `{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n};\nconst def = {\n    keyword: \"discriminator\",\n    type: \"object\",\n    schemaType: \"object\",\n    error,\n    code(cxt) {\n        const { gen, data, schema, parentSchema, it } = cxt;\n        const { oneOf } = parentSchema;\n        if (!it.opts.discriminator) {\n            throw new Error(\"discriminator: requires discriminator option\");\n        }\n        const tagName = schema.propertyName;\n        if (typeof tagName != \"string\")\n            throw new Error(\"discriminator: requires propertyName\");\n        if (schema.mapping)\n            throw new Error(\"discriminator: mapping is not supported\");\n        if (!oneOf)\n            throw new Error(\"discriminator: requires oneOf keyword\");\n        const valid = gen.let(\"valid\", false);\n        const tag = gen.const(\"tag\", (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(tagName)}`);\n        gen.if((0, codegen_1._) `typeof ${tag} == \"string\"`, () => validateMapping(), () => cxt.error(false, { discrError: types_1.DiscrError.Tag, tag, tagName }));\n        cxt.ok(valid);\n        function validateMapping() {\n            const mapping = getMapping();\n            gen.if(false);\n            for (const tagValue in mapping) {\n                gen.elseIf((0, codegen_1._) `${tag} === ${tagValue}`);\n                gen.assign(valid, applyTagSchema(mapping[tagValue]));\n            }\n            gen.else();\n            cxt.error(false, { discrError: types_1.DiscrError.Mapping, tag, tagName });\n            gen.endIf();\n        }\n        function applyTagSchema(schemaProp) {\n            const _valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({ keyword: \"oneOf\", schemaProp }, _valid);\n            cxt.mergeEvaluated(schCxt, codegen_1.Name);\n            return _valid;\n        }\n        function getMapping() {\n            var _a;\n            const oneOfMapping = {};\n            const topRequired = hasRequired(parentSchema);\n            let tagRequired = true;\n            for (let i = 0; i < oneOf.length; i++) {\n                let sch = oneOf[i];\n                if ((sch === null || sch === void 0 ? void 0 : sch.$ref) && !(0, util_1.schemaHasRulesButRef)(sch, it.self.RULES)) {\n                    sch = compile_1.resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch === null || sch === void 0 ? void 0 : sch.$ref);\n                    if (sch instanceof compile_1.SchemaEnv)\n                        sch = sch.schema;\n                }\n                const propSch = (_a = sch === null || sch === void 0 ? void 0 : sch.properties) === null || _a === void 0 ? void 0 : _a[tagName];\n                if (typeof propSch != \"object\") {\n                    throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`);\n                }\n                tagRequired = tagRequired && (topRequired || hasRequired(sch));\n                addMappings(propSch, i);\n            }\n            if (!tagRequired)\n                throw new Error(`discriminator: \"${tagName}\" must be required`);\n            return oneOfMapping;\n            function hasRequired({ required }) {\n                return Array.isArray(required) && required.includes(tagName);\n            }\n            function addMappings(sch, i) {\n                if (sch.const) {\n                    addMapping(sch.const, i);\n                }\n                else if (sch.enum) {\n                    for (const tagValue of sch.enum) {\n                        addMapping(tagValue, i);\n                    }\n                }\n                else {\n                    throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`);\n                }\n            }\n            function addMapping(tagValue, i) {\n                if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n                    throw new Error(`discriminator: \"${tagName}\" values must be unique strings`);\n                }\n                oneOfMapping[tagValue] = i;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiscrError = void 0;\nvar DiscrError;\n(function (DiscrError) {\n    DiscrError[\"Tag\"] = \"tag\";\n    DiscrError[\"Mapping\"] = \"mapping\";\n})(DiscrError = exports.DiscrError || (exports.DiscrError = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"./core\");\nconst validation_1 = require(\"./validation\");\nconst applicator_1 = require(\"./applicator\");\nconst format_1 = require(\"./format\");\nconst metadata_1 = require(\"./metadata\");\nconst draft7Vocabularies = [\n    core_1.default,\n    validation_1.default,\n    (0, applicator_1.default)(),\n    format_1.default,\n    metadata_1.metadataVocabulary,\n    metadata_1.contentVocabulary,\n];\nexports.default = draft7Vocabularies;\n//# sourceMappingURL=draft7.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dynamicAnchor = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst ref_1 = require(\"../core/ref\");\nconst def = {\n    keyword: \"$dynamicAnchor\",\n    schemaType: \"string\",\n    code: (cxt) => dynamicAnchor(cxt, cxt.schema),\n};\nfunction dynamicAnchor(cxt, anchor) {\n    const { gen, it } = cxt;\n    it.schemaEnv.root.dynamicAnchors[anchor] = true;\n    const v = (0, codegen_1._) `${names_1.default.dynamicAnchors}${(0, codegen_1.getProperty)(anchor)}`;\n    const validate = it.errSchemaPath === \"#\" ? it.validateName : _getValidate(cxt);\n    gen.if((0, codegen_1._) `!${v}`, () => gen.assign(v, validate));\n}\nexports.dynamicAnchor = dynamicAnchor;\nfunction _getValidate(cxt) {\n    const { schemaEnv, schema, self } = cxt.it;\n    const { root, baseId, localRefs, meta } = schemaEnv.root;\n    const { schemaId } = self.opts;\n    const sch = new compile_1.SchemaEnv({ schema, schemaId, root, baseId, localRefs, meta });\n    compile_1.compileSchema.call(self, sch);\n    return (0, ref_1.getValidate)(cxt, sch);\n}\nexports.default = def;\n//# sourceMappingURL=dynamicAnchor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dynamicRef = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst ref_1 = require(\"../core/ref\");\nconst def = {\n    keyword: \"$dynamicRef\",\n    schemaType: \"string\",\n    code: (cxt) => dynamicRef(cxt, cxt.schema),\n};\nfunction dynamicRef(cxt, ref) {\n    const { gen, keyword, it } = cxt;\n    if (ref[0] !== \"#\")\n        throw new Error(`\"${keyword}\" only supports hash fragment reference`);\n    const anchor = ref.slice(1);\n    if (it.allErrors) {\n        _dynamicRef();\n    }\n    else {\n        const valid = gen.let(\"valid\", false);\n        _dynamicRef(valid);\n        cxt.ok(valid);\n    }\n    function _dynamicRef(valid) {\n        // TODO the assumption here is that `recursiveRef: #` always points to the root\n        // of the schema object, which is not correct, because there may be $id that\n        // makes # point to it, and the target schema may not contain dynamic/recursiveAnchor.\n        // Because of that 2 tests in recursiveRef.json fail.\n        // This is a similar problem to #815 (`$id` doesn't alter resolution scope for `{ \"$ref\": \"#\" }`).\n        // (This problem is not tested in JSON-Schema-Test-Suite)\n        if (it.schemaEnv.root.dynamicAnchors[anchor]) {\n            const v = gen.let(\"_v\", (0, codegen_1._) `${names_1.default.dynamicAnchors}${(0, codegen_1.getProperty)(anchor)}`);\n            gen.if(v, _callRef(v, valid), _callRef(it.validateName, valid));\n        }\n        else {\n            _callRef(it.validateName, valid)();\n        }\n    }\n    function _callRef(validate, valid) {\n        return valid\n            ? () => gen.block(() => {\n                (0, ref_1.callRef)(cxt, validate);\n                gen.let(valid, true);\n            })\n            : () => (0, ref_1.callRef)(cxt, validate);\n    }\n}\nexports.dynamicRef = dynamicRef;\nexports.default = def;\n//# sourceMappingURL=dynamicRef.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dynamicAnchor_1 = require(\"./dynamicAnchor\");\nconst dynamicRef_1 = require(\"./dynamicRef\");\nconst recursiveAnchor_1 = require(\"./recursiveAnchor\");\nconst recursiveRef_1 = require(\"./recursiveRef\");\nconst dynamic = [dynamicAnchor_1.default, dynamicRef_1.default, recursiveAnchor_1.default, recursiveRef_1.default];\nexports.default = dynamic;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dynamicAnchor_1 = require(\"./dynamicAnchor\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$recursiveAnchor\",\n    schemaType: \"boolean\",\n    code(cxt) {\n        if (cxt.schema)\n            (0, dynamicAnchor_1.dynamicAnchor)(cxt, \"\");\n        else\n            (0, util_1.checkStrictMode)(cxt.it, \"$recursiveAnchor: false is ignored\");\n    },\n};\nexports.default = def;\n//# sourceMappingURL=recursiveAnchor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dynamicRef_1 = require(\"./dynamicRef\");\nconst def = {\n    keyword: \"$recursiveRef\",\n    schemaType: \"string\",\n    code: (cxt) => (0, dynamicRef_1.dynamicRef)(cxt, cxt.schema),\n};\nexports.default = def;\n//# sourceMappingURL=recursiveRef.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match format \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{format: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"format\",\n    type: [\"number\", \"string\"],\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt, ruleType) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        const { opts, errSchemaPath, schemaEnv, self } = it;\n        if (!opts.validateFormats)\n            return;\n        if ($data)\n            validate$DataFormat();\n        else\n            validateFormat();\n        function validate$DataFormat() {\n            const fmts = gen.scopeValue(\"formats\", {\n                ref: self.formats,\n                code: opts.code.formats,\n            });\n            const fDef = gen.const(\"fDef\", (0, codegen_1._) `${fmts}[${schemaCode}]`);\n            const fType = gen.let(\"fType\");\n            const format = gen.let(\"format\");\n            // TODO simplify\n            gen.if((0, codegen_1._) `typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`, () => gen.assign(fType, (0, codegen_1._) `${fDef}.type || \"string\"`).assign(format, (0, codegen_1._) `${fDef}.validate`), () => gen.assign(fType, (0, codegen_1._) `\"string\"`).assign(format, fDef));\n            cxt.fail$data((0, codegen_1.or)(unknownFmt(), invalidFmt()));\n            function unknownFmt() {\n                if (opts.strictSchema === false)\n                    return codegen_1.nil;\n                return (0, codegen_1._) `${schemaCode} && !${format}`;\n            }\n            function invalidFmt() {\n                const callFormat = schemaEnv.$async\n                    ? (0, codegen_1._) `(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n                    : (0, codegen_1._) `${format}(${data})`;\n                const validData = (0, codegen_1._) `(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`;\n                return (0, codegen_1._) `${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`;\n            }\n        }\n        function validateFormat() {\n            const formatDef = self.formats[schema];\n            if (!formatDef) {\n                unknownFormat();\n                return;\n            }\n            if (formatDef === true)\n                return;\n            const [fmtType, format, fmtRef] = getFormat(formatDef);\n            if (fmtType === ruleType)\n                cxt.pass(validCondition());\n            function unknownFormat() {\n                if (opts.strictSchema === false) {\n                    self.logger.warn(unknownMsg());\n                    return;\n                }\n                throw new Error(unknownMsg());\n                function unknownMsg() {\n                    return `unknown format \"${schema}\" ignored in schema at path \"${errSchemaPath}\"`;\n                }\n            }\n            function getFormat(fmtDef) {\n                const code = fmtDef instanceof RegExp\n                    ? (0, codegen_1.regexpCode)(fmtDef)\n                    : opts.code.formats\n                        ? (0, codegen_1._) `${opts.code.formats}${(0, codegen_1.getProperty)(schema)}`\n                        : undefined;\n                const fmt = gen.scopeValue(\"formats\", { key: schema, ref: fmtDef, code });\n                if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n                    return [fmtDef.type || \"string\", fmtDef.validate, (0, codegen_1._) `${fmt}.validate`];\n                }\n                return [\"string\", fmtDef, fmt];\n            }\n            function validCondition() {\n                if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n                    if (!schemaEnv.$async)\n                        throw new Error(\"async format in sync schema\");\n                    return (0, codegen_1._) `await ${fmtRef}(${data})`;\n                }\n                return typeof format == \"function\" ? (0, codegen_1._) `${fmtRef}(${data})` : (0, codegen_1._) `${fmtRef}.test(${data})`;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst format_1 = require(\"./format\");\nconst format = [format_1.default];\nexports.default = format;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contentVocabulary = exports.metadataVocabulary = void 0;\nexports.metadataVocabulary = [\n    \"title\",\n    \"description\",\n    \"default\",\n    \"deprecated\",\n    \"readOnly\",\n    \"writeOnly\",\n    \"examples\",\n];\nexports.contentVocabulary = [\n    \"contentMediaType\",\n    \"contentEncoding\",\n    \"contentSchema\",\n];\n//# sourceMappingURL=metadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dependentRequired_1 = require(\"./validation/dependentRequired\");\nconst dependentSchemas_1 = require(\"./applicator/dependentSchemas\");\nconst limitContains_1 = require(\"./validation/limitContains\");\nconst next = [dependentRequired_1.default, dependentSchemas_1.default, limitContains_1.default];\nexports.default = next;\n//# sourceMappingURL=next.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unevaluatedProperties_1 = require(\"./unevaluatedProperties\");\nconst unevaluatedItems_1 = require(\"./unevaluatedItems\");\nconst unevaluated = [unevaluatedProperties_1.default, unevaluatedItems_1.default];\nexports.default = unevaluated;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"unevaluatedItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        const items = it.items || 0;\n        if (items === true)\n            return;\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        if (schema === false) {\n            cxt.setParams({ len: items });\n            cxt.fail((0, codegen_1._) `${len} > ${items}`);\n        }\n        else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n            const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items}`);\n            gen.if((0, codegen_1.not)(valid), () => validateItems(valid, items));\n            cxt.ok(valid);\n        }\n        it.items = true;\n        function validateItems(valid, from) {\n            gen.forRange(\"i\", from, len, (i) => {\n                cxt.subschema({ keyword: \"unevaluatedItems\", dataProp: i, dataPropType: util_1.Type.Num }, valid);\n                if (!it.allErrors)\n                    gen.if((0, codegen_1.not)(valid), () => gen.break());\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=unevaluatedItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst names_1 = require(\"../../compile/names\");\nconst error = {\n    message: \"must NOT have unevaluated properties\",\n    params: ({ params }) => (0, codegen_1._) `{unevaluatedProperty: ${params.unevaluatedProperty}}`,\n};\nconst def = {\n    keyword: \"unevaluatedProperties\",\n    type: \"object\",\n    schemaType: [\"boolean\", \"object\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, props } = it;\n        if (props instanceof codegen_1.Name) {\n            gen.if((0, codegen_1._) `${props} !== true`, () => gen.forIn(\"key\", data, (key) => gen.if(unevaluatedDynamic(props, key), () => unevaluatedPropCode(key))));\n        }\n        else if (props !== true) {\n            gen.forIn(\"key\", data, (key) => props === undefined\n                ? unevaluatedPropCode(key)\n                : gen.if(unevaluatedStatic(props, key), () => unevaluatedPropCode(key)));\n        }\n        it.props = true;\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function unevaluatedPropCode(key) {\n            if (schema === false) {\n                cxt.setParams({ unevaluatedProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (!(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                cxt.subschema({\n                    keyword: \"unevaluatedProperties\",\n                    dataProp: key,\n                    dataPropType: util_1.Type.Str,\n                }, valid);\n                if (!allErrors)\n                    gen.if((0, codegen_1.not)(valid), () => gen.break());\n            }\n        }\n        function unevaluatedDynamic(evaluatedProps, key) {\n            return (0, codegen_1._) `!${evaluatedProps} || !${evaluatedProps}[${key}]`;\n        }\n        function unevaluatedStatic(evaluatedProps, key) {\n            const ps = [];\n            for (const p in evaluatedProps) {\n                if (evaluatedProps[p] === true)\n                    ps.push((0, codegen_1._) `${key} !== ${p}`);\n            }\n            return (0, codegen_1.and)(...ps);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=unevaluatedProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to constant\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValue: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"const\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schemaCode, schema } = cxt;\n        if ($data || (schema && typeof schema == \"object\")) {\n            cxt.fail$data((0, codegen_1._) `!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n        }\n        else {\n            cxt.fail((0, codegen_1._) `${schema} !== ${data}`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dependencies_1 = require(\"../applicator/dependencies\");\nconst def = {\n    keyword: \"dependentRequired\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: dependencies_1.error,\n    code: (cxt) => (0, dependencies_1.validatePropertyDeps)(cxt),\n};\nexports.default = def;\n//# sourceMappingURL=dependentRequired.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to one of the allowed values\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValues: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"enum\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        if (!$data && schema.length === 0)\n            throw new Error(\"enum must have non-empty array\");\n        const useLoop = schema.length >= it.opts.loopEnum;\n        let eql;\n        const getEql = () => (eql !== null && eql !== void 0 ? eql : (eql = (0, util_1.useFunc)(gen, equal_1.default)));\n        let valid;\n        if (useLoop || $data) {\n            valid = gen.let(\"valid\");\n            cxt.block$data(valid, loopEnum);\n        }\n        else {\n            /* istanbul ignore if */\n            if (!Array.isArray(schema))\n                throw new Error(\"ajv implementation error\");\n            const vSchema = gen.const(\"vSchema\", schemaCode);\n            valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n        }\n        cxt.pass(valid);\n        function loopEnum() {\n            gen.assign(valid, false);\n            gen.forOf(\"v\", schemaCode, (v) => gen.if((0, codegen_1._) `${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n        }\n        function equalCode(vSchema, i) {\n            const sch = schema[i];\n            return typeof sch === \"object\" && sch !== null\n                ? (0, codegen_1._) `${getEql()}(${data}, ${vSchema}[${i}])`\n                : (0, codegen_1._) `${data} === ${sch}`;\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limitNumber_1 = require(\"./limitNumber\");\nconst multipleOf_1 = require(\"./multipleOf\");\nconst limitLength_1 = require(\"./limitLength\");\nconst pattern_1 = require(\"./pattern\");\nconst limitProperties_1 = require(\"./limitProperties\");\nconst required_1 = require(\"./required\");\nconst limitItems_1 = require(\"./limitItems\");\nconst uniqueItems_1 = require(\"./uniqueItems\");\nconst const_1 = require(\"./const\");\nconst enum_1 = require(\"./enum\");\nconst validation = [\n    // number\n    limitNumber_1.default,\n    multipleOf_1.default,\n    // string\n    limitLength_1.default,\n    pattern_1.default,\n    // object\n    limitProperties_1.default,\n    required_1.default,\n    // array\n    limitItems_1.default,\n    uniqueItems_1.default,\n    // any\n    { keyword: \"type\", schemaType: [\"string\", \"array\"] },\n    { keyword: \"nullable\", schemaType: \"boolean\" },\n    const_1.default,\n    enum_1.default,\n];\nexports.default = validation;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"maxContains\", \"minContains\"],\n    type: \"array\",\n    schemaType: \"number\",\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.contains === undefined) {\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"contains\" is ignored`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitContains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} items`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxItems\", \"minItems\"],\n    type: \"array\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `${data}.length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} characters`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxLength\", \"minLength\"],\n    type: \"string\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode, it } = cxt;\n        const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        const len = it.opts.unicode === false ? (0, codegen_1._) `${data}.length` : (0, codegen_1._) `${(0, util_1.useFunc)(cxt.gen, ucs2length_1.default)}(${data})`;\n        cxt.fail$data((0, codegen_1._) `${len} ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitLength.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    maximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    minimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    exclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    exclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => (0, codegen_1.str) `must be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => (0, codegen_1._) `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: Object.keys(KWDs),\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        cxt.fail$data((0, codegen_1._) `${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitNumber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must be multiple of ${schemaCode}`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{multipleOf: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"multipleOf\",\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, schemaCode, it } = cxt;\n        // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n        const prec = it.opts.multipleOfPrecision;\n        const res = gen.let(\"res\");\n        const invalid = prec\n            ? (0, codegen_1._) `Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n            : (0, codegen_1._) `${res} !== parseInt(${res})`;\n        cxt.fail$data((0, codegen_1._) `(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=multipleOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match pattern \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{pattern: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"pattern\",\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { data, $data, schema, schemaCode, it } = cxt;\n        // TODO regexp should be wrapped in try/catchs\n        const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n        const regExp = $data ? (0, codegen_1._) `(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n        cxt.fail$data((0, codegen_1._) `!${regExp}.test(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { missingProperty } }) => (0, codegen_1.str) `must have required property '${missingProperty}'`,\n    params: ({ params: { missingProperty } }) => (0, codegen_1._) `{missingProperty: ${missingProperty}}`,\n};\nconst def = {\n    keyword: \"required\",\n    type: \"object\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, schema, schemaCode, data, $data, it } = cxt;\n        const { opts } = it;\n        if (!$data && schema.length === 0)\n            return;\n        const useLoop = schema.length >= opts.loopRequired;\n        if (it.allErrors)\n            allErrorsMode();\n        else\n            exitOnErrorMode();\n        if (opts.strictRequired) {\n            const props = cxt.parentSchema.properties;\n            const { definedProperties } = cxt.it;\n            for (const requiredKey of schema) {\n                if ((props === null || props === void 0 ? void 0 : props[requiredKey]) === undefined && !definedProperties.has(requiredKey)) {\n                    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n                    const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`;\n                    (0, util_1.checkStrictMode)(it, msg, it.opts.strictRequired);\n                }\n            }\n        }\n        function allErrorsMode() {\n            if (useLoop || $data) {\n                cxt.block$data(codegen_1.nil, loopAllRequired);\n            }\n            else {\n                for (const prop of schema) {\n                    (0, code_1.checkReportMissingProp)(cxt, prop);\n                }\n            }\n        }\n        function exitOnErrorMode() {\n            const missing = gen.let(\"missing\");\n            if (useLoop || $data) {\n                const valid = gen.let(\"valid\", true);\n                cxt.block$data(valid, () => loopUntilMissing(missing, valid));\n                cxt.ok(valid);\n            }\n            else {\n                gen.if((0, code_1.checkMissingProp)(cxt, schema, missing));\n                (0, code_1.reportMissingProp)(cxt, missing);\n                gen.else();\n            }\n        }\n        function loopAllRequired() {\n            gen.forOf(\"prop\", schemaCode, (prop) => {\n                cxt.setParams({ missingProperty: prop });\n                gen.if((0, code_1.noPropertyInData)(gen, data, prop, opts.ownProperties), () => cxt.error());\n            });\n        }\n        function loopUntilMissing(missing, valid) {\n            cxt.setParams({ missingProperty: missing });\n            gen.forOf(missing, schemaCode, () => {\n                gen.assign(valid, (0, code_1.propertyInData)(gen, data, missing, opts.ownProperties));\n                gen.if((0, codegen_1.not)(valid), () => {\n                    cxt.error();\n                    gen.break();\n                });\n            }, codegen_1.nil);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=required.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=uniqueItems.js.map"],"names":["Object","defineProperty","exports","value","MissingRefError","ValidationError","CodeGen","Name","nil","stringify","str","_","KeywordCxt","core_1","draft7_1","dynamic_1","next_1","unevaluated_1","discriminator_1","json_schema_2019_09_1","META_SCHEMA_ID","Ajv2019","default","constructor","opts","super","dynamicRef","next","unevaluated","_addVocabularies","this","addVocabulary","forEach","v","discriminator","addKeyword","_addDefaultMetaSchema","$data","meta","call","refs","defaultMeta","getSchema","undefined","module","validate_1","enumerable","get","codegen_1","validation_error_1","ref_error_1","draft7MetaSchema","META_SUPPORT_DATA","Ajv","metaSchema","$dataMetaSchema","addMetaSchema","regexpCode","getEsmExportName","getProperty","safeStringify","strConcat","addCodeArg","_Code","IDENTIFIER","_CodeOrName","s","test","Error","toString","emptyStr","names","code","_items","length","item","_a","_str","reduce","c","_names","strs","args","i","push","plus","expr","res","mergeExprItems","splice","optimize","arg","x","Array","isArray","join","a","b","slice","JSON","replace","c1","c2","key","rx","or","and","not","operators","varKinds","ValueScopeName","ValueScope","Scope","code_1","scope_1","code_2","scope_2","GT","GTE","LT","LTE","EQ","NEQ","NOT","OR","AND","ADD","Node","optimizeNodes","optimizeNames","_constants","Def","varKind","name","rhs","render","es5","_n","var","constants","optimizeExpr","Assign","lhs","sideEffects","addExprNames","AssignOp","op","Label","label","Break","Throw","error","AnyCode","ParentNode","nodes","n","subtractNames","addNames","BlockNode","Root","Else","kind","If","condition","else","cond","e","ns","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","async","Return","Try","catch","finally","_b","Catch","Finally","replaceName","some","items","par","extScope","_values","_blockStarts","lines","_extScope","_scope","parent","_nodes","_root","prefix","scopeName","scopeValue","prefixOrName","Set","add","getScopeValue","keyOrRef","getValue","scopeRefs","scopeCode","_def","nameOrPrefix","constant","toName","_leafNode","const","_constant","let","assign","object","keyValues","if","thenBody","elseBody","_blockNode","endIf","elseIf","_elseNode","_endBlockNode","_for","node","forBody","endFor","for","forRange","forOf","arr","forIn","obj","ownProperties","break","return","try","tryBody","catchCode","finallyCode","_currNode","throw","block","body","nodeCount","endBlock","len","pop","toClose","func","funcBody","endFunc","N1","N2","andCode","mappend","orCode","y","UsedValueState","ValueError","prefixes","_prefixes","_parent","_newName","_nameGroup","index","has","nameStr","setValue","property","itemIndex","scopePath","line","scope","ref","valueKey","vs","_name","Map","set","values","_reduceValues","usedValues","getCode","valueCode","nameSet","Started","def","Completed","extendErrors","resetErrorsCount","reportExtraError","reportError","keyword$DataError","keywordError","util_1","names_1","addError","gen","errObj","err","vErrors","errors","returnErrors","it","errs","validateName","schemaEnv","$async","message","keyword","schemaType","cxt","errorPaths","overrideAllErrors","compositeRule","allErrors","errorObjectCode","errsCount","schemaValue","data","instancePath","errorPath","errSchemaPath","verbose","E","schemaPath","params","propertyName","schema","parentSchema","createErrors","errorInstancePath","errorSchemaPath","topSchemaRef","messages","extraErrorProps","errorObject","instPath","getErrorPath","Type","Str","schPath","resolveSchema","getCompilingSchema","resolveRef","compileSchema","SchemaEnv","resolve_1","env","dynamicAnchors","schemaId","root","baseId","normalizeId","localRefs","sch","_sch","rootId","getFullPath","uriResolver","_ValidationError","schemaCxt","parentData","parentDataProperty","dataNames","dataPathArr","dataLevel","dataTypes","definedProperties","source","jtd","self","sourceCode","_compilations","validateFunctionCode","validateCode","process","validate","Function","makeValidate","scopeValues","props","evaluated","dynamicProps","dynamicItems","logger","delete","inlineOrCompile","inlineRef","inlineRefs","schEnv","s2","s1","resolve","schemas","p","parse","refPath","_getFullPath","keys","getJsonPointer","id","schOrRef","schId","resolveUrl","schOrFunc","PREVENT_SCOPE_CHANGE","parsedRef","fragment","part","split","partSchema","unescapeFragment","$ref","schemaHasRulesButRef","RULES","valCxt","rootData","json","jsonPos","jsonLen","jsonPart","resolver","msg","missingRef","missingSchema","getSchemaRefs","equal","traverse","SIMPLE_INLINED","limit","hasRef","countKeys","REF_KEYWORDS","count","Infinity","eachItem","normalize","serialize","TRAILING_SLASH_HASH","ANCHOR","baseIds","pathPrefix","schemaRefs","allKeys","jsonPtr","parentJsonPtr","fullPath","addRef","_resolve","ambiguos","checkAmbiguosRef","addAnchor","anchor","$anchor","$dynamicAnchor","sch1","sch2","getRules","isJSONType","jsonTypes","groups","number","type","rules","string","array","types","integer","boolean","null","post","all","keywords","checkStrictMode","useFunc","setEvaluated","evaluatedPropsToName","mergeEvaluated","unescapeJsonPointer","escapeJsonPointer","escapeFragment","schemaRefOrVal","schemaHasRules","checkUnknownRules","alwaysValidSchema","toHash","strictSchema","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","ps","hash","decodeURIComponent","encodeURIComponent","xs","f","Math","max","snippets","mode","warn","dataProp","dataPropType","jsPropertySyntax","isNumber","Num","shouldUseGroup","group","rule","shouldUseRule","definition","implements","kwd","schemaHasRulesForType","boolOrEmptySchema","topBoolOrEmptySchema","errors_1","boolError","falseSchemaError","schemaCode","valid","reportTypeError","checkDataTypes","checkDataType","coerceAndCheckDataType","getJSONTypes","getSchemaTypes","DataType","rules_1","applicability_1","ts","every","includes","nullable","coerceTo","coerceTypes","filter","t","COERCIBLE","coerceToTypes","checkTypes","wrongType","strictNumbers","Wrong","dataType","coerced","coerceSpecificType","assignParentData","coerceData","strictNums","correct","Correct","numCond","_cond","notObj","typeError","getTypeErrorContext","assignDefaults","assignDefault","prop","defaultValue","childData","useDefaults","ty","properties","getData","boolSchema_1","dataType_1","dataType_2","defaults_1","keyword_1","subschema_1","validateFunction","funcSourceUrl","destructureValCxtES5","destructureValCxt","schemaCxtHasRules","isSchemaObj","checkKeywords","ignoreKeywordsWithRef","checkRefsAndKeywords","typeAndKeywords","schemaKeywords","commentKeyword","$comment","rootName","typeErrors","groupKeywords","iterateKeywords","strictTypes","includesType","strictTypesError","withTypes","narrowSchemaTypes","checkContextTypes","allowUnionTypes","checkMultipleTypes","hasApplicableType","kwdT","schTs","checkKeywordTypes","checkStrictTypes","keywordCode","checkNoDefault","resetEvaluated","assignEvaluated","returnResults","topSchemaObjCode","validateKeywordUsage","validSchemaType","allowUndefined","trackErrors","result","successAction","failAction","failResult","pass","fail","fail$data","invalid$data","append","errorParams","setParams","_error","$dataError","reset","ok","block$data","codeBlock","$dataValid","check$data","validateSchema","st","wrong$DataType","validateSchemaRef","invalid$DataSchema","subschema","appl","getSubschema","extendSubschemaData","extendSubschemaMode","nextContext","updateContext","checkAsyncSchema","subSchemaObjCode","subschemaCode","mergeValidEvaluated","ruleType","funcKeywordCode","macroKeywordCode","compile","JSON_POINTER","RELATIVE_JSON_POINTER","jsonPointer","matches","exec","up","errorMsg","segments","segment","pointerType","modifyData","useKeyword","macroSchema","macro","schemaRef","checkAsyncKeyword","validateRef","assignValid","_await","passCxt","passContext","passSchema","callValidateCode","modifying","reportErrs","ruleErrs","validateAsync","validateErrs","validateSync","addErrs","deps","dependencies","prototype","hasOwnProperty","errorsText","schemaProp","dpType","dataContextProps","_nextData","jtdDiscriminator","jtdMetadata","compile_1","codegen_2","$dataRefSchema","uri_1","defaultRegExp","flags","RegExp","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","errorDataPath","format","jsonPointers","extendRefs","missingRefs","processCode","strictDefaults","strictKeywords","uniqueItems","unknownFormats","cache","ajvErrors","deprecatedOptions","unicode","requiredOptions","o","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","strict","_optz","regExp","strictTuples","strictRequired","loopRequired","loopEnum","addUsedSchema","validateFormats","unicodeRegExp","int32range","formats","_loading","_cache","noLogs","console","log","getLogger","formatOpt","checkOptions","_metaOpts","getMetaSchemaOptions","addInitialFormats","addInitialKeywords","addInitialSchemas","_dataRefSchema","$id","schemaKeyRef","_meta","_addSchema","_compileSchemaEnv","compileAsync","loadSchema","runCompileAsync","_schema","loadMetaSchema","$schema","_compileAsync","checkLoaded","loadMissingSchema","_loadSchema","addSchema","_validateSchema","_checkUnique","throwOrLogError","keyRef","getSchEnv","removeSchema","_removeAllSchemas","clear","cacheKey","definitions","kwdOrDef","checkKeyword","addRule","keywordMetaschema","k","getKeyword","removeKeyword","findIndex","addFormat","separator","dataVar","map","text","keywordsJsonPointers","seg","schemaOrData","regex","startsWith","_compileMetaSchema","currentOpts","checkOpts","options","opt","optsSchemas","defs","metaOpts","KEYWORD_NAME","ruleGroup","find","before","addBeforeRule","_rule","$dataRef","anyOf","applicator","content","core","metadata","validation","with$data","ajv","ucs2length","pos","charCodeAt","uri","validateAdditionalItems","validateItems","additionalProperty","removeAdditional","allSchemaProperties","patProps","patternProperties","deleteAdditional","additionalPropertyCode","applyAdditionalSchema","definedProp","propsSchema","isOwnProperty","usePattern","isAdditional","schCxt","validateUnion","min","minContains","maxContains","validateItemsWithCount","schValid","checkLimits","_valid","validateSchemaDeps","validatePropertyDeps","depsCount","property_ies","missingProperty","propDeps","schDeps","propertyDeps","schemaDeps","splitDependencies","missing","hasProperty","propertyInData","depProp","checkReportMissingProp","checkMissingProp","reportMissingProp","dependencies_1","ifClause","then","hasThen","hasSchema","hasElse","validateIf","validateClause","additionalItems_1","prefixItems_1","items_1","items2020_1","contains_1","propertyNames_1","additionalProperties_1","properties_1","patternProperties_1","not_1","anyOf_1","oneOf_1","allOf_1","if_1","thenElse_1","draft2020","validateTuple","validateArray","extraItems","schArr","l","fullTuple","minItems","maxItems","checkStrictTuple","prefixItems","passing","util_2","patterns","alwaysValidPatterns","checkProperties","allowMatchingProperties","checkMatchingProperties","pat","validateProperties","alwaysValid","validatePatternProperties","additionalProperties","allProps","hasDefault","applyPropertySchema","schemaProperties","noPropertyInData","hasPropFunc","schemaMap","context","dataAndSchema","newRegExp","pattern","u","validArr","notValid","id_1","ref_1","callRef","getValidate","callRootRef","schOrEnv","callValidate","schName","inlineRefSchema","addErrorsFrom","addEvaluatedFrom","schEvaluated","callAsyncRef","types_1","discrError","tagName","DiscrError","Tag","tag","oneOf","mapping","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","required","addMapping","enum","tagValue","getMapping","Mapping","validateMapping","validation_1","applicator_1","format_1","metadata_1","draft7Vocabularies","metadataVocabulary","contentVocabulary","dynamicAnchor","_getValidate","_dynamicRef","_callRef","dynamicAnchor_1","dynamicRef_1","recursiveAnchor_1","recursiveRef_1","dynamic","fmts","fDef","fType","callFormat","validData","invalidFmt","validate$DataFormat","formatDef","unknownMsg","unknownFormat","fmtType","fmtRef","fmtDef","fmt","getFormat","validCondition","validateFormat","dependentRequired_1","dependentSchemas_1","limitContains_1","unevaluatedProperties_1","unevaluatedItems_1","unevaluatedProperty","unevaluatedPropCode","evaluatedProps","unevaluatedDynamic","unevaluatedStatic","equal_1","useLoop","eql","getEql","vSchema","equalCode","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","contains","comp","ucs2length_1","ops","KWDs","maximum","okStr","minimum","exclusiveMaximum","exclusiveMinimum","prec","multipleOfPrecision","invalid","loopAllRequired","allErrorsMode","loopUntilMissing","exitOnErrorMode","requiredKey","j","itemTypes","loopN","indices","loopN2","outer"],"sourceRoot":""}