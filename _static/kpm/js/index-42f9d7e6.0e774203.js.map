{"version":3,"file":"js/index-42f9d7e6.0e774203.js","mappings":"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","sources":["webpack://pipeline-manager/./src/App.vue","webpack://pipeline-manager/./src/App.vue?7ccd","webpack://pipeline-manager/./src/components/Anchor.vue?e9d6","webpack://pipeline-manager/./src/components/Anchor.vue","webpack://pipeline-manager/./src/components/Anchor.vue?86c5","webpack://pipeline-manager/./src/components/Home.vue","webpack://pipeline-manager/./src/components/NavBar.vue","webpack://pipeline-manager/./src/components/DropdownItem.vue","webpack://pipeline-manager/./src/components/DropdownItem.vue?4b29","webpack://pipeline-manager/./src/components/Notifications.vue","webpack://pipeline-manager/./src/components/Notifications.vue?e79f","webpack://pipeline-manager/./src/components/Settings.vue","webpack://pipeline-manager/./src/components/Settings.vue?b3ff","webpack://pipeline-manager/./src/components/SaveMenu.vue","webpack://pipeline-manager/./src/components/SaveMenu.vue?445d","webpack://pipeline-manager/./src/components/BlurPanel.vue","webpack://pipeline-manager/./src/components/BlurPanel.vue?5607","webpack://pipeline-manager/./src/components/saveConfiguration.ts","webpack://pipeline-manager/./src/components/NavBar.vue?01fd","webpack://pipeline-manager/./src/components/TerminalPanel.vue?febe","webpack://pipeline-manager/./src/components/Terminal.vue","webpack://pipeline-manager/./src/components/Terminal.vue?7d4c","webpack://pipeline-manager/./src/components/TerminalPanel.vue?4ba6","webpack://pipeline-manager/./src/components/TerminalPanel.vue","webpack://pipeline-manager/./src/components/LoadingScreen.vue","webpack://pipeline-manager/./src/components/LoadingScreen.vue?f185","webpack://pipeline-manager/./src/components/Home.vue?08c6","webpack://pipeline-manager/./src/components/Notification.vue","webpack://pipeline-manager/./src/components/NotificationBadge.vue","webpack://pipeline-manager/./src/components/NotificationBadge.vue?8d2c","webpack://pipeline-manager/./src/components/Notification.vue?deb2","webpack://pipeline-manager/./src/components/Tooltip.vue","webpack://pipeline-manager/./src/components/Tooltip.vue?f9bc"],"sourcesContent":["<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div id=\"app\">\n        <router-view />\n    </div>\n</template>\n","import { render } from \"./App.vue?vue&type=template&id=2102b6b3\"\nconst script = {}\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { computed, ref, defineComponent } from 'vue';\nimport { useGraph, useViewModel } from '@baklavajs/renderer-vue';\nimport useDragMove from '../custom/useDragMove';\nexport default defineComponent({\n    props: {\n        position: {\n            type: Object,\n            required: true,\n        },\n        rightclickCallback: {\n            required: true,\n            type: Function,\n        },\n    },\n    setup(props) {\n        // any definition is an ad-hoc solution as we don't have our graph definition\n        const { graph } = useGraph();\n        const { viewModel } = useViewModel();\n        const radius = 7.5;\n        const styles = computed(() => ({\n            cx: `${(props.position.x + graph.value.panning.x) * graph.value.scaling}px`,\n            cy: `${(props.position.y + graph.value.panning.y) * graph.value.scaling}px`,\n            r: `${radius * graph.value.scaling}px`,\n        }));\n        const dragMove = useDragMove(ref(props.position));\n        const stopDrag = () => {\n            dragMove.onPointerUp();\n            document.removeEventListener('pointermove', dragMove.onPointerMove);\n            document.removeEventListener('pointerup', stopDrag);\n        };\n        const startDrag = (ev) => {\n            if (viewModel.value.editor.readonly)\n                return;\n            dragMove.onPointerDown(ev);\n            document.addEventListener('pointermove', dragMove.onPointerMove);\n            document.addEventListener('pointerup', stopDrag);\n        };\n        return {\n            styles,\n            startDrag,\n        };\n    },\n});\n","import { render } from \"./Anchor.vue?vue&type=template&id=5f3d208c&ts=true\"\nimport script from \"./Anchor.vue?vue&type=script&lang=ts\"\nexport * from \"./Anchor.vue?vue&type=script&lang=ts\"\n\nimport \"./Anchor.vue?vue&type=style&index=0&id=5f3d208c&lang=scss\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    return (_openBlock(), _createElementBlock(\"g\", {\n        onPointerdown: [\n            _cache[0] || (_cache[0] = _withModifiers(\n            //@ts-ignore\n            (...args) => (_ctx.startDrag && _ctx.startDrag(...args)), [\"left\"])),\n            _cache[1] || (_cache[1] = _withModifiers(\n            //@ts-ignore\n            (...args) => (_ctx.rightclickCallback && _ctx.rightclickCallback(...args)), [\"right\", \"exact\"]))\n        ],\n        class: \"anchor\"\n    }, [\n        _createElementVNode(\"circle\", {\n            style: _normalizeStyle(_ctx.styles)\n        }, null, 4)\n    ], 32));\n}\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nThe entrypoint of the application.\n-->\n\n<template>\n    <div>\n        <LoadingScreen v-if=\"!finishedLoading\" />\n        <div id=\"container\">\n            <NavBar />\n            <Editor\n                class=\"inner-editor\"\n                :view-model=\"editorManager.baklavaView\"\n                @loadFinish=\"handleLoadFinish\"\n            />\n            <TerminalPanel v-show=\"finishedLoading && !hideHud\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\nimport NavBar from './NavBar.vue';\nimport EditorManager from '../core/EditorManager.js';\nimport TerminalPanel from './TerminalPanel.vue';\nimport LoadingScreen from './LoadingScreen.vue';\nimport Editor from '../custom/Editor.vue';\nimport '@baklavajs/themes/dist/classic.css';\n\nexport default {\n    components: {\n        NavBar,\n        Editor,\n        TerminalPanel,\n        LoadingScreen,\n    },\n    setup() {\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const finishedLoading = ref(false);\n\n        const cache = {};\n        // Importing all assets to a cache so that they can be accessed dynamically during runtime\n        function importAll(r) {\n            r.keys().forEach((key) => (cache[key] = r(key))); // eslint-disable-line no-return-assign,max-len\n        }\n        try {\n            importAll(require.context('../../assets', true, /\\.(svg|png|jpg|jpeg|gif|webp|avif)$/));\n        } catch (e) {\n            // assets directory not found\n        } finally {\n            editorManager.baklavaView.cache = cache;\n        }\n\n        const hideHud = computed(() => editorManager.baklavaView.editor.hideHud);\n\n        const handleLoadFinish = () => {\n            finishedLoading.value = true;\n        };\n\n        return {\n            editorManager,\n            hideHud,\n            handleLoadFinish,\n            finishedLoading,\n        };\n    },\n};\n</script>\n\n<style lang=\"scss\">\n</style>\n","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nNavigation bar of the application.\nDisplays user interface and main details about the Pipeline Manager status.\n-->\n\n<script>\nimport { markRaw, ref, provide } from 'vue';\nimport { toPng, toSvg } from 'html-to-image';\nimport jsonlint from 'jsonlint';\nimport { useViewModel } from '@baklavajs/renderer-vue';\nimport { api as fullscreen } from 'vue-fullscreen';\nimport Logo from '../icons/Logo.vue';\nimport Arrow from '../icons/Arrow.vue';\nimport Expand from '../icons/Expand.vue';\nimport Collapse from '../icons/Collapse.vue';\nimport Run from '../icons/Run.vue';\nimport Validate from '../icons/Validate.vue';\nimport Backend from '../icons/Backend.vue';\nimport Bell from '../icons/Bell.vue';\nimport Cube from '../icons/Cube.vue';\nimport CassetteStop from '../icons/CassetteStop.vue';\nimport DropdownItem from './DropdownItem.vue';\nimport Cogwheel from '../icons/Cogwheel.vue';\nimport Magnifier from '../icons/Magnifier.vue';\nimport EditorManager from '../core/EditorManager';\nimport NotificationHandler from '../core/notifications';\nimport { notificationStore } from '../core/stores';\nimport runInfo from '../core/communication/runInformation';\nimport getExternalApplicationManager from '../core/communication/ExternalApplicationManager';\nimport Notifications from './Notifications.vue';\nimport Settings from './Settings.vue';\nimport SaveMenu from './SaveMenu.vue';\nimport BlurPanel from './BlurPanel.vue';\nimport CustomSidebar from '../custom/CustomSidebar.vue';\nimport { saveSpecificationConfiguration, saveGraphConfiguration } from './saveConfiguration.ts';\n\nimport icons from '../icons';\n\nimport InputInterface from '../interfaces/InputInterface.js';\nimport InputInterfaceComponent from '../interfaces/InputInterface.vue';\nimport { brokenImage } from '../../../resources/broken_image.js';\nimport {\n    startTransaction, commitTransaction,\n} from '../core/History.ts';\n\n/* eslint-disable no-param-reassign */\nexport default {\n    components: {\n        Logo,\n        Arrow,\n        Run,\n        CassetteStop,\n        Validate,\n        Backend,\n        Bell,\n        DropdownItem,\n        Expand,\n        Collapse,\n        Notifications,\n        Magnifier,\n        Cogwheel,\n        Settings,\n        Cube,\n        SaveMenu,\n        BlurPanel,\n        CustomSidebar,\n    },\n    computed: {\n        dataflowGraphName() {\n            return this.editorManager.editor.graphName;\n        },\n        editorTitle() {\n            if (this.graphName === undefined) {\n                return this.appName;\n            }\n            const normalizedGraphName = this.graphName.trim();\n            return normalizedGraphName === '' ? this.appName : normalizedGraphName;\n        },\n        preview() {\n            const urlParams = new URLSearchParams(window.location.search);\n            if (urlParams.has('preview')) {\n                return urlParams.get('preview') === 'true';\n            }\n            return false;\n        },\n        hideHud() {\n            return this.editorManager.editor.hideHud;\n        },\n        readonly() {\n            return this.editorManager.editor.readonly;\n        },\n        settingsOpen() {\n            return this.panels.settings.isOpen;\n        },\n        notificationsOpen() {\n            return this.panels.notifications.isOpen;\n        },\n        paletteOpen() {\n            return this.panels.palette.isOpen;\n        },\n        backendStatusOpen() {\n            return this.panels.backendStatus.isOpen;\n        },\n        notificationsTooltipClasses() {\n            return {\n                last: !this.hideHud,\n            };\n        },\n        backendStatusTooltipClasses() {\n            return {\n                last: this.hideHud && this.externalApplicationManager.backendAvailable,\n            };\n        },\n        settingsTooltipClasses() {\n            return {\n                last: this.hideHud && !this.externalApplicationManager.backendAvailable,\n            };\n        },\n        navbarItems() {\n            const { navbarItems } = this.editorManager.baklavaView;\n            navbarItems.forEach((item) => {\n                // If there is no such icon then assets are checked and used as a fallback\n                if (icons[item.iconName] === undefined) {\n                    item.icon = markRaw(icons.Placeholder);\n                    item.iconName = this.editorManager.baklavaView.cache[`./${item.iconName}`];\n                } else {\n                    item.icon = markRaw(icons[item.iconName]);\n                }\n            });\n            return navbarItems;\n        },\n        leftButtonsQuantity() {\n            return 2 + (\n                (this.externalApplicationManager.backendAvailable) ? this.navbarItems.length : 0\n            ) + (\n                (this.editorManager.editor.isInSubgraph()) ? 1 : 0\n            );\n        },\n        rightButtonsQuantity() {\n            return 3 + ((this.externalApplicationManager.backendAvailable) ? 1 : 0);\n        },\n        isNavBarCompressed() {\n            return (\n                this.isMounted &&\n                this.windowWidth <\n                (this.leftButtonsQuantity + this.rightButtonsQuantity) * this.buttonWidth\n                + this.searchbarWidthMultiplcity * this.buttonWidth // searchbar width\n                + 0.5 * this.buttonWidth // offset\n            );\n        },\n        mobileClasses() {\n            return { 'compressed-mobile': this.isNavBarCompressed };\n        },\n        nodesearchInputStyles() {\n            return {\n                width: `${this.searchbarWidthMultiplcity * this.buttonWidth}px`,\n            };\n        },\n        leftContainerStyles() {\n            if (this.isNavBarCompressed) {\n                return { 'flex-grow': this.leftButtonsQuantity };\n            }\n            return {};\n        },\n        rightContainerStyles() {\n            if (this.isNavBarCompressed) {\n                return {\n                    'flex-grow': this.rightButtonsQuantity,\n                    'justify-content': 'right',\n                };\n            }\n            return { 'justify-content': 'right' };\n        },\n        activeNavbarItems() {\n            return this.activeNavbarItemsNames;\n        },\n    },\n    watch: {\n        dataflowGraphName(newValue) {\n            this.graphName = newValue;\n\n            // Resetting the save configurations\n            saveSpecificationConfiguration.reset();\n            saveGraphConfiguration.reset();\n        },\n        graphName(newValue) {\n            this.editorManager.updateSubgraphName(newValue);\n\n            // Resetting the save configurations\n            saveSpecificationConfiguration.reset();\n            saveGraphConfiguration.reset();\n        },\n        searchEditorNodesQuery(newValue) {\n            const { viewModel } = useViewModel();\n            if (newValue === '') {\n                viewModel.value.editor.searchQuery = undefined;\n                return;\n            }\n            viewModel.value.editor.searchQuery = newValue.toLowerCase();\n        },\n        navbarItems(newValue) {\n            // Setup initial navbarItems\n            this.activeNavbarItemsNames = newValue.map((item) => item.procedureName);\n        },\n    },\n    data() {\n        const editorManager = EditorManager.getEditorManagerInstance();\n        const graphName = editorManager.baklavaView.editor.graphName ?? '';\n        const appName = process.env.VUE_APP_EDITOR_TITLE ?? 'Pipeline Manager';\n\n        const editorTitleInterface = new InputInterface(\n            'Graph name',\n            '',\n        ).setPort(false);\n        editorTitleInterface.componentName = 'InputInterface';\n        editorTitleInterface.setComponent(markRaw(InputInterfaceComponent));\n\n        const searchEditorNodesQuery = ref('');\n        // Setup custom hook, which is executed when procedure starts or stops running\n        runInfo.setHook(this.updateActiveNavbarItems);\n\n        // Mock hoveredOver to suppress warning when creating Side Panel\n        // hoveredOver over is needed only for temporary connections, which are not used here\n        provide('hoveredOver', () => {});\n\n        return {\n            appName,\n            graphName,\n            editorManager,\n            editorTitleInterface,\n            /* create instance of external manager to control\n            connection, dataflow and specification\n            */\n            externalApplicationManager: getExternalApplicationManager(),\n            activeNavbarItemsNames: [],\n            saveConfiguration: saveGraphConfiguration,\n            saveGraphConfiguration,\n            saveSpecificationConfiguration,\n            saveMenuShow: false,\n            editTitle: false,\n            notificationStore,\n            showSearch: false,\n            crossIcon: markRaw(icons.Cross),\n            searchEditorNodesQuery,\n            navbarGuard: false,\n            isMounted: false,\n            windowWidth: 0,\n            buttonWidth: 0,\n            searchbarWidthMultiplcity: 4,\n            hoverInfo: {\n                isHovered: false,\n                hoveredPanel: undefined,\n            },\n            // Toggleable panels and their configuration\n            panels: {\n                notifications: {\n                    isOpen: false,\n                    class: '.notifications',\n                    iconRef: 'notifications',\n                    showTransform: '-495px, 0px',\n                    hideTransform: '0px, 0px',\n                },\n                palette: {\n                    isOpen: !this.$isMobile,\n                    class: '.baklava-node-palette',\n                    iconRef: 'palette',\n                    showTransform: '0px, 0px',\n                    hideTransform: '-450px, 0px',\n                },\n                backendStatus: {\n                    isOpen: false,\n                    class: '.backend-status',\n                    iconRef: 'backend',\n                    showTransform: '-89%, 0px',\n                    hideTransform: '-89%, -180px',\n                },\n                settings: {\n                    isOpen: false,\n                    class: '.settings-panel',\n                    iconRef: 'settings',\n                    showTransform: '-495px, 0px',\n                    hideTransform: '0px, 0px',\n                },\n                nodesearch: {\n                    isOpen: false,\n                },\n                fullscreen: {\n                    isOpen: fullscreen.isFullscreen,\n                },\n            },\n        };\n    },\n    methods: {\n        /**\n         * Loads nodes' specification from text structure.\n         * It first validates the specification file. If the validation is successful the\n         * specification is loaded. Otherwise a proper log is printed to the user.\n         *\n         * @param {string} specText specification to validate and load\n         */\n        loadSpecification(specText) {\n            const validationErrors = EditorManager.validateSpecification(specText);\n            if (Array.isArray(validationErrors) && validationErrors.length) {\n                NotificationHandler.terminalLog('error', 'Specification is invalid', validationErrors);\n                return;\n            }\n            this.editorManager.updateEditorSpecification(specText).then(({ errors, warnings }) => {\n                if (Array.isArray(warnings) && warnings.length) {\n                    NotificationHandler.terminalLog(\n                        'warning',\n                        'Issue when loading specification',\n                        warnings,\n                    );\n                }\n                if (Array.isArray(errors) && errors.length) {\n                    NotificationHandler.terminalLog('error', 'Specification is invalid', errors);\n                }\n            });\n        },\n\n        createNewGraphCallback() {\n            startTransaction();\n            this.editorManager.editor.deepCleanEditor(false);\n            commitTransaction();\n        },\n\n        /**\n         * Event handler that loads a specification passed by the user\n         * and tries to load it into a new environment it.\n         */\n        loadSpecificationCallback() {\n            const file = document.getElementById('load-spec-button').files[0];\n            if (!file) return;\n\n            const fileReader = new FileReader();\n\n            fileReader.onload = () => {\n                this.loadSpecification(fileReader.result);\n            };\n\n            fileReader.readAsText(file);\n            document.getElementById('load-spec-button').value = '';\n        },\n\n        togglePanel(panel, disable = false) {\n            const panelSelector = document.querySelector(panel.class);\n            const iconRef = this.$refs[panel.iconRef];\n\n            if (disable) {\n                panel.isOpen = false;\n            } else {\n                panel.isOpen = !panel.isOpen;\n            }\n            const isPanelOpen = panel.isOpen;\n\n            if (panelSelector) {\n                panelSelector.style.transition = `transform ${isPanelOpen ? '0.4' : '0.2'}s`;\n                panelSelector.style.transform = `translate(${\n                    isPanelOpen ? panel.showTransform : panel.hideTransform\n                })`;\n\n                iconRef.classList.toggle('open', isPanelOpen);\n            }\n        },\n\n        /**\n         * Toggle fullscreen mode.\n         *\n         * For iframe, the allow=\"fullscreen\" attribute must be set.\n         */\n        toggleFullscreen() {\n            if (!fullscreen.isEnabled) {\n                NotificationHandler.showToast('error', 'Fullscreen is not supported');\n                return;\n            }\n            fullscreen.toggle();\n        },\n\n        clickOutside(event, panel) {\n            const icon = this.$refs[panel.iconRef];\n            if (!icon) return;\n\n            const currentElement = event.target;\n            if (currentElement instanceof Node && (icon.contains(currentElement)\n                                                   || icon === currentElement)) {\n                return;\n            }\n\n            this.togglePanel(panel, true);\n        },\n\n        /**\n         * Loads nodes' specification from JSON structure.\n         */\n        loadDataflow(dataflow) {\n            this.editorManager.loadDataflow(dataflow).then(({ errors, warnings }) => {\n                if (Array.isArray(warnings) && warnings.length) {\n                    NotificationHandler.terminalLog(\n                        'warning',\n                        'Issue when loading dataflow',\n                        warnings,\n                    );\n                }\n                if (Array.isArray(errors) && errors.length) {\n                    const messageTitle = process.env.VUE_APP_GRAPH_DEVELOPMENT_MODE === 'true' ?\n                        'Softload enabled, errors found while loading the dataflow' :\n                        'Dataflow is invalid';\n                    NotificationHandler.terminalLog('error', messageTitle, errors);\n                }\n            });\n        },\n        /**\n         * Event handler that Loads a dataflow from a file.\n         * It the loading is successful it is loaded as the current dataflow.\n         * Otherwise the user is alerted with a feedback message.\n         */\n        loadDataflowCallback() {\n            const file = document.getElementById('load-dataflow-button').files[0];\n            if (!file) return;\n\n            const fileReader = new FileReader();\n\n            fileReader.onload = async () => {\n                let dataflow = null;\n                try {\n                    dataflow = jsonlint.parse(fileReader.result);\n                } catch (exception) {\n                    if (exception instanceof SyntaxError) {\n                        NotificationHandler.terminalLog(\n                            'error',\n                            'Not a proper JSON file',\n                            exception.toString(),\n                        );\n                    } else {\n                        NotificationHandler.terminalLog(\n                            'error',\n                            'Unknown error',\n                            exception.toString(),\n                        );\n                    }\n                    return;\n                }\n\n                await this.externalApplicationManager.notifyAboutChange('graph_on_change', {\n                    dataflow,\n                });\n\n                this.loadDataflow(dataflow);\n            };\n\n            fileReader.readAsText(file);\n            document.getElementById('load-dataflow-button').value = '';\n        },\n\n        async requestDataflowAction(actionItem) {\n            if (!this.externalApplicationManager.backendAvailable) return;\n            if (\n                this.isInProgress(actionItem.procedureName) &&\n                this.isStoppable(actionItem.procedureName)\n            ) {\n                await this.externalApplicationManager.requestDataflowStop(actionItem.procedureName);\n                return;\n            }\n            const activeAction = this.activeNavbarItemsNames.includes(actionItem.procedureName);\n            if (activeAction && !this.isInProgress(actionItem.procedureName)) {\n                await this.externalApplicationManager.requestDataflowAction(\n                    actionItem.procedureName,\n                );\n            } else if (activeAction) {\n                NotificationHandler.terminalLog('warning', `${actionItem.name} cannot be stopped`);\n            }\n        },\n\n        async requestDataflowExport(prompt = true) {\n            if (!this.externalApplicationManager.backendAvailable) return;\n            const result = await this.externalApplicationManager.requestDataflowExport();\n\n            if (result !== false) {\n                // Copy the saveConfiguration object to prevent changing the original object\n                this.saveConfiguration = { ...saveGraphConfiguration };\n                this.saveConfiguration.saveName = (\n                    result.filename ?? saveGraphConfiguration.saveName);\n                if (prompt) {\n                    this.saveConfiguration.readonly = undefined;\n                    this.saveConfiguration.hideHud = undefined;\n                    this.saveConfiguration.position = undefined;\n                    this.saveConfiguration.saveCallback =\n                        () => {\n                            this.saveConfiguration.saveCallbackCustomFormat(\n                                result.content,\n                            );\n                            this.saveConfiguration = saveGraphConfiguration;\n                        };\n                    this.saveMenuShow = true;\n                } else {\n                    this.saveConfiguration.saveCallbackCustomFormat(\n                        result.content,\n                    );\n                }\n            }\n        },\n\n        importDataflow() {\n            if (!this.externalApplicationManager.backendAvailable) return;\n            const file = document.getElementById('request-dataflow-button').files[0];\n            if (!file) return;\n\n            const fileReader = new FileReader();\n            fileReader.onload = async () => {\n                await this.externalApplicationManager.importDataflow(fileReader.result);\n            };\n            fileReader.readAsText(file);\n        },\n\n        exportToPng() {\n            // Get editor with data flow\n            const nodeEditor = document.querySelector('.inner-editor');\n            // Exclude node palette\n            const filter = (node) => !node.classList?.contains('baklava-node-palette');\n\n            toPng(nodeEditor, { filter, imagePlaceholder: brokenImage })\n                .then((dataUrl) => {\n                    const downloadLink = document.createElement('a');\n                    downloadLink.download = 'dataflow.png';\n                    downloadLink.href = dataUrl;\n                    downloadLink.dataset.downloadurl = [\n                        dataUrl,\n                        downloadLink.download,\n                        downloadLink.href,\n                    ].join(':');\n                    document.body.appendChild(downloadLink);\n                    downloadLink.click();\n                    document.body.removeChild(downloadLink);\n                })\n                .catch((error) => {\n                    NotificationHandler.showToast('error', `Export to PNG failed: ${error}`);\n                });\n        },\n\n        exportToSvg() {\n            // Get editor with data flow\n            const nodeEditor = document.querySelector('.inner-editor');\n            // Exclude node palette\n            const filter = (node) => !node.classList?.contains('baklava-node-palette');\n            toSvg(nodeEditor, { filter, imagePlaceholder: brokenImage })\n                .then((dataUrl) => {\n                    const downloadLink = document.createElement('a');\n                    downloadLink.download = 'dataflow.svg';\n                    downloadLink.href = dataUrl;\n                    downloadLink.dataset.downloadurl = [\n                        dataUrl,\n                        downloadLink.download,\n                        downloadLink.href,\n                    ].join(':');\n                    document.body.appendChild(downloadLink);\n                    downloadLink.click();\n                    document.body.removeChild(downloadLink);\n                })\n                .catch((error) => {\n                    NotificationHandler.showToast('error', `Export to SVG failed: ${error}`);\n                });\n        },\n\n        onClickNodeSearch() {\n            this.togglePanel(this.panels.nodesearch);\n            if (this.panels.nodesearch.isOpen) {\n                this.$nextTick(() => this.$refs.searchbarInput.focus());\n            }\n        },\n\n        openNavbar() {\n            this.navbarGuard = true;\n            this.$refs.navbar.classList.add('isHovered');\n        },\n\n        handleMouseLeave(ev) {\n            if (!this.$refs.navbar.classList.contains('isHovered')) return;\n            // check if event targets UI, if not hide NavBar\n            if (\n                (this.hideHud || this.$isMobile) &&\n                !this.editorManager.baklavaView.displayedGraph.sidebar.visible &&\n                !ev.target.closest('.baklava-node-palette')) {\n                // Ignore first event to prevent NavBar from hiding when side bar is opened\n                if (this.navbarGuard) {\n                    this.navbarGuard = false;\n                } else {\n                    this.togglePanel(this.panels.palette, true);\n                    this.$refs.navbar.classList.remove('isHovered');\n                }\n            }\n        },\n\n        updateHoverInfo(name, isRunnable = false) {\n            if (!isRunnable || this.activeNavbarItemsNames.includes(name) ||\n                this.isInProgress(name)) {\n                this.hoverInfo.hoveredPanel = name;\n                this.hoverInfo.isHovered = true;\n            }\n        },\n\n        resetHoverInfo(name) {\n            if (this.hoverInfo.hoveredPanel === name) {\n                this.hoverInfo.hoveredPanel = undefined;\n                this.hoverInfo.isHovered = false;\n            }\n        },\n        isHovered(name) {\n            return this.hoverInfo.hoveredPanel === name && this.hoverInfo.isHovered;\n        },\n\n        isInProgress(procedure) {\n            return runInfo.get(procedure).inProgress;\n        },\n\n        isStoppable(procedure) {\n            return this.externalApplicationManager\n                .appCapabilities.stoppable_methods?.includes(procedure) ?? true;\n        },\n\n        getNavbarActionTooltip(actionItem) {\n            if (\n                this.isStoppable(actionItem.procedureName) &&\n                this.isInProgress(actionItem.procedureName)\n            ) {\n                if (actionItem.stopName !== undefined) return actionItem.stopName;\n                return `Stop ${actionItem.name}`;\n            }\n            return actionItem.name;\n        },\n\n        updateActiveNavbarItems() {\n            const { navbarItems } = this;\n            let activeItems = new Set(navbarItems.map((item) => item.procedureName));\n            navbarItems.filter((item) => this.isInProgress(item.procedureName)).forEach((item) => {\n                // Intersection of current activeItems and items allowToRunInParallelWith\n                activeItems = new Set(\n                    (item.allowToRunInParallelWith ?? []).filter((name) => activeItems.has(name)),\n                ).add(item.procedureName);\n            });\n            this.activeNavbarItemsNames = Array.from(activeItems);\n        },\n        returnFromSubgraph() {\n            this.editorManager.returnFromSubgraph();\n            this.resetHoverInfo('subgraphReturn');\n        },\n    },\n    async mounted() {\n        this.isMounted = true;\n        this.buttonWidth = this.$refs.palette.offsetWidth;\n        this.windowWidth = window.innerWidth;\n\n        window.addEventListener('resize', () => {\n            this.windowWidth = window.innerWidth;\n            if (this.$refs.palette) this.buttonWidth = this.$refs.palette.offsetWidth;\n        });\n\n        // Listen for fullscreen change\n        document.addEventListener('fullscreenchange', () => {\n            this.panels.fullscreen.isOpen = !fullscreen.isFullscreen;\n        });\n\n        // Create connection on page load\n        if (this.externalApplicationManager.backendAvailable) {\n            this.externalApplicationManager.startStatusInterval();\n        }\n    },\n};\n</script>\n\n<!-- eslint-disable vue/no-multiple-template-root -->\n<template>\n    <Transition name=\"fade\" @click.self=\"saveMenuShow = false\">\n        <BlurPanel v-show=\"saveMenuShow\">\n            <SaveMenu\n                v-show=\"saveMenuShow\"\n                v-model=\"saveMenuShow\"\n                :viewModel=\"editorManager.baklavaView\"\n                :saveConfiguration=\"saveConfiguration\"\n            />\n        </BlurPanel>\n    </Transition>\n    <div class=\"wrapper\"\n        v-click-outside=\"(ev) => handleMouseLeave(ev)\"\n    >\n        <div ref=\"navbar\" class=\"wrapper prevent-select\"\n            v-show=\"!preview\"\n            :class=\"(!hideHud && !$isMobile) ? 'wrapper-hud' : 'wrapper-hidden'\"\n            @pointerenter=\"$event.target.classList.add('isHovered')\"\n        >\n            <div class=\"container\">\n                <div :style=\"leftContainerStyles\">\n                    <div\n                        :class=\"['logo', mobileClasses]\"\n                        @pointerover=\"() => updateHoverInfo('logo')\"\n                        @pointerleave=\"() => resetHoverInfo('logo')\"\n                    >\n                        <Logo :hover=\"isHovered('logo')\" />\n                        <div class=\"dropdown-wrapper\">\n                            <template\n                                v-if=\"this.editorManager.specificationLoaded\"\n                            >\n                                <DropdownItem\n                                    id=\"create-new-graph-button\"\n                                    v-if=\"!readonly\"\n                                    text=\"Create new graph\"\n                                    type=\"'button'\"\n                                    :eventFunction=\"createNewGraphCallback\"\n                                />\n\n                                <!-- eslint-disable-next-line max-len -->\n                                <template v-if=\"this.externalApplicationManager.externalApplicationConnected\">\n                                    <hr />\n                                    <DropdownItem\n                                        text=\"Load file\"\n                                        id=\"request-dataflow-button\"\n                                        :eventFunction=\"importDataflow\"\n                                    />\n                                    <DropdownItem\n                                        text=\"Save file\"\n                                        type=\"button\"\n                                        :eventFunction=\"(async () => requestDataflowExport(false))\"\n                                    />\n                                    <DropdownItem\n                                        text=\"Save file as...\"\n                                        type=\"button\"\n                                        :eventFunction=\"(async () => requestDataflowExport(true))\"\n                                    />\n                                </template>\n                                <hr />\n                            </template>\n\n                            <template\n                                v-if=\"!this.externalApplicationManager.backendAvailable && !hideHud\"\n                            >\n                                <DropdownItem\n                                    text=\"Load specification\"\n                                    id=\"load-spec-button\"\n                                    :eventFunction=\"loadSpecificationCallback\"\n                                />\n                                <DropdownItem\n                                    v-if=\"this.editorManager.specificationLoaded\"\n                                    text=\"Save specification as...\"\n                                    type=\"'button'\"\n                                    :eventFunction=\"() => {\n                                        saveMenuShow = !saveMenuShow\n                                        saveConfiguration = saveSpecificationConfiguration\n                                    }\"\n                                />\n                                <hr />\n                            </template>\n\n                            <template v-if=\"this.editorManager.specificationLoaded\">\n                                <DropdownItem\n                                    v-if=\"!hideHud\"\n                                    id=\"load-dataflow-button\"\n                                    text=\"Load graph file\"\n                                    :eventFunction=\"loadDataflowCallback\"\n                                />\n                                <DropdownItem\n                                    type=\"'button'\"\n                                    text=\"Save graph file\"\n                                    :eventFunction=\"() => saveGraphConfiguration.saveCallback()\"\n                                />\n                                <DropdownItem\n                                    type=\"'button'\"\n                                    text=\"Save graph as file as...\"\n                                    :eventFunction=\"() => {\n                                        saveMenuShow = !saveMenuShow\n                                        saveConfiguration = saveGraphConfiguration\n                                    }\"\n                                />\n                                <hr />\n                            </template>\n\n                            <DropdownItem\n                                type=\"'button'\"\n                                text=\"Export graph to PNG\"\n                                :eventFunction=\"exportToPng\"\n                            />\n                            <DropdownItem\n                                type=\"'button'\"\n                                text=\"Export graph to HTML-based SVG\"\n                                :eventFunction=\"exportToSvg\"\n                            />\n                        </div>\n                    </div>\n\n                    <div\n                        ref=\"palette\"\n                        v-if=\"!hideHud && !readonly\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"() => togglePanel(panels.palette)\"\n                        @pointerover=\"() => updateHoverInfo('palette')\"\n                        @pointerleave=\"() => resetHoverInfo('palette')\"\n                    >\n                        <Cube :hover=\"isHovered('palette')\" class=\"small_svg\"/>\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span v-if=\"paletteOpen\">Hide node browser</span>\n                            <span v-else>Show node browser</span>\n                        </div>\n                    </div>\n\n                    <template v-if=\"this.externalApplicationManager.backendAvailable\">\n                        <div\n                            v-for=\"actionItem in navbarItems\"\n                            :key=\"actionItem.name\"\n                            :id=\"`navbar-button-${actionItem.procedureName}`\"\n                            :class=\"[\n                                (\n                                    (activeNavbarItems.includes(actionItem.procedureName)\n                                    || isInProgress(actionItem.procedureName))\n                                    ? 'hoverbox' : 'box'\n                                ),\n                                mobileClasses, {\n                                'button-in-progress': isInProgress(actionItem.procedureName),\n                            }]\"\n                            role=\"button\"\n                            @click=\"(async () => requestDataflowAction(actionItem))\"\n                            @pointerover=\"() => updateHoverInfo(actionItem.procedureName, true)\"\n                            @pointerleave=\"() => resetHoverInfo(actionItem.procedureName)\"\n                        >\n                            <!-- imgURI is used for Placeholder Icon to retrieve the image -->\n                            <CassetteStop\n                                v-if=\"\n                                    isStoppable(actionItem.procedureName)\n                                    && isInProgress(actionItem.procedureName)\n                                \"\n                                class=\"small_svg\"\n                                :hover=\"isHovered(actionItem.procedureName)\"\n                            />\n                            <component\n                                v-else\n                                class=\"small_svg\"\n                                :is=\"actionItem.icon\"\n                                :hover=\"isHovered(actionItem.procedureName)\"\n                                :imgURI=\"actionItem.iconName\"\n                            />\n                            <div class=\"progress-bar\" />\n                            <div :class=\"['tooltip', mobileClasses]\">\n                                <span>\n                                    {{ getNavbarActionTooltip(actionItem) }}\n                                </span>\n                            </div>\n                        </div>\n                    </template>\n                    <div\n                        v-if=\"this.editorManager.editor.isInSubgraph()\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"returnFromSubgraph\"\n                        @pointerover=\"() => updateHoverInfo('subgraphReturn')\"\n                        @pointerleave=\"() => resetHoverInfo('subgraphReturn')\"\n                    >\n                        <Arrow\n                            rotate=\"down\"\n                            :hover=\"isHovered('subgraphReturn')\"\n                            color=\"white\"\n                            class=\"small_svg\"\n                        />\n                        <div :class=\"['tooltip', mobileClasses]\">\n                            <span>Return from subgraph editor</span>\n                        </div>\n                    </div>\n                </div>\n                <component\n                    v-if=\"editTitle && !panels.nodesearch.isOpen\"\n                    :is=\"editorTitleInterface.component\"\n                    :intf=\"editorTitleInterface\"\n                    :class=\"['editorTitleInput', mobileClasses]\"\n                    v-model=\"graphName\"\n                    v-click-outside=\"() => { editTitle = false }\"\n                />\n                <span\n                    v-if=\"!editTitle && !panels.nodesearch.isOpen\"\n                    :class=\"['editorTitle', mobileClasses]\"\n                    @dblclick=\"editTitle = !readonly\">\n                        {{ editorTitle }}\n                </span>\n                <div :style=\"rightContainerStyles\">\n                    <div\n                        ref=\"searchbar\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @pointerover=\"() => updateHoverInfo('search')\"\n                        @pointerleave=\"() => {\n                            resetHoverInfo('search');\n                        }\"\n                        @click=\"onClickNodeSearch\"\n                        v-click-outside=\"() => panels.nodesearch.isOpen =\n                            searchEditorNodesQuery != ''\"\n                    >\n                        <Magnifier\n                            :hover=\"isHovered('search')\"\n                            class=\"small_svg\"\n                        />\n                        <div :class=\"['tooltip', mobileClasses, settingsTooltipClasses]\">\n                            <span v-if=\"!panels.nodesearch.isOpen\">Show node search bar</span>\n                            <span v-else>Hide node search bar</span>\n                        </div>\n                    </div>\n                    <div\n                        v-show=\"panels.nodesearch.isOpen\"\n                        :style=\"nodesearchInputStyles\"\n                        :class=\"['search-editor-nodes', mobileClasses]\"\n                    >\n                        <input\n                            ref=\"searchbarInput\"\n                            v-model=\"searchEditorNodesQuery\"\n                            placeholder=\"Search for nodes\"\n                        />\n                    </div>\n                    <div\n                        ref=\"fullscreen\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"toggleFullscreen\"\n                        @pointerover=\"() => updateHoverInfo('Fullscreen')\"\n                        @pointerleave=\"() => resetHoverInfo('Fullscreen')\"\n                    >\n                        <Expand\n                            :hover=\"isHovered('Fullscreen')\"\n                            class=\"small_svg\"\n                            v-if=\"!panels.fullscreen.isOpen\"\n                        />\n                        <Collapse :hover=\"isHovered('Fullscreen')\" class=\"small_svg\" v-else />\n                        <div :class=\"['tooltip', mobileClasses, settingsTooltipClasses]\">\n                            <span v-if=\"!panels.fullscreen.isOpen\">Enable fullscreen</span>\n                            <span v-else>Disable fullscreen</span>\n                        </div>\n                    </div>\n                    <div\n                        ref=\"settings\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"() => togglePanel(panels.settings)\"\n                        @pointerover=\"() => updateHoverInfo('settings')\"\n                        @pointerleave=\"() => resetHoverInfo('settings')\"\n                        v-click-outside=\"() => panels.settings.isOpen = false\"\n                    >\n                        <Cogwheel :hover=\"isHovered('settings')\" class=\"small_svg\" />\n                        <div :class=\"['tooltip', mobileClasses, settingsTooltipClasses]\">\n                            <span v-if=\"!panels.settings.isOpen\">Show settings</span>\n                            <span v-else>Hide settings</span>\n                        </div>\n                    </div>\n                    <div\n                        ref=\"backend\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        v-if=\"this.externalApplicationManager.backendAvailable\"\n                        @click=\"() => togglePanel(panels.backendStatus)\"\n                        @pointerover=\"() => updateHoverInfo('backendStatus')\"\n                        @pointerleave=\"() => resetHoverInfo('backendStatus')\"\n                    >\n                        <Backend\n                            v-if=\"this.externalApplicationManager.externalApplicationConnected\"\n                            color=\"connected\"\n                            class=\"small_svg\"\n                            :active=\"backendStatusOpen\"\n                            :hover=\"isHovered('backendStatus')\"\n                        />\n                        <Backend\n                            v-else color=\"disconnected\"\n                            class=\"small_svg\"\n                            :active=\"backendStatusOpen\"\n                            :hover=\"isHovered('backendStatus')\"\n                        />\n                        <div :class=\"['tooltip', mobileClasses, backendStatusTooltipClasses]\">\n                            <span>Backend status</span>\n                        </div>\n                        <div\n                            v-click-outside=\"(ev) => clickOutside(ev, panels.backendStatus)\"\n                            class=\"backend-status\"\n                        >\n                            <div>\n                                <span>Client status:</span>\n                                <!-- eslint-disable-next-line max-len -->\n                                <span v-if=\"this.externalApplicationManager.externalApplicationConnected\"\n                                    class=\"connected\"\n                                    >Connected</span\n                                >\n                                <span v-else class=\"disconnected\">Disconnected</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        ref=\"notifications\"\n                        v-if=\"!hideHud\"\n                        :class=\"['hoverbox', mobileClasses]\"\n                        role=\"button\"\n                        @click=\"() => togglePanel(panels.notifications)\"\n                        @pointerover=\"() => updateHoverInfo('notifications')\"\n                        @pointerleave=\"() => resetHoverInfo('notifications')\"\n                    >\n                        <Bell\n                            id=\"navbar-bell\"\n                            :color=\"\n                                (this.notificationStore.notifications.length > 0) ?\n                                'green' : 'gray'\n                            \"\n                            :hover=\"isHovered('notifications')\"\n                            class=\"small_svg\"\n                        />\n                        <div\n                            v-if=\"notificationsOpen\"\n                            :class=\"['tooltip', mobileClasses, notificationsTooltipClasses]\"\n                        >\n                            <span>Hide notifications</span>\n                        </div>\n                        <div\n                            v-else :class=\"['tooltip', mobileClasses, notificationsTooltipClasses]\"\n                        >\n                            <span>Show notifications</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"progress-bar\" />\n        </div>\n        <Notifications v-click-outside=\"(ev) => clickOutside(ev, panels.notifications)\" />\n        <Settings\n            v-click-outside=\"(ev) => clickOutside(ev, panels.settings)\"\n            :viewModel=\"editorManager.baklavaView\"\n        />\n        <CustomSidebar\n            @sidebar-open=\"openNavbar\"\n        />\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.wrapper {\n    z-index: 5;\n}\n\n.wrapper-hud {\n    position: relative;\n}\n\n.wrapper-hidden {\n    $navbar-padding-bottom: calc($navbar-height * 1.5);\n    position: absolute;\n    width: 100%;\n    top: -$navbar-height;\n    padding-bottom: $navbar-padding-bottom;\n    transition: 0.2s;\n\n    &.isHovered {\n        transform: translateY($navbar-height);\n        padding-bottom: 0;\n    }\n\n    &:not(.isHovered) > .progress-bar {\n        bottom: calc($navbar-padding-bottom + 1px);\n    }\n}\n\n.container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: $navbar-height;\n    background-color: $gray-600;\n    border: 1px solid $gray-500;\n    border-left: 0;\n    border-right: 0;\n\n    .editorTitle {\n        width: auto;\n        text-wrap: wrap;\n        flex-grow: 1;\n\n        cursor: text;\n        text-align: center;\n        padding: 0 $spacing-s;\n\n        &.compressed-mobile {\n            display: none;\n        }\n    }\n\n    .editorTitleInput {\n        font-size: $fs-small;\n        padding: 0 $spacing-s;\n        flex-grow: 1;\n\n        &.compressed-mobile {\n            display: none;\n        }\n    }\n\n    .progress-bar {\n        position: absolute;\n        height: calc(60px * 0.2);\n        left: 0;\n        bottom: 0;\n        border-radius: 3px;\n        z-index: 5;\n        background-color: $green;\n\n        &.animate {\n            animation: pulse ease-in-out 2s infinite;\n\n            @keyframes pulse {\n                0% {\n                    left: 0;\n                    width: 0;\n                }\n                50% {\n                    width: 100%;\n                    left: 0;\n                }\n                100% {\n                    left: 100%;\n                    width: 0%;\n                }\n            }\n        }\n    }\n\n    & > div {\n        display: inherit;\n        flex-grow: 1;\n\n        & > div {\n            flex-grow: 0;\n            display: flex;\n            width: 3.75em;\n            height: 3.75em;\n\n            justify-content: center;\n            align-items: center;\n            position: relative;\n            box-sizing: border-box;\n            border-left: 1px solid $gray-500;\n\n            // If the navbar is compressed, the navbar button should shrink\n            &.compressed-mobile {\n                width: auto;\n                flex-grow: 1;\n                max-width: 3.75em;\n            }\n\n            &:last-child {\n                border-right: 1px solid $gray-500;\n            }\n\n            & > svg {\n                display: block;\n                width: 1.6875em;\n                height: 1.6875em;\n            }\n\n            & > .small_svg {\n                display: block;\n                width: 1.2em;\n                height: 1.2em;\n            }\n            & > .smaller_svg {\n                display: block;\n                width: 1em;\n                height: 1em;\n            }\n            & > .small_svg_stop {\n                position: absolute;\n                width: 0.8em;\n                height: 0.8em;\n                top: 8%;\n                right: 8%;\n                stroke: $gray-100;\n            }\n\n            & > .dropdown-wrapper {\n                user-select: none;\n                position: absolute;\n                flex-direction: column;\n                top: 100%;\n                left: 0;\n                display: none;\n                background-color: #181818;\n                border: 2px solid #737373;\n\n                & > div:hover {\n                    background-color: #2A2A2A;\n                }\n            }\n\n            & > .backend-status {\n                @extend .dropdown-wrapper;\n                width: 220px;\n                display: flex;\n                /* Hide backend panel and position it\n                  to right border of backend icon\n                */\n                transform: translate(-89%, -180px);\n                padding: $spacing-l;\n                font-size: $fs-small;\n                justify-content: space-between;\n                border: none;\n                transition: transform 1s;\n\n                & > div {\n                    display: flex;\n                    justify-content: space-between;\n\n                    & > .disconnected {\n                        color: $red;\n                    }\n\n                    & > .connected {\n                        color: $green;\n                    }\n                }\n            }\n\n            & > .tooltip {\n                @extend .dropdown-wrapper;\n                border-radius: 15px;\n                background-color: $gray-600;\n                border: 1px solid $gray-200;\n                padding: $spacing-s;\n                left: calc(3.75em / 2);\n                transform: translate(-50%, 25%);\n                pointer-events: none;\n                white-space: nowrap;\n\n                &.last {\n                    transform: translate(-75%, 25%);\n                }\n                &.first {\n                    transform: translate(-25%, 25%);\n                }\n            }\n\n            &.logo:hover > .dropdown-wrapper {\n                display: flex;\n            }\n\n            &.box, &.hoverbox {\n                & > .small_svg {\n                    fill: $white;\n                }\n\n                &:hover {\n                    & > .tooltip {\n                        &:not(.compressed-mobile) {\n                            display: flex;\n                            z-index: 11;\n                        }\n                    }\n                }\n            }\n            &.hoverbox:hover {\n                cursor: pointer;\n\n                & > .small_svg {\n                    fill: $green;\n                }\n\n                & > .small_svg_stop {\n                    stroke: $red-dark;\n                }\n            }\n            &.box > .small_svg {\n                filter: brightness(50%);\n            }\n\n            &.search-editor-nodes {\n                max-width: calc(3.75em * 4);\n\n                & > input {\n                    width: 100%;\n                    height: 100%;\n                    padding: 0 0.5em;\n\n                    color: $white;\n                    border: none;\n                    background-color: $gray-600;\n\n                    &:focus {\n                        outline: 1px solid $green;\n                        z-index: 12;\n                    }\n\n                    &::placeholder {\n                        opacity: 0.5;\n                    }\n                }\n\n                // on smaller screens display search bellow NavBar\n                &.compressed-mobile {\n                    position: absolute;\n                    top: calc($navbar-height + 1px);\n                    max-width: 40vw;\n\n                    border: 1px solid $gray-500;\n                    box-sizing: border-box;\n                }\n            }\n        }\n    }\n}\n\nspan {\n    font-size: $fs-small;\n    color: $white;\n    user-select: none;\n}\n\n.prevent-select {\n    -webkit-user-select: none; /* Safari */\n    -ms-user-select: none; /* IE 10 and IE 11 */\n    user-select: none; /* Standard syntax */\n}\n</style>\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nRepresents a single input option in a dropdown menu.\nThe input can callback different actions depending on the type of the component.\n-->\n\n<template>\n    <div>\n        <label v-if=\"type === 'file'\" :for=\"id\"> {{ text }} </label>\n        <input v-if=\"type === 'file'\" :id=\"id\" type=\"file\" @change=\"eventFunction\" />\n        <input v-else :id=\"id\" type=\"button\" @click=\"eventFunction\" :value=\"text\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        text: {\n            type: String,\n            required: true,\n        },\n        id: {\n            type: String,\n        },\n        type: {\n            type: String,\n            default: 'file',\n        },\n        eventFunction: {\n            type: Function,\n            required: true,\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n    display: flex;\n    justify-content: space-between;\n    min-width: 10em;\n    height: 2.5em;\n    flex-direction: row;\n    align-items: center;\n\n    & > input[type='button'],\n    label {\n        width: 100%;\n        font-size: $fs-small;\n        color: $white;\n        padding: 0 0.9375em;\n        line-height: 2.5rem;\n        background-color: unset;\n        border: unset;\n        cursor: pointer;\n    }\n\n    & > input[type='button']:hover,\n    label:hover {\n        color: $green;\n    }\n}\n</style>\n","import { render } from \"./DropdownItem.vue?vue&type=template&id=74c292ef&scoped=true\"\nimport script from \"./DropdownItem.vue?vue&type=script&lang=js\"\nexport * from \"./DropdownItem.vue?vue&type=script&lang=js\"\n\nimport \"./DropdownItem.vue?vue&type=style&index=0&id=74c292ef&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-74c292ef\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nList of notitications that creates a `Notification` component for each message registered.\n-->\n\n<template>\n    <div class=\"notifications\">\n        <div class=\"info\">\n            <span>Notifications ({{ notificationStore.notifications.length }})</span>\n            <button @click=\"this.removeAll\" tabindex=\"-1\">\n                <Cross />\n                Clear all\n            </button>\n        </div>\n        <div class=\"panel\">\n            <ul>\n                <!-- Iterating in reverse so that the newest messages are rendered first -->\n                <li v-for=\"index in notificationsLength\" :key=\"index\">\n                    <Notification\n                        :type=\"notifications[notificationsLength - index].type\"\n                        :message=\"`${notifications[notificationsLength - index].message}`\"\n                        :index=\"notificationsLength - index\"\n                        border=\"border\"\n                    />\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Cross from '../icons/Cross.vue';\nimport Notification from './Notification.vue';\nimport { notificationStore } from '../core/stores';\n\nexport default {\n    components: {\n        Cross,\n        Notification,\n    },\n    computed: {\n        notifications() {\n            return notificationStore.notifications;\n        },\n        notificationsLength() {\n            return notificationStore.notifications.length;\n        },\n    },\n    data() {\n        return {\n            notificationStore,\n        };\n    },\n    methods: {\n        removeAll() {\n            notificationStore.remove();\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.notifications {\n    $notification-maxwidth: calc(100vw - 2 * $spacing-xxl);\n    /* Set height to 100 view port minus height of navigation bar and paddings\n    and minus the terminal panel */\n    height: calc(100% - 120px - $terminal-container-height);\n    width: 435px;\n    max-width: $notification-maxwidth;\n    background-color: $gray-600;\n    opacity: 0.9;\n    position: absolute;\n    /* Height of navigation bar*/\n    top: $navbar-height;\n    /* As default notification panel is hidden (minus value)\n      panel width (435px) + 2 * padding (30px) = 495px\n    */\n    right: -495px;\n    z-index: 4;\n    padding: $spacing-xxl;\n    overflow-y: auto;\n\n    // Prevent selection of text\n    -webkit-user-select: none; /* Safari */\n    -ms-user-select: none; /* IE 10 and IE 11 */\n    user-select: none; /* Standard syntax */\n\n    & > .info {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin-bottom: $spacing-l;\n\n        & > span {\n            color: $white;\n            font-size: $fs-large;\n        }\n\n        & > button {\n            color: $gray-200;\n            font-size: $fs-medium;\n        }\n    }\n\n    & > .panel {\n        display: grid;\n        grid-row-gap: $spacing-l;\n        ul {\n            max-width: $notification-maxwidth;\n        }\n        li {\n            -webkit-user-select: text; /* Safari */\n            -ms-user-select: text; /* IE 10 and IE 11 */\n            user-select: text; /* Standard syntax */\n        }\n    }\n}\n</style>\n","import { render } from \"./Notifications.vue?vue&type=template&id=fd15cad8&scoped=true\"\nimport script from \"./Notifications.vue?vue&type=script&lang=js\"\nexport * from \"./Notifications.vue?vue&type=script&lang=js\"\n\nimport \"./Notifications.vue?vue&type=style&index=0&id=fd15cad8&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fd15cad8\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div class=\"settings-panel\">\n        <div class=\"setting-header\">\n            <span>Settings</span>\n        </div>\n        <div class=\"panel\">\n            <div v-for=\"option in settingOptions\" :key=\"option.id\">\n                <div class=\"option-label\">\n                    {{ getOptionName(option) ? `${option.name}:` : '' }}\n                </div>\n                <component :is=\"option.component\" :intf=\"option\" tabindex=\"-1\"></component>\n            </div>\n\n            <div class=\"__properties\" v-show=\"disableLayersOptions.length !== 0\">\n                <div class=\"option-label\">Hide Layers:</div>\n                <div v-for=\"option in disableLayersOptions\" :key=\"option.id\">\n                    <component :is=\"option.component\" :intf=\"option\" tabindex=\"-1\"></component>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { computed, ref } from 'vue';\nimport {\n    SelectInterface,\n    CheckboxInterface,\n    IntegerInterface,\n    ButtonInterface,\n} from '@baklavajs/renderer-vue'; // eslint-disable-line object-curly-newline\nimport { getOptionName } from '../custom/CustomNode.js';\nimport getExternalApplicationManager from '../core/communication/ExternalApplicationManager';\nimport { LOG_LEVEL } from '../core/notifications';\n\nexport default {\n    props: {\n        viewModel: {\n            required: true,\n        },\n    },\n    setup(props) {\n        const externalApplicationManager = getExternalApplicationManager();\n        const metadataChanged = (name, value) => {\n            externalApplicationManager.notifyAboutChange('metadata_on_change', {\n                metadata: {\n                    [name]: value,\n                },\n            });\n        };\n\n        const connectionStyleOption = computed(() => {\n            const items = [\n                { text: 'Curved', value: 'curved' },\n                { text: 'Orthogonal', value: 'orthogonal' },\n            ];\n            const option = new SelectInterface(\n                'Connection style',\n                props.viewModel.connectionRenderer.style,\n                items,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.connectionRenderer.style = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('connectionStyle', v);\n            });\n            option.componentName = 'SelectInterface';\n            return option;\n        });\n\n        const randomizedOffsetOption = computed(() => {\n            const option = new CheckboxInterface(\n                'Randomized offset',\n                props.viewModel.connectionRenderer.randomizedOffset,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.connectionRenderer.randomizedOffset = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('randomizedOffset', v);\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n\n        const backgroundGridSize = computed(() => {\n            const option = new IntegerInterface(\n                'Background grid size',\n                props.viewModel.settings.background.gridSize,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.settings.background.gridSize = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('backgroundSize', v);\n            });\n            option.componentName = 'IntegerInterface';\n            return option;\n        });\n\n        const movementStep = computed(() => {\n            const option = new IntegerInterface(\n                'Node movement step',\n                props.viewModel.movementStep,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.viewModel.movementStep = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n                metadataChanged('movementStep', v);\n            });\n            option.componentName = 'IntegerInterface';\n            return option;\n        });\n\n        const LayoutOption = computed(() => {\n            const { layoutManager } = props.viewModel.editor;\n            const items = layoutManager\n                .getAvailableAlgorithms()\n                .map((algorithmName) => ({ text: algorithmName, value: algorithmName }));\n            const option = new SelectInterface(\n                'Autolayout algorithm',\n                layoutManager.usedAlgorithm,\n                items,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                layoutManager.useAlgorithm(v);\n                metadataChanged('layout', v);\n            });\n            option.componentName = 'SelectInterface';\n            return option;\n        });\n\n        const LayoutApply = computed(() => {\n            const button = new ButtonInterface('Apply autolayout', () => {\n                props.viewModel.editor.applyAutolayout();\n            });\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n\n        const center = computed(() => {\n            const button = new ButtonInterface('Center', () => {\n                props.viewModel.editor.centerZoom();\n                externalApplicationManager.notifyAboutChange('viewport_on_center');\n            });\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n\n        const clearEditor = computed(() => {\n            const button = new ButtonInterface('Clean editor', () => {\n                props.viewModel.editor.deepCleanEditor();\n            });\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n\n        const disableLayersOptions = computed(() => {\n            const options = ref([]);\n\n            props.viewModel.layers.forEach((layer) => {\n                const option = new CheckboxInterface(layer.name, false).setPort(false);\n                option.events.setValue.subscribe(this, () => {\n                    if (props.viewModel.ignoredLayers.has(layer.name)) {\n                        props.viewModel.ignoredLayers.delete(layer.name);\n                    } else {\n                        props.viewModel.ignoredLayers.add(layer.name);\n                    }\n                });\n                option.componentName = 'CheckboxInterface';\n                options.value.push(option);\n            });\n\n            return options.value;\n        });\n\n        const logLevel = computed(() => {\n            const select = new SelectInterface(\n                'Verbosity of notifications',\n                props.viewModel.logLevel,\n                Object.keys(LOG_LEVEL).map((s) => s.toUpperCase()),\n            ).setPort(false);\n            select.events.setValue.subscribe(this, (v) => {\n                props.viewModel.logLevel = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n            });\n            select.componentName = 'SelectInterface';\n            return select;\n        });\n\n        const readonlyOptions = computed(() => {\n            if (props.viewModel.editor.readonly) {\n                return [];\n            }\n            return [\n                logLevel.value,\n                connectionStyleOption.value,\n                LayoutOption.value,\n                LayoutApply.value,\n                backgroundGridSize.value,\n                clearEditor.value,\n                movementStep.value,\n                randomizedOffsetOption.value,\n            ];\n        });\n\n        const settingOptions = computed(() => ([\n            center.value,\n        ].concat(readonlyOptions.value)));\n\n        return { getOptionName, settingOptions, disableLayersOptions };\n    },\n};\n</script>\n\n<style lang=\"scss\">\n.settings-panel {\n    $settings-width: 435px;\n    $settings-maxwidth: calc(100vw - 2 * $spacing-l);\n\n    background-color: #{$gray-600}E6;\n    position: absolute;\n    padding: $spacing-l;\n    color: white;\n    top: calc($navbar-height + 1px);\n    right: -495px;\n    width: $settings-width;\n    // viewport - terminal - navbar - padding\n    max-height: calc(100% - $navbar-height - $terminal-container-height - 2 * $spacing-l);\n    min-height: fit-content;\n    max-width: $settings-maxwidth;\n    z-index: 4;\n    overflow-y: auto;\n\n    & > .setting-header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin-bottom: $spacing-l;\n\n        & > span {\n            color: $white;\n            font-size: $fs-large;\n        }\n    }\n\n    & > .panel {\n        display: grid;\n        grid-row-gap: $spacing-l;\n        user-select: none;\n\n        & > div {\n            max-width: $settings-maxwidth;\n            & > .option-label {\n                padding-bottom: $spacing-s;\n                color: $white;\n                font-size: $fs-medium;\n            }\n        }\n    }\n}\n</style>\n","import { render } from \"./Settings.vue?vue&type=template&id=0cad4691\"\nimport script from \"./Settings.vue?vue&type=script&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=0cad4691&lang=scss\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!-- eslint-disable vue/no-mutating-props -->\n<template>\n    <div class=\"popup-menu\">\n        <div class=\"__header\">\n            <div class=\"__header-title\">\n                Save configuration\n            </div>\n            <Cross tabindex=\"-1\" class=\"__close\" @click=\"close\" />\n        </div>\n        <component\n            v-for=\"option in additionalOptions\"\n            :key=\"option.id\"\n            :is=\"option.component\"\n            :intf=\"option\"\n        />\n        File name:\n        <component\n            :is=\"dataflowname.component\"\n            :intf=\"dataflowname\" class=\"__name-option\"\n            v-model=\"saveConfiguration.saveName\"\n        />\n        <component :is=\"save.component\" :intf=\"save\" />\n    </div>\n</template>\n\n<script>\nimport { defineComponent, computed, markRaw } from 'vue';\nimport {\n    ButtonInterface,\n    CheckboxInterface,\n} from '@baklavajs/renderer-vue'; // eslint-disable-line object-curly-newline\nimport Cross from '../icons/Cross.vue';\n\nimport InputInterface from '../interfaces/InputInterface.js';\nimport InputInterfaceComponent from '../interfaces/InputInterface.vue';\n\nexport default defineComponent({\n    props: {\n        modelValue: {\n            type: Boolean,\n            default: false,\n        },\n        viewModel: {\n            required: true,\n            type: Object,\n        },\n        saveConfiguration: {\n            required: true,\n            type: Object,\n        },\n    },\n    components: {\n        Cross,\n    },\n    emits: ['update:modelValue'],\n    setup(props, { emit }) {\n        const readonly = computed(() => {\n            if (props.saveConfiguration.readonly === undefined) return undefined;\n\n            const option = new CheckboxInterface(\n                'Make graph read only',\n                props.saveConfiguration.readonly,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.saveConfiguration.readonly = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n\n        const hideHud = computed(() => {\n            if (props.saveConfiguration.hideHud === undefined) return undefined;\n\n            const option = new CheckboxInterface(\n                'Disable HUD',\n                props.saveConfiguration.hideHud,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.saveConfiguration.hideHud = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n\n        const position = computed(() => {\n            if (props.saveConfiguration.position === undefined) return undefined;\n\n            const option = new CheckboxInterface(\n                'Preserve current view location',\n                props.saveConfiguration.position,\n            ).setPort(false);\n            option.events.setValue.subscribe(this, (v) => {\n                props.saveConfiguration.position = v; // eslint-disable-line vue/no-mutating-props,max-len,no-param-reassign\n            });\n            option.componentName = 'CheckboxInterface';\n            return option;\n        });\n\n        const dataflowname = computed(() => {\n            const option = new InputInterface(\n                'File name',\n                'save',\n            ).setPort(false);\n\n            option.componentName = 'InputInterface';\n            option.setComponent(markRaw(InputInterfaceComponent));\n            return option;\n        });\n\n        const close = () => {\n            if (props.modelValue) {\n                emit('update:modelValue', false);\n            }\n        };\n\n        const save = computed(() => {\n            const button = new ButtonInterface('Save', () => {\n                props.saveConfiguration.saveCallback();\n                close();\n            });\n            button.componentName = 'ButtonInterface';\n            return button;\n        });\n\n        const additionalOptions = computed(() => {\n            const displayableOptions = [];\n            [readonly, hideHud, position].forEach((option) => {\n                if (option.value !== undefined) displayableOptions.push(option.value);\n            });\n            return displayableOptions;\n        });\n\n        return {\n            additionalOptions,\n            dataflowname,\n            save,\n            close,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\">\n    .popup-menu {\n        position: absolute;\n        background-color: #{$gray-600}E6;\n        border: 1px solid $green;\n        border-radius: 10px;\n        color: white;\n        user-select: none;\n\n        left: 50vw;\n        top: 50vh;\n        transform: translate(-50%, -50%);\n        padding: 1em;\n\n        display: flex;\n        flex-direction: column;\n        gap: 1em;\n\n        height: max-content;\n\n        & > .__header {\n            display: flex;\n            align-items: center;\n\n            & > .__header-title {\n                font-size: $fs-small;\n                flex-grow: 1;\n            }\n\n            & > .__close {\n                flex-grow: 0;\n                user-select: none;\n                outline: none;\n                cursor: pointer;\n            }\n        }\n\n        & > .__name-option {\n            & > .baklava-input {\n                // Padding is included into width\n                box-sizing: border-box;\n            }\n        }\n    }\n</style>\n","import { render } from \"./SaveMenu.vue?vue&type=template&id=369f47ca\"\nimport script from \"./SaveMenu.vue?vue&type=script&lang=js\"\nexport * from \"./SaveMenu.vue?vue&type=script&lang=js\"\n\nimport \"./SaveMenu.vue?vue&type=style&index=0&id=369f47ca&lang=scss\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div class=\"blur-panel\">\n        <slot />\n    </div>\n</template>\n\n<style lang=\"scss\">\n.blur-panel {\n    background-color: #{$gray-600}80;\n    backdrop-filter: blur(10px);\n    position: absolute;\n    padding: $spacing-l;\n    color: white;\n    left: 0%;\n    z-index: 10;\n    top: 0%;\n    width: 100%;\n    height: 100%;\n    min-height: fit-content;\n\n    & > .panel {\n        display: grid;\n        grid-row-gap: $spacing-l;\n        user-select: none;\n        right: 25%;\n        top: 25%;\n        width: 50%;\n        height: 50%;\n\n        & > div {\n            & > .option-label {\n                padding-bottom: $spacing-s;\n                color: $white;\n                font-size: $fs-medium;\n            }\n        }\n    }\n}\n</style>\n","import { render } from \"./BlurPanel.vue?vue&type=template&id=983d17da\"\nconst script = {}\n\nimport \"./BlurPanel.vue?vue&type=style&index=0&id=983d17da&lang=scss\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport EditorManager from '../core/EditorManager';\nimport NotificationHandler from '../core/notifications';\nconst saveBlob = (blob, filename) => {\n    const linkElement = document.createElement('a');\n    linkElement.href = window.URL.createObjectURL(blob);\n    linkElement.download = filename;\n    linkElement.click();\n};\nexport const saveSpecificationConfiguration = {\n    saveName: 'specification',\n    saveCallback() {\n        const blob = new Blob([\n            JSON.stringify(EditorManager.getEditorManagerInstance().saveSpecification(), null, 4),\n        ], { type: 'application/json' });\n        saveBlob(blob, this.saveName);\n        NotificationHandler.showToast('info', 'Specification saved');\n    },\n    reset() {\n        this.saveName = 'specification';\n    },\n};\nexport const saveGraphConfiguration = {\n    readonly: false,\n    hideHud: false,\n    position: false,\n    saveName: 'save',\n    saveCallback() {\n        const blob = new Blob([JSON.stringify(EditorManager.getEditorManagerInstance().saveDataflow(this.readonly, this.hideHud, this.position), null, 4)], {\n            type: 'application/json',\n        });\n        saveBlob(blob, this.saveName);\n        NotificationHandler.showToast('info', 'Dataflow saved');\n    },\n    saveCallbackCustomFormat(blob) {\n        const saveElement = document.createElement('a');\n        let mimeType;\n        if (typeof blob === 'string') {\n            mimeType = 'application/octet-stream';\n            saveElement.href = `data:${mimeType};base64,${blob}`;\n        }\n        else {\n            mimeType = 'application/json';\n            saveElement.href = window.URL.createObjectURL(new Blob([JSON.stringify(blob)], { type: mimeType }));\n        }\n        saveElement.download = this.saveName;\n        saveElement.click();\n        NotificationHandler.showToast('info', `File saved successfully: ${this.saveName}`);\n    },\n    reset() {\n        this.readonly = false;\n        this.hideHud = false;\n        this.position = false;\n        this.saveName = 'save';\n    },\n};\n","import { render } from \"./NavBar.vue?vue&type=template&id=45b20100&scoped=true\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js\"\n\nimport \"./NavBar.vue?vue&type=style&index=0&id=45b20100&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-45b20100\"]])\n\nexport default __exports__","import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-028890e5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"container\" };\nconst _hoisted_2 = { class: \"tab\" };\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = { class: \"indicator-wrapper\" };\nconst _hoisted_5 = { class: \"button-wrapper\" };\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/ _createElementVNode(\"span\", null, \"Clear terminal\", -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n    const _component_Indicator = _resolveComponent(\"Indicator\");\n    const _component_Bin = _resolveComponent(\"Bin\");\n    const _component_Arrow = _resolveComponent(\"Arrow\");\n    const _component_Terminal = _resolveComponent(\"Terminal\");\n    return (_openBlock(), _createElementBlock(\"div\", {\n        ref: \"terminalWrapper\",\n        class: \"terminal-wrapper\",\n        style: _normalizeStyle(_ctx.terminalWrapperStyles)\n    }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n            _createElementVNode(\"div\", {\n                ref: \"resizer\",\n                class: \"resizer\",\n                style: _normalizeStyle(_ctx.resizerStyles)\n            }, null, 4),\n            _createElementVNode(\"div\", _hoisted_2, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.displayedTerminals, (terminal) => {\n                    return (_openBlock(), _createElementBlock(\"button\", {\n                        key: terminal.name,\n                        class: _normalizeClass([\"tab-item\", _ctx.pipelineSpanClasses(terminal.name)]),\n                        onClick: ($event) => (_ctx.toggleTerminalPanel(terminal.name))\n                    }, [\n                        _createElementVNode(\"span\", {\n                            class: _normalizeClass(_ctx.pipelineSpanClasses(terminal.name))\n                        }, _toDisplayString(terminal.name), 3),\n                        _createElementVNode(\"div\", _hoisted_4, [\n                            (terminal.hasNewMessage)\n                                ? (_openBlock(), _createBlock(_component_Indicator, {\n                                    key: 0,\n                                    color: _ctx.terminalIndicatorColor(terminal.hasNewMessage)\n                                }, null, 8, [\"color\"]))\n                                : _createCommentVNode(\"\", true)\n                        ])\n                    ], 10, _hoisted_3));\n                }), 128))\n            ]),\n            _createElementVNode(\"div\", _hoisted_5, [\n                (_ctx.isTerminalPanelOpened)\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 0,\n                        onClick: _cache[0] || (_cache[0] = ($event) => (_ctx.clearTerminalOutput(_ctx.activeTerminal)))\n                    }, [\n                        _createVNode(_component_Bin),\n                        _hoisted_6\n                    ]))\n                    : _createCommentVNode(\"\", true),\n                _createElementVNode(\"button\", {\n                    onClick: _cache[1] || (_cache[1] = () => { _ctx.arrowHovered = false; _ctx.toggleTerminalPanel(undefined); }),\n                    onMouseenter: _cache[2] || (_cache[2] = ($event) => (_ctx.arrowHovered = true)),\n                    onMouseleave: _cache[3] || (_cache[3] = ($event) => (_ctx.arrowHovered = false))\n                }, [\n                    (!_ctx.isTerminalPanelOpened)\n                        ? (_openBlock(), _createBlock(_component_Arrow, {\n                            key: 0,\n                            color: \"white\",\n                            scale: \"small\",\n                            rotate: \"up\",\n                            hover: _ctx.arrowHovered\n                        }, null, 8, [\"hover\"]))\n                        : (_openBlock(), _createBlock(_component_Arrow, {\n                            key: 1,\n                            color: \"white\",\n                            scale: \"small\",\n                            rotate: \"left\",\n                            hover: _ctx.arrowHovered\n                        }, null, 8, [\"hover\"]))\n                ], 32)\n            ])\n        ]),\n        _withDirectives(_createVNode(_component_Terminal, { terminalInstance: _ctx.activeTerminal }, null, 8, [\"terminalInstance\"]), [\n            [_vShow, _ctx.isTerminalPanelOpened]\n        ])\n    ], 4));\n}\n","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nContainer for the hterm.js terminal.\n-->\n\n<template>\n    <div id=\"hterm-terminal\"></div>\n</template>\n\n<script>\nimport {\n    defineComponent, computed, onMounted, watch, nextTick,\n} from 'vue';\nimport { terminalStore, MAIN_TERMINAL } from '../core/stores';\nimport { hterm, lib } from '../third-party/hterm_all';\nimport getExternalApplicationManager from '../core/communication/ExternalApplicationManager';\n\nexport default defineComponent({\n    props: {\n        terminalInstance: {\n            type: String,\n        },\n    },\n    setup(props) {\n        let term;\n        const htermSettings = {\n            'background-color': '#1d1d1d',\n            'cursor-color': 'white',\n            'mouse-right-click-paste': false,\n            'pass-meta-v': false,\n            'mouse-paste-button': 'no-button',\n            'pass-on-drop': false,\n            'shift-insert-paste': false,\n        };\n\n        const setHTermPreferences = () => {\n            Object.keys(htermSettings).forEach((key) => {\n                localStorage.setItem(\n                    `/hterm/profiles/default/${key}`,\n                    htermSettings[key],\n                );\n            });\n        };\n\n        const logs = computed(() => terminalStore.logs[props.terminalInstance]);\n\n        const logsLength = computed(() => {\n            if (logs.value === undefined) {\n                return 0;\n            }\n            return logs.value.length;\n        });\n\n        const printLog = (log) => {\n            if (term === undefined) return;\n            term.io.print(props.terminalInstance === MAIN_TERMINAL ? log.replace(/\\n/g, '\\r\\n') : log);\n        };\n\n        let renderIndex = 0;\n\n        const clearLog = () => {\n            renderIndex = 0;\n            if (term === undefined) return;\n\n            printLog('\\u001b[0m');\n            term.scrollHome();\n            // This line console logs' \"Couldn't fetch row index:\"\n            term.wipeContents();\n        };\n\n        const externalApplicationManager = getExternalApplicationManager();\n\n        onMounted(async () => {\n            // wait for hterm.js library to load\n            // (glatosinski: we may later need to move it to some global scope)\n            await lib.init();\n            // configure hterm.js style and instantiate the terminal\n            setHTermPreferences();\n            term = new hterm.Terminal();\n            // Disable virtual keyboard for mobile devices\n            // eslint-disable-next-line no-underscore-dangle\n            term.scrollPort_.contenteditable = false;\n\n            term.onTerminalReady = function onTerminalReady() {\n                // load logs that have existed already in the storage.\n                // for now configure the terminal as read-only\n                this.io.sendString = (string) => {\n                    if (!terminalStore.isReadOnly(props.terminalInstance)) {\n                        externalApplicationManager.requestTerminalRead(\n                            props.terminalInstance,\n                            string,\n                        );\n                    }\n                };\n                this.onVTKeystroke = (string) => {\n                    if (!terminalStore.isReadOnly(props.terminalInstance)) {\n                        externalApplicationManager.requestTerminalRead(\n                            props.terminalInstance, string,\n                        );\n                    }\n                };\n                this.io.onTerminalResize = () => {\n                    // Focus the terminal when it is resized\n                    this.focus();\n                };\n                this.installKeyboard();\n            };\n            // pin hterm.js in the template\n            term.decorate(document.querySelector('#hterm-terminal'));\n\n            watch(\n                [() => props.terminalInstance, logsLength],\n                async ([newIns, newLen], [oldIns, oldLen]) => {\n                    if (newIns === undefined) {\n                        return;\n                    }\n\n                    if (terminalStore.readOnly[props.terminalInstance]) {\n                        // eslint-disable-next-line no-underscore-dangle\n                        term.scrollPort_.contenteditable = false;\n                        term.setCursorVisible(false);\n                    } else {\n                        // eslint-disable-next-line no-underscore-dangle\n                        term.scrollPort_.contenteditable = true;\n                        term.setCursorVisible(true);\n                    }\n                    // Wait for the next tick to make sure that the terminal is rendered\n                    // Otherwise hterm may throw errors related to the dom not being ready\n                    await nextTick();\n\n                    // If the instance of the terminal changed\n                    if (oldIns !== newIns || newLen === 0) {\n                        clearLog();\n                    }\n\n                    if (oldLen !== newLen || oldIns !== newIns) {\n                        const currentLogs = terminalStore.logs[newIns];\n\n                        currentLogs.slice(renderIndex).forEach((log, _) => {\n                            if (renderIndex > 0 && newIns === MAIN_TERMINAL) printLog('\\n\\n');\n                            printLog(log);\n                            renderIndex += 1;\n                        });\n                    }\n                },\n            );\n        });\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n#hterm-terminal {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-color: $gray-600;\n}\n</style>\n","import { render } from \"./Terminal.vue?vue&type=template&id=c10c6824&scoped=true\"\nimport script from \"./Terminal.vue?vue&type=script&lang=js\"\nexport * from \"./Terminal.vue?vue&type=script&lang=js\"\n\nimport \"./Terminal.vue?vue&type=style&index=0&id=c10c6824&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c10c6824\"]])\n\nexport default __exports__","import { defineComponent, onMounted, ref, computed, watch, nextTick, } from 'vue';\nimport Terminal from './Terminal.vue';\nimport Arrow from '../icons/Arrow.vue';\nimport Indicator from '../icons/Indicator.vue';\nimport Bin from '../icons/Bin.vue';\nimport { mouseDownHandler } from '../core/events';\nimport { terminalStore, MAIN_TERMINAL } from '../core/stores';\nexport default defineComponent({\n    components: {\n        Arrow,\n        Indicator,\n        Bin,\n        Terminal,\n    },\n    setup() {\n        const resizer = ref(null);\n        const terminalWrapper = ref(null);\n        const activeTerminal = ref(undefined);\n        const isTerminalPanelOpened = ref(false);\n        const terminalPanelHeight = ref(0);\n        const arrowHovered = ref(false);\n        const pipelineSpanClasses = (terminal) => ({\n            active: isTerminalPanelOpened.value && terminal === activeTerminal.value,\n        });\n        const terminalWrapperStyles = computed(() => {\n            const minTerminalPanelHeight = 395;\n            if (isTerminalPanelOpened.value) {\n                return {\n                    height: `${Math.max(terminalPanelHeight.value, minTerminalPanelHeight)}px`,\n                };\n            }\n            return {\n                height: 'unset',\n            };\n        });\n        const resizerStyles = computed(() => ({\n            'pointer-events': (isTerminalPanelOpened.value ? 'all' : 'none'),\n        }));\n        onMounted(() => {\n            const setTerminalHeight = (height) => {\n                terminalPanelHeight.value = height;\n            };\n            resizer.value.addEventListener('mousedown', mouseDownHandler(setTerminalHeight));\n        });\n        const displayedTerminals = ref([]);\n        // Computing tuples of names and lengths of terminals\n        const terminalNamesLengths = computed(() => {\n            const terminalLogs = Object.values(terminalStore.logs);\n            const lengths = terminalLogs.map((log) => log.length);\n            const names = Object.keys(terminalStore.logs);\n            const tuples = [];\n            for (let i = 0; i < names.length; i += 1) {\n                tuples.push({\n                    name: names[i],\n                    length: lengths[i],\n                });\n            }\n            return tuples;\n        });\n        watch(terminalNamesLengths, (newVal, oldVal) => {\n            const oldNames = oldVal === null || oldVal === void 0 ? void 0 : oldVal.map((tuple) => tuple.name);\n            newVal.forEach((tuple) => {\n                if (!(oldNames === null || oldNames === void 0 ? void 0 : oldNames.includes(tuple.name))) {\n                    // Adding new terminals to the displayed ones\n                    displayedTerminals.value.push({\n                        name: tuple.name,\n                        hasNewMessage: tuple.length !== 0,\n                    });\n                }\n                else {\n                    // Checking whether length changed in an existing terminal\n                    const oldTuple = oldVal.find((t) => t.name === tuple.name);\n                    if (oldTuple.length !== tuple.length && tuple.name !== activeTerminal.value) {\n                        const terminal = displayedTerminals.value.find((t) => t.name === tuple.name);\n                        terminal.hasNewMessage = true;\n                    }\n                }\n            });\n        }, {\n            immediate: true,\n        });\n        const terminalIndicatorColor = (hasNewMessage) => {\n            if (hasNewMessage)\n                return 'green';\n            return 'gray';\n        };\n        const setReadMessages = (terminalName) => {\n            displayedTerminals.value.forEach((terminal) => {\n                // eslint-disable-next-line no-param-reassign\n                if (terminal.name === terminalName)\n                    terminal.hasNewMessage = false;\n            });\n        };\n        const toggleTerminalPanel = (terminal) => {\n            var _a, _b;\n            if (terminal === undefined && !isTerminalPanelOpened.value) {\n                activeTerminal.value = MAIN_TERMINAL;\n                isTerminalPanelOpened.value = true;\n                setReadMessages(MAIN_TERMINAL);\n            }\n            else if (terminal === activeTerminal.value || terminal === undefined) {\n                activeTerminal.value = undefined;\n                isTerminalPanelOpened.value = false;\n            }\n            else {\n                // Keep the current terminal height when switching between terminals\n                const terminalHeight = (_b = (_a = terminalWrapper.value) === null || _a === void 0 ? void 0 : _a.style.height) !== null && _b !== void 0 ? _b : 'unset';\n                activeTerminal.value = terminal;\n                isTerminalPanelOpened.value = true;\n                setReadMessages(terminal);\n                if (terminalHeight !== 'unset')\n                    terminalWrapperStyles.value.height = terminalHeight;\n            }\n            // Focus on terminal if it is not readonly\n            if (activeTerminal.value !== undefined &&\n                !terminalStore.isReadOnly(activeTerminal.value)) {\n                nextTick().then(() => { var _a; return (_a = document.getElementById('hterm-terminal')) === null || _a === void 0 ? void 0 : _a.focus(); });\n            }\n        };\n        const clearTerminalOutput = (terminal) => {\n            if (terminal !== undefined) {\n                terminalStore.remove(terminal);\n            }\n            else {\n                terminalStore.remove();\n            }\n        };\n        return {\n            toggleTerminalPanel,\n            clearTerminalOutput,\n            displayedTerminals,\n            activeTerminal,\n            isTerminalPanelOpened,\n            resizer,\n            terminalWrapper,\n            pipelineSpanClasses,\n            terminalWrapperStyles,\n            resizerStyles,\n            arrowHovered,\n            terminalIndicatorColor,\n        };\n    },\n});\n","import { render } from \"./TerminalPanel.vue?vue&type=template&id=028890e5&scoped=true&ts=true\"\nimport script from \"./TerminalPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./TerminalPanel.vue?vue&type=script&lang=ts\"\n\nimport \"./TerminalPanel.vue?vue&type=style&index=0&id=028890e5&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-028890e5\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nRepresents Loading Screen shown when JSON files\nwith specification and graph are being downloaded and loaded.\n-->\n\n<template>\n  <div class=\"loading-screen\">\n    <SelfBuildingSquareSpinner\n      id=\"loading-screen-spinner\"\n      :size=\"80\"\n    />\n  </div>\n</template>\n\n<script>\nimport { SelfBuildingSquareSpinner } from 'epic-spinners';\n\nexport default {\n    components: {\n        SelfBuildingSquareSpinner,\n    },\n};\n</script>\n\n<style lang=\"scss\">\n.loading-screen {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  z-index: 99;\n  background-color: #{$gray-600}80;\n}\n\n#loading-screen-spinner {\n  & > .square {\n    background: $green !important;\n  }\n}\n</style>\n","import { render } from \"./LoadingScreen.vue?vue&type=template&id=16792eac\"\nimport script from \"./LoadingScreen.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingScreen.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingScreen.vue?vue&type=style&index=0&id=16792eac&lang=scss\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Home.vue?vue&type=template&id=1fa23185\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2024 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nSingle notification.\n-->\n\n<template>\n    <div :class=\"border\" class=\"notification-container\">\n        <div class=\"notification-badge\">\n            <NotificationBadge :type=\"type\" />\n        </div>\n        <div class=\"notification-message\">\n            <span v-if=\"type === 'info'\" :class=\"type\">Info</span>\n            <span v-if=\"type === 'warning'\" :class=\"type\">Warning</span>\n            <span v-if=\"type === 'error'\" :class=\"type\">Error</span>\n            <span class=\"message\">{{ message }}</span>\n        </div>\n        <button @click=\"remove\" tabindex=\"-1\"><Cross color=\"white\"  tabindex=\"-1\"/></button>\n    </div>\n</template>\n\n<script>\nimport Cross from '../icons/Cross.vue';\nimport NotificationBadge from './NotificationBadge.vue';\nimport { notificationStore } from '../core/stores';\n\nexport default {\n    components: {\n        Cross,\n        NotificationBadge,\n    },\n    props: {\n        message: {\n            type: String,\n            required: true,\n        },\n\n        type: {\n            type: String,\n            required: true,\n        },\n\n        border: {\n            type: String,\n            default: 'none',\n        },\n\n        index: {\n            type: Number,\n            default: 0,\n        },\n    },\n    data() {\n        return {\n            notificationStore,\n        };\n    },\n    methods: {\n        remove() {\n            notificationStore.removeOne(this.index);\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.notification-container {\n    display: flex;\n    align-items: center;\n    gap: $spacing-l;\n    /* This calculation need to\n     get width of space between paddings\n     in notification panel\n  */\n    height: 90px;\n    border-radius: 15px;\n    padding: $spacing-m;\n\n    &.border {\n        border: 1px solid $gray-200;\n    }\n\n    & > .notification-badge {\n        flex-basis: 35px;\n    }\n\n    & > .notification-message {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        font-size: $fs-small;\n        min-width: 0;\n\n        & > .message {\n            overflow: hidden;\n            display: -webkit-box;\n            -webkit-line-clamp: 1;\n            -webkit-box-orient: vertical;\n        }\n\n        & > .info {\n            color: $green;\n        }\n\n        & > .warning {\n            color: $gold;\n        }\n\n        & > .error {\n            color: $red;\n        }\n\n        & > span:last-child {\n            color: $white;\n        }\n    }\n}\n</style>\n","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<!--\nBadge that is displayed next to the notification.\nCan be either an exclamation mark or an x mark\n-->\n\n<template>\n    <div :class=\"type\">\n        <ExclamationMark v-if=\"type === 'info'\" />\n        <ExclamationMark v-if=\"type === 'warning'\" rotate=\"flip\" />\n        <Cross v-if=\"type === 'error'\" color=\"white\" />\n    </div>\n</template>\n\n<script>\nimport ExclamationMark from '../icons/ExclamationMark.vue';\nimport Cross from '../icons/Cross.vue';\n\nexport default {\n    components: {\n        ExclamationMark,\n        Cross,\n    },\n    props: {\n        type: {\n            type: String,\n            required: true,\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\ndiv {\n    width: 35px;\n    height: 35px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.info {\n    background-color: $green;\n}\n\n.warning {\n    background-color: $gold;\n}\n\n.error {\n    background-color: $red;\n}\n</style>\n","import { render } from \"./NotificationBadge.vue?vue&type=template&id=9ef0f814&scoped=true\"\nimport script from \"./NotificationBadge.vue?vue&type=script&lang=js\"\nexport * from \"./NotificationBadge.vue?vue&type=script&lang=js\"\n\nimport \"./NotificationBadge.vue?vue&type=style&index=0&id=9ef0f814&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9ef0f814\"]])\n\nexport default __exports__","import { render } from \"./Notification.vue?vue&type=template&id=0512bfcb&scoped=true\"\nimport script from \"./Notification.vue?vue&type=script&lang=js\"\nexport * from \"./Notification.vue?vue&type=script&lang=js\"\n\nimport \"./Notification.vue?vue&type=style&index=0&id=0512bfcb&lang=scss&scoped=true\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0512bfcb\"]])\n\nexport default __exports__","<!--\nCopyright (c) 2022-2023 Antmicro <www.antmicro.com>\n\nSPDX-License-Identifier: Apache-2.0\n-->\n\n<template>\n    <div class=\"__tooltip\" :style=\"styles\">\n        {{ text }}\n    </div>\n</template>\n\n<script>\nimport { defineComponent, computed } from 'vue';\n\nexport default defineComponent({\n    props: {\n        top: {\n            type: Number,\n            default: 0,\n        },\n        left: {\n            type: Number,\n            default: 0,\n        },\n        text: {\n            type: String,\n            required: true,\n        },\n    },\n    setup(props) {\n        const styles = computed(() => {\n            const s = {};\n            s.top = `${props.top}px`;\n            s.left = `${props.left}px`;\n            return s;\n        });\n\n        return { styles };\n    },\n});\n</script>\n\n<style lang=\"scss\">\n.__tooltip {\n    z-index: 4;\n    font-size: $fs-small;\n    color: $white;\n    position: absolute;\n    text-align: center;\n    flex-direction: column;\n    width: max-content;\n\n    margin: 1em 0;\n    padding: 1em;\n    background-color: $gray-600;\n    border: 1px solid $gray-500;\n    border-radius: 15px;\n\n    transform: translateX(-50%);\n}\n</style>\n","import { render } from \"./Tooltip.vue?vue&type=template&id=7e6bd8f7\"\nimport script from \"./Tooltip.vue?vue&type=script&lang=js\"\nexport * from \"./Tooltip.vue?vue&type=script&lang=js\"\n\nimport \"./Tooltip.vue?vue&type=style&index=0&id=7e6bd8f7&lang=scss\"\n\nimport exportComponent from \"/__w/topwrap_test_CI/topwrap_test_CI/docs/build/kpm/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","script","props","position","type","Object","required","rightclickCallback","Function","setup","graph","viewModel","styles","cx","x","value","panning","scaling","cy","y","r","dragMove","useDragMove","stopDrag","onPointerUp","document","removeEventListener","onPointerMove","startDrag","ev","editor","readonly","onPointerDown","addEventListener","_ctx","_cache","$props","$setup","$data","$options","onPointerdown","args","class","_","style","text","String","default","eventFunction","for","components","Cross","Notification","computed","notifications","notificationsLength","data","notificationStore","methods","removeAll","length","tabindex","index","key","message","border","externalApplicationManager","metadataChanged","name","notifyAboutChange","metadata","connectionStyleOption","option","connectionRenderer","setPort","events","setValue","subscribe","this","v","componentName","randomizedOffsetOption","randomizedOffset","backgroundGridSize","settings","background","gridSize","movementStep","LayoutOption","layoutManager","items","getAvailableAlgorithms","map","algorithmName","usedAlgorithm","useAlgorithm","LayoutApply","button","applyAutolayout","center","centerZoom","clearEditor","deepCleanEditor","disableLayersOptions","options","layers","forEach","layer","ignoredLayers","has","delete","add","push","logLevel","select","keys","s","toUpperCase","readonlyOptions","settingOptions","concat","getOptionName","component","intf","modelValue","Boolean","saveConfiguration","emits","emit","undefined","hideHud","dataflowname","InputInterface","setComponent","close","save","saveCallback","additionalOptions","displayableOptions","saveName","saveBlob","blob","filename","linkElement","createElement","href","window","URL","createObjectURL","download","click","saveSpecificationConfiguration","Blob","JSON","stringify","EditorManager","saveSpecification","reset","saveGraphConfiguration","saveDataflow","saveCallbackCustomFormat","saveElement","mimeType","Logo","Arrow","Run","CassetteStop","Validate","Backend","Bell","DropdownItem","Expand","Collapse","Notifications","Magnifier","Cogwheel","Settings","Cube","SaveMenu","BlurPanel","CustomSidebar","dataflowGraphName","editorManager","graphName","editorTitle","appName","normalizedGraphName","trim","preview","urlParams","URLSearchParams","location","search","get","settingsOpen","panels","isOpen","notificationsOpen","paletteOpen","palette","backendStatusOpen","backendStatus","notificationsTooltipClasses","last","backendStatusTooltipClasses","backendAvailable","settingsTooltipClasses","navbarItems","baklavaView","item","icons","iconName","icon","cache","leftButtonsQuantity","isInSubgraph","rightButtonsQuantity","isNavBarCompressed","isMounted","windowWidth","buttonWidth","searchbarWidthMultiplcity","mobileClasses","nodesearchInputStyles","width","leftContainerStyles","rightContainerStyles","activeNavbarItems","activeNavbarItemsNames","watch","newValue","updateSubgraphName","searchEditorNodesQuery","searchQuery","toLowerCase","procedureName","VUE_APP_EDITOR_TITLE","editorTitleInterface","updateActiveNavbarItems","saveMenuShow","editTitle","showSearch","crossIcon","navbarGuard","hoverInfo","isHovered","hoveredPanel","iconRef","showTransform","hideTransform","$isMobile","nodesearch","fullscreen","loadSpecification","specText","validationErrors","Array","isArray","updateEditorSpecification","then","errors","warnings","createNewGraphCallback","loadSpecificationCallback","file","getElementById","files","fileReader","FileReader","onload","result","readAsText","togglePanel","panel","disable","panelSelector","querySelector","$refs","isPanelOpen","transition","transform","classList","toggle","toggleFullscreen","clickOutside","event","currentElement","target","Node","contains","loadDataflow","dataflow","messageTitle","loadDataflowCallback","async","exception","SyntaxError","toString","actionItem","isInProgress","isStoppable","requestDataflowStop","activeAction","includes","requestDataflowAction","prompt","requestDataflowExport","content","importDataflow","exportToPng","nodeEditor","filter","node","imagePlaceholder","dataUrl","downloadLink","dataset","downloadurl","join","body","appendChild","removeChild","catch","error","exportToSvg","onClickNodeSearch","$nextTick","searchbarInput","focus","openNavbar","navbar","handleMouseLeave","displayedGraph","sidebar","visible","closest","remove","updateHoverInfo","isRunnable","resetHoverInfo","procedure","inProgress","appCapabilities","stoppable_methods","getNavbarActionTooltip","stopName","activeItems","Set","allowToRunInParallelWith","from","returnFromSubgraph","offsetWidth","innerWidth","startStatusInterval","ref","$event","hover","role","imgURI","rotate","color","placeholder","active","n","terminalInstance","term","htermSettings","logs","logsLength","printLog","log","io","print","replace","renderIndex","localStorage","setItem","scrollPort_","contenteditable","onTerminalReady","sendString","string","requestTerminalRead","onVTKeystroke","onTerminalResize","installKeyboard","decorate","newIns","newLen","oldIns","oldLen","setCursorVisible","scrollHome","wipeContents","slice","Indicator","Bin","Terminal","resizer","terminalWrapper","activeTerminal","isTerminalPanelOpened","terminalPanelHeight","arrowHovered","terminalWrapperStyles","height","Math","max","resizerStyles","displayedTerminals","terminalNamesLengths","lengths","values","names","tuples","i","newVal","oldVal","oldNames","tuple","find","t","hasNewMessage","immediate","setReadMessages","terminalName","terminal","toggleTerminalPanel","_a","_b","terminalHeight","clearTerminalOutput","pipelineSpanClasses","terminalIndicatorColor","_component_Indicator","_component_Bin","_component_Arrow","_component_Terminal","onClick","onMouseenter","onMouseleave","scale","SelfBuildingSquareSpinner","size","NavBar","Editor","TerminalPanel","LoadingScreen","finishedLoading","e","handleLoadFinish","ExclamationMark","NotificationBadge","Number","top","left"],"sourceRoot":""}